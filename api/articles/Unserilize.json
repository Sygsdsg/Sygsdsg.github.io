{"title":"Unserialize","uid":"aead1356d56fb4acb210e498b4d44c7a","slug":"Unserilize","date":"2024-10-23T13:07:30.000Z","updated":"2024-10-23T14:02:14.236Z","comments":true,"path":"api/articles/Unserilize.json","keywords":null,"cover":"/image/6.png","content":"<h1 id=\"Unserialize\"><a href=\"#Unserialize\" class=\"headerlink\" title=\"Unserialize\"></a>Unserialize</h1><h2 id=\"前置知识\"><a href=\"#前置知识\" class=\"headerlink\" title=\"前置知识\"></a>前置知识</h2><p><img src=\"/post/Unserilize/clip_image002.gif\" alt=\"img\"></p>\n<p>  <strong><img src=\"/post/Unserilize/clip_image004.gif\" alt=\"img\"></strong></p>\n<p>   <strong>序列化后语句为</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a:3:&#123;s:4:&quot;name&quot;;s:8:&quot;John Doe&quot;;s:3:&quot;age&quot;;i:25;s:6:&quot;grades&quot;;a:3:&#123;i:0;i:85;i:1;i:90;i:2;i:78;&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>a:3: 表示这是一个关联数组类型（即 Array）。</li>\n<li>{} 表示数组元素的开始和结束。</li>\n<li>s:4:”name”;     表示键名为 “name” 的字符串类型元素，长度为 4。</li>\n<li>s:8:”John     Doe”; 表示键名为 “name” 的字符串类型值，长度为 8。</li>\n<li>s:3:”age”;     表示键名为 “age” 的字符串类型元素，长度为 3。</li>\n<li>i:25; 表示键名为 “age” 的整数类型值。</li>\n<li>s:6:”grades”;     表示键名为 “grades” 的字符串类型元素，长度为 6。</li>\n<li>a:3:{} 表示一个索引数组类型（即 Array），包含三个元素。</li>\n<li>i:0;i:85; 表示第一个元素的键名为 0，值为 85。</li>\n<li>i:1;i:90; 表示第二个元素的键名为 1，值为 90。</li>\n<li>i:2;i:78; 表示第三个元素的键名为 2，值为 78。</li>\n</ul>\n<h2 id=\"魔术变量\"><a href=\"#魔术变量\" class=\"headerlink\" title=\"魔术变量\"></a>魔术变量</h2><h3 id=\"construct\"><a href=\"#construct\" class=\"headerlink\" title=\"__construct()\"></a>__construct()</h3><h4 id=\"构造函数实例化对象时触发\"><a href=\"#构造函数实例化对象时触发\" class=\"headerlink\" title=\"构造函数实例化对象时触发\"></a>构造函数实例化对象时触发</h4><h3 id=\"destruct\"><a href=\"#destruct\" class=\"headerlink\" title=\"__destruct()\"></a>__destruct()</h3><h4 id=\"析构函数对象销毁时unserialize后触发\"><a href=\"#析构函数对象销毁时unserialize后触发\" class=\"headerlink\" title=\"析构函数对象销毁时unserialize后触发\"></a>析构函数对象销毁时unserialize后触发</h4><p><img src=\"/post/Unserilize/clip_image006.gif\" alt=\"img\"></p>\n<h4 id=\"基础漏洞实例\"><a href=\"#基础漏洞实例\" class=\"headerlink\" title=\"基础漏洞实例\"></a>基础漏洞实例</h4><p><img src=\"/post/Unserilize/clip_image008.gif\" alt=\"img\"></p>\n<h3 id=\"sleep\"><a href=\"#sleep\" class=\"headerlink\" title=\"__sleep\"></a>__sleep</h3><h4 id=\"序列化之前触发\"><a href=\"#序列化之前触发\" class=\"headerlink\" title=\"序列化之前触发\"></a>序列化之前触发</h4><p><img src=\"/post/Unserilize/clip_image010.gif\" alt=\"img\"></p>\n<p><img src=\"/post/Unserilize/clip_image012.gif\" alt=\"img\"></p>\n<p><strong>sleep与 serialize捆绑</strong>，所以<strong>url传参</strong>时直接传<strong>命令本体</strong></p>\n<h3 id=\"wakeup\"><a href=\"#wakeup\" class=\"headerlink\" title=\"__wakeup\"></a>__wakeup</h3><h4 id=\"反序列化之前触发\"><a href=\"#反序列化之前触发\" class=\"headerlink\" title=\"反序列化之前触发\"></a>反序列化之前触发</h4><p><strong>用法与sleep相似</strong></p>\n<p>Wakeup与unserialize捆绑</p>\n<p>所以<strong>url传参</strong>时直接传<strong>命令的序列化形式</strong></p>\n<p><strong>Eg:</strong></p>\n<p><strong><img src=\"/post/Unserilize/clip_image014.gif\" alt=\"img\"></strong></p>\n<p><strong>摘出wakeup中相关的参数,写php运行出相应的payload</strong>序列化式命令 </p>\n<p><img src=\"/post/Unserilize/clip_image016.gif\" alt=\"img\"></p>\n<p><img src=\"/post/Unserilize/clip_image018.gif\" alt=\"img\"></p>\n<p><strong>进行url传参获取目标</strong></p>\n<p><strong><img src=\"/post/Unserilize/clip_image020.gif\" alt=\"img\"></strong></p>\n<h4 id=\"Wakeup绕过\"><a href=\"#Wakeup绕过\" class=\"headerlink\" title=\"Wakeup绕过\"></a>Wakeup绕过</h4><p><strong>当序列化字符串中表示对象属性个数的值大于真实的属性个数时</strong></p>\n<p>会跳过__wakeup的执行</p>\n<p> 可见题解 <a href=\"https://www.nssctf.cn/note/set/2934\">https://www.nssctf.cn/note/set/2934</a></p>\n<h3 id=\"toString-NaN\"><a href=\"#toString-NaN\" class=\"headerlink\" title=\"__toString()\"></a>__toString()</h3><h4 id=\"把对象当做字符串调用时触发\"><a href=\"#把对象当做字符串调用时触发\" class=\"headerlink\" title=\"把对象当做字符串调用时触发\"></a>把<strong>对象当做字符串</strong>调用时触发</h4><p>相关函数 <code>strtolower()</code></p>\n<p>Eg:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"variable\">$benben</span> = <span class=\"string\">&quot;this is test!!&quot;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;格式不对，输出不了!&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$test</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>(<span class=\"variable\">$test</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$test</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User Object ( [benben] =&gt; this is test!! ) </span><br><span class=\"line\">格式不对，输出不了!</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/Unserilize/clip_image024.gif\" alt=\"img\"> </p>\n<p>标记的两句均把<strong>对象当做字符串</strong>调用</p>\n<h3 id=\"invoke\"><a href=\"#invoke\" class=\"headerlink\" title=\"__invoke()\"></a>__invoke()</h3><h4 id=\"把对象当函数调用时触发\"><a href=\"#把对象当函数调用时触发\" class=\"headerlink\" title=\"把对象当函数调用时触发\"></a>把对象当函数调用时触发</h4><p>触发相关代码</p>\n<p>return $bb();</p>\n<p>示例</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"variable\">$benben</span> = <span class=\"string\">&quot;this is test!!&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__invoke</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;它不是个函数!&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>; <span class=\"comment\">// return $this to allow chaining</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$test</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$test</span>-&gt;benben;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$test</span>()-&gt;benben; <span class=\"comment\">// This will now work correctly</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>执行结果</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this is test!!</span><br><span class=\"line\">它不是个函数!</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"call\"><a href=\"#call\" class=\"headerlink\" title=\"__call()\"></a>__call()</h3><h4 id=\"调用不存在的方法或函数时触发\"><a href=\"#调用不存在的方法或函数时触发\" class=\"headerlink\" title=\"调用不存在的方法或函数时触发\"></a>调用不存在的方法或函数时触发</h4><p>触发相关代码</p>\n<p> $this<code>-&gt;</code>start<code>-&gt;</code>helloworld<code>();</code></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span>(<span class=\"params\"><span class=\"variable\">$arg1</span>, <span class=\"variable\">$arg2</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$arg1</span>,<span class=\"subst\">$arg2</span>[0]&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$test</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\"><span class=\"variable\">$test</span>-&gt;<span class=\"title function_ invoke__\">callxxx</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">//执行结果 callxxx,a</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"callStatic-静态）\"><a href=\"#callStatic-静态）\" class=\"headerlink\" title=\"__callStatic() (静态）\"></a>__callStatic() (静态）</h3><h4 id=\"调用不存在的成员方法触发\"><a href=\"#调用不存在的成员方法触发\" class=\"headerlink\" title=\"调用不存在的成员方法触发\"></a>调用不存在的成员方法触发</h4><p>静态调用：**$test::callxxx(‘a’)**</p>\n<p><img src=\"/post/Unserilize/clip_image026.gif\" alt=\"img\"></p>\n<p><img src=\"/post/Unserilize/clip_image027.gif\" alt=\"img\"></p>\n<h3 id=\"get\"><a href=\"#get\" class=\"headerlink\" title=\"__get()\"></a>__get()</h3><h4 id=\"调用不存在的成员属性时触发\"><a href=\"#调用不存在的成员属性时触发\" class=\"headerlink\" title=\"调用不存在的成员属性时触发\"></a>调用不存在的成员属性时触发</h4><h4 id=\"访问其他类中私有属性\"><a href=\"#访问其他类中私有属性\" class=\"headerlink\" title=\"访问其他类中私有属性\"></a>访问其他类中私有属性</h4><p><img src=\"/post/Unserilize/clip_image029.gif\" alt=\"img\"></p>\n<h4 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"__set()\"></a>__set()</h4><h4 id=\"给不存在的成员属性赋值时触发\"><a href=\"#给不存在的成员属性赋值时触发\" class=\"headerlink\" title=\"给不存在的成员属性赋值时触发\"></a>给不存在的成员属性赋值时触发</h4><p><img src=\"/post/Unserilize/clip_image031.gif\" alt=\"img\"></p>\n<h3 id=\"isset-和-unset\"><a href=\"#isset-和-unset\" class=\"headerlink\" title=\"__isset()和__unset()\"></a>__<code>isset()和__unset()</code></h3><h4 id=\"调用protrcted-private-不存在的成员属性时触发\"><a href=\"#调用protrcted-private-不存在的成员属性时触发\" class=\"headerlink\" title=\"调用protrcted &#x2F;private &#x2F; 不存在的成员属性时触发\"></a>调用protrcted &#x2F;private &#x2F; 不存在的成员属性时触发</h4><h3 id=\"clone\"><a href=\"#clone\" class=\"headerlink\" title=\"__clone()\"></a>__clone()</h3><h4 id=\"当使用clone关键字拷贝完一个对象时触发\"><a href=\"#当使用clone关键字拷贝完一个对象时触发\" class=\"headerlink\" title=\"当使用clone关键字拷贝完一个对象时触发\"></a>当使用clone关键字拷贝完一个对象时触发</h4><h2 id=\"字符串逃逸\"><a href=\"#字符串逃逸\" class=\"headerlink\" title=\"字符串逃逸\"></a>字符串逃逸</h2><h3 id=\"减少\"><a href=\"#减少\" class=\"headerlink\" title=\"减少\"></a>减少</h3><p><img src=\"/post/Unserilize/clip_image033.gif\" alt=\"img\"></p>\n<p><strong>前后引号不计入长度</strong> </p>\n<p>“system()”字符串长度为8</p>\n<p>三个为24；就会多吃掉24个字符串</p>\n<p>将<strong>xx</strong>对应<strong>v2成员属性长度</strong>和构造<strong>v3总字符串长度之和</strong></p>\n<p><img src=\"/post/Unserilize/clip_image035.gif\" alt=\"img\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">str__replace</span>(“<span class=\"title function_ invoke__\">system</span>()”,” ”,<span class=\"variable\">$data</span>);</span><br><span class=\"line\"><span class=\"comment\">//将$data中的system（）替换成空字符</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"/post/Unserilize/clip_image037.gif\" alt=\"img\"></p>\n<p>构造时注意闭合</p>\n<p><img src=\"/post/Unserilize/clip_image039.gif\" alt=\"img\"></p>\n<p>用var_dump(unserialize())来判断是否成功逃逸 成功逃逸标志 看obj个数</p>\n<p><img src=\"/post/Unserilize/clip_image041.gif\" alt=\"img\"></p>\n<h4 id=\"字符串逃逸减少例题讲解视频\"><a href=\"#字符串逃逸减少例题讲解视频\" class=\"headerlink\" title=\"字符串逃逸减少例题讲解视频\"></a>字符串逃逸减少例题讲解视频</h4><p><a href=\"https://www.bilibili.com/video/BV1R24y1r71C?p=18&vd_source=dbbe851caa5969ed57ce1b7f9b095e7c\">https://www.bilibili.com/video/BV1R24y1r71C?p=18&amp;vd_source=dbbe851caa5969ed57ce1b7f9b095e7c</a></p>\n<p>例题网站：<a href=\"http://192.168.38.128:8002/class17/1.php\">http://192.168.38.128:8002/class17/1.php</a></p>\n<p>**字符串逃逸减少 **</p>\n<p>构造用到成员属性多**(需要2个)**</p>\n<p><strong>构造时不要漏掉成员属性</strong></p>\n<h3 id=\"增多\"><a href=\"#增多\" class=\"headerlink\" title=\"增多\"></a>增多</h3><p><a href=\"https://www.bilibili.com/video/BV1R24y1r71C?p=17&vd_source=dbbe851caa5969ed57ce1b7f9b095e7c\">https://www.bilibili.com/video/BV1R24y1r71C?p=17&amp;vd_source=dbbe851caa5969ed57ce1b7f9b095e7c</a></p>\n<p>例题网站：<a href=\"http://192.168.38.128:8002/class16/1.php\">http://192.168.38.128:8002/class16/1.php</a></p>\n<p>**字符串逃逸 增多 构造用到成员属性少（1个）增多题目 **</p>\n<p><strong>用var_dump来检验</strong></p>\n<p><strong><img src=\"/post/Unserilize/clip_image043.gif\" alt=\"img\"></strong></p>\n<p>在此题中<strong>仅构造user</strong>即可，无需管pass(因为pass目标值已构造在user中)，</p>\n<p><strong>吐出字符数量</strong>要和 <img src=\"/post/Unserilize/clip_image045.gif\" alt=\"img\"> 相匹配<strong>（从   ”;   开始计数到   ;}   停止)</strong></p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p><img src=\"/post/Unserilize/clip_image047.gif\" alt=\"img\"></p>\n<p>在此题中若要保证enter和sercret一致</p>\n<p><strong>可以让secret引用enter的值</strong></p>\n<p><img src=\"/post/Unserilize/clip_image049.gif\" alt=\"img\"></p>\n<h4 id=\"引用符号\"><a href=\"#引用符号\" class=\"headerlink\" title=\"**&amp;**引用符号\"></a>**&amp;**引用符号</h4><p><img src=\"/post/Unserilize/clip_image051.gif\" alt=\"img\"></p>\n<h2 id=\"phar文件利用\"><a href=\"#phar文件利用\" class=\"headerlink\" title=\"phar文件利用\"></a>phar文件利用</h2><p><img src=\"/post/Unserilize/clip_image053.gif\" alt=\"img\"></p>\n<p><img src=\"/post/Unserilize/clip_image055.gif\" alt=\"img\"></p>\n<h4 id=\"利用条件\"><a href=\"#利用条件\" class=\"headerlink\" title=\"利用条件\"></a>利用条件</h4><p><img src=\"/post/Unserilize/clip_image057.gif\" alt=\"img\"></p>\n<p><strong>Php.ini中的phar.readonly要开启</strong></p>\n<h4 id=\"Phar文件构造\"><a href=\"#Phar文件构造\" class=\"headerlink\" title=\"Phar文件构造\"></a>Phar文件构造</h4><p><strong><img src=\"/post/Unserilize/clip_image059.gif\" alt=\"img\"></strong></p>\n<p><strong>变更第三行的class和第十一行实例化的对象,生成文件内容如下</strong></p>\n<p><strong><img src=\"/post/Unserilize/clip_image061.gif\" alt=\"img\"></strong></p>\n<p><strong>生成txt.phar之后改后缀.Jpg .png .gif 上传</strong></p>\n<p><strong>Post传参 获取flag</strong></p>\n<p><strong><img src=\"/post/Unserilize/clip_image063.gif\" alt=\"img\"></strong></p>\n<p><strong>例题</strong> <a href=\"https://www.nssctf.cn/problem/3018\"><strong>https://www.nssctf.cn/problem/3018</strong></a></p>\n<p>​    <a href=\"https://www.nssctf.cn/problem/466\"><strong>https://www.nssctf.cn/problem/466</strong></a></p>\n","feature":true,"text":"Unserialize前置知识 序列化后语句为 1a:3:{s:4:\"name\";s:8:\"John Doe\";s:3:\"age\";i:25;s:6:\"grad...","permalink":"/post/Unserilize","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"ctf入门","slug":"ctf入门","count":6,"path":"api/categories/ctf入门.json"}],"tags":[{"name":"ctf","slug":"ctf","count":5,"path":"api/tags/ctf.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Unserialize\"><span class=\"toc-text\">Unserialize</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">前置知识</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AD%94%E6%9C%AF%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">魔术变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#construct\"><span class=\"toc-text\">__construct()</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%AF%B9%E8%B1%A1%E6%97%B6%E8%A7%A6%E5%8F%91\"><span class=\"toc-text\">构造函数实例化对象时触发</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#destruct\"><span class=\"toc-text\">__destruct()</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%E9%94%80%E6%AF%81%E6%97%B6unserialize%E5%90%8E%E8%A7%A6%E5%8F%91\"><span class=\"toc-text\">析构函数对象销毁时unserialize后触发</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E6%BC%8F%E6%B4%9E%E5%AE%9E%E4%BE%8B\"><span class=\"toc-text\">基础漏洞实例</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sleep\"><span class=\"toc-text\">__sleep</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8B%E5%89%8D%E8%A7%A6%E5%8F%91\"><span class=\"toc-text\">序列化之前触发</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#wakeup\"><span class=\"toc-text\">__wakeup</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8B%E5%89%8D%E8%A7%A6%E5%8F%91\"><span class=\"toc-text\">反序列化之前触发</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Wakeup%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">Wakeup绕过</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#toString-NaN\"><span class=\"toc-text\">__toString()</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8A%8A%E5%AF%B9%E8%B1%A1%E5%BD%93%E5%81%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%B0%83%E7%94%A8%E6%97%B6%E8%A7%A6%E5%8F%91\"><span class=\"toc-text\">把对象当做字符串调用时触发</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#invoke\"><span class=\"toc-text\">__invoke()</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8A%8A%E5%AF%B9%E8%B1%A1%E5%BD%93%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%97%B6%E8%A7%A6%E5%8F%91\"><span class=\"toc-text\">把对象当函数调用时触发</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#call\"><span class=\"toc-text\">__call()</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B0%83%E7%94%A8%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E6%96%B9%E6%B3%95%E6%88%96%E5%87%BD%E6%95%B0%E6%97%B6%E8%A7%A6%E5%8F%91\"><span class=\"toc-text\">调用不存在的方法或函数时触发</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#callStatic-%E9%9D%99%E6%80%81%EF%BC%89\"><span class=\"toc-text\">__callStatic() (静态）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B0%83%E7%94%A8%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E6%88%90%E5%91%98%E6%96%B9%E6%B3%95%E8%A7%A6%E5%8F%91\"><span class=\"toc-text\">调用不存在的成员方法触发</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#get\"><span class=\"toc-text\">__get()</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B0%83%E7%94%A8%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E6%88%90%E5%91%98%E5%B1%9E%E6%80%A7%E6%97%B6%E8%A7%A6%E5%8F%91\"><span class=\"toc-text\">调用不存在的成员属性时触发</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AE%BF%E9%97%AE%E5%85%B6%E4%BB%96%E7%B1%BB%E4%B8%AD%E7%A7%81%E6%9C%89%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">访问其他类中私有属性</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#set\"><span class=\"toc-text\">__set()</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%99%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E6%88%90%E5%91%98%E5%B1%9E%E6%80%A7%E8%B5%8B%E5%80%BC%E6%97%B6%E8%A7%A6%E5%8F%91\"><span class=\"toc-text\">给不存在的成员属性赋值时触发</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#isset-%E5%92%8C-unset\"><span class=\"toc-text\">__isset()和__unset()</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B0%83%E7%94%A8protrcted-private-%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E6%88%90%E5%91%98%E5%B1%9E%E6%80%A7%E6%97%B6%E8%A7%A6%E5%8F%91\"><span class=\"toc-text\">调用protrcted &#x2F;private &#x2F; 不存在的成员属性时触发</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#clone\"><span class=\"toc-text\">__clone()</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BD%93%E4%BD%BF%E7%94%A8clone%E5%85%B3%E9%94%AE%E5%AD%97%E6%8B%B7%E8%B4%9D%E5%AE%8C%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%97%B6%E8%A7%A6%E5%8F%91\"><span class=\"toc-text\">当使用clone关键字拷贝完一个对象时触发</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8\"><span class=\"toc-text\">字符串逃逸</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%8F%E5%B0%91\"><span class=\"toc-text\">减少</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8%E5%87%8F%E5%B0%91%E4%BE%8B%E9%A2%98%E8%AE%B2%E8%A7%A3%E8%A7%86%E9%A2%91\"><span class=\"toc-text\">字符串逃逸减少例题讲解视频</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A2%9E%E5%A4%9A\"><span class=\"toc-text\">增多</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%95%E7%94%A8\"><span class=\"toc-text\">引用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BC%95%E7%94%A8%E7%AC%A6%E5%8F%B7\"><span class=\"toc-text\">**&amp;**引用符号</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#phar%E6%96%87%E4%BB%B6%E5%88%A9%E7%94%A8\"><span class=\"toc-text\">phar文件利用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">利用条件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Phar%E6%96%87%E4%BB%B6%E6%9E%84%E9%80%A0\"><span class=\"toc-text\">Phar文件构造</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Sygsdsg","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/10/23/6718a2ef955e1.jpg","link":"/","description":"嘻嘻","socials":{"github":"https://github.com/Sygsdsg/Sygsdsg.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Unserialize","uid":"aead1356d56fb4acb210e498b4d44c7a","slug":"Unserialize","date":"2024-10-23T13:07:30.000Z","updated":"2024-10-23T13:28:25.186Z","comments":true,"path":"api/articles/Unserialize.json","keywords":null,"cover":"/image/6.png","text":"Unserialize前置知识 序列化后语句为 1a:3:{s:4:\"name\";s:8:\"John Doe\";s:3:\"age\";i:25;s:6:\"grad...","permalink":"/post/Unserialize","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"ctf入门","slug":"ctf入门","count":6,"path":"api/categories/ctf入门.json"}],"tags":[{"name":"ctf","slug":"ctf","count":5,"path":"api/tags/ctf.json"}],"author":{"name":"Sygsdsg","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/10/23/6718a2ef955e1.jpg","link":"/","description":"嘻嘻","socials":{"github":"https://github.com/Sygsdsg/Sygsdsg.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"LFI","uid":"8b370a147ba28b5f9bf92d0ab1030d7d","slug":"LFI","date":"2024-10-23T13:05:28.000Z","updated":"2024-10-23T13:15:05.085Z","comments":true,"path":"api/articles/LFI.json","keywords":null,"cover":"/image/5.jpg","text":"文件上传判断漏洞形式 一句话木马 后缀 空格和点搭配 反复试 eg a.php. . 后缀 %00和0x00截断 %00需要PHP版本小于5.3.4 %00截断...","permalink":"/post/LFI","photos":[],"count_time":{"symbolsCount":695,"symbolsTime":"1 mins."},"categories":[{"name":"ctf入门","slug":"ctf入门","count":6,"path":"api/categories/ctf入门.json"}],"tags":[{"name":"ctf","slug":"ctf","count":5,"path":"api/tags/ctf.json"}],"author":{"name":"Sygsdsg","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/10/23/6718a2ef955e1.jpg","link":"/","description":"嘻嘻","socials":{"github":"https://github.com/Sygsdsg/Sygsdsg.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}