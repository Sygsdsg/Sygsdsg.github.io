{"title":"Crypto","uid":"839c443677170baa42195892cea08ce8","slug":"Crypto","date":"2024-11-12T13:48:53.000Z","updated":"2024-11-12T13:52:10.148Z","comments":true,"path":"api/articles/Crypto.json","keywords":null,"cover":"/image/9.png","content":"<h1 id=\"Crypto\"><a href=\"#Crypto\" class=\"headerlink\" title=\"Crypto\"></a>Crypto</h1><h2 id=\"加密算法的安全定义\"><a href=\"#加密算法的安全定义\" class=\"headerlink\" title=\"加密算法的安全定义\"></a>加密算法的安全定义</h2><p><img src=\"/post/Crypto/image-20240903000722149.png\" alt=\"image-20240903000722149\"></p>\n<h2 id=\"1-JSFUCK-2-颜文字\"><a href=\"#1-JSFUCK-2-颜文字\" class=\"headerlink\" title=\"1 JSFUCK 2 颜文字\"></a>1 JSFUCK 2 颜文字</h2><p>1 +[]]+(!![]+[])[+[]]+  2 ((ﾟДﾟ)+’_’) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ]</p>\n<p>控制台输入输出  软件或在线</p>\n<p>颜 <a href=\"http://hi.pcmoe.net/kaomoji.html\">http://hi.pcmoe.net/kaomoji.html</a></p>\n<p>js <a href=\"http://www.hiencode.com/jsfuck.html\">http://www.hiencode.com/jsfuck.html</a></p>\n<h2 id=\"Rabbit\"><a href=\"#Rabbit\" class=\"headerlink\" title=\"Rabbit\"></a>Rabbit</h2><p><img src=\"/post/Crypto/image-20240821145200860.png\" alt=\"image-20240821145200860\"></p>\n<p><a href=\"http://www.jsons.cn/rabbitencrypt/\">http://www.jsons.cn/rabbitencrypt/</a></p>\n<h2 id=\"Brainfuck\"><a href=\"#Brainfuck\" class=\"headerlink\" title=\"Brainfuck .\"></a>Brainfuck .</h2><p>okk </p>\n<p>所有的操作都由这八种符号 <strong>(&gt; &lt; + - . , [ ])</strong> </p>\n<p>++++[-&gt; +++]</p>\n<h2 id=\"Srepent\"><a href=\"#Srepent\" class=\"headerlink\" title=\"Srepent\"></a>Srepent</h2><p><a href=\"http://serpent.online-domain-tools.com/%E5%9C%A8%E7%BA%BF%E8%A7%A3%E5%AF%86\">http://serpent.online-domain-tools.com/%E5%9C%A8%E7%BA%BF%E8%A7%A3%E5%AF%86</a> 梯子</p>\n<h2 id=\"Quoted-printable\"><a href=\"#Quoted-printable\" class=\"headerlink\" title=\"Quoted-printable .\"></a>Quoted-printable .</h2><p>一个等号”&#x3D;”后跟随两个十六进制数字(0–9或A–F)</p>\n<p>E7&#x3D;9A&#x3D;84&#x3D;E9&#x3D;94&#x3D;80&#x3D;E9&#x3D;AD&#x3D;82</p>\n<p><a href=\"https://www.cnblogs.com/ruoli-s/p/14206145.html#brainfuck%E7%BC%96%E7%A0%81\">https://www.cnblogs.com/ruoli-s/p/14206145.html#brainfuck%E7%BC%96%E7%A0%81</a></p>\n<h2 id=\"当铺密码\"><a href=\"#当铺密码\" class=\"headerlink\" title=\"当铺密码 .\"></a>当铺密码 .</h2><p>由田中 由田井 羊夫 由田人 由中人 羊羊 由由王 由田中 由由大 由田工 由由由 由由羊 由中大</p>\n<h2 id=\"分组密码的工作模式\"><a href=\"#分组密码的工作模式\" class=\"headerlink\" title=\"分组密码的工作模式\"></a>分组密码的工作模式</h2><h3 id=\"ECB\"><a href=\"#ECB\" class=\"headerlink\" title=\"ECB\"></a>ECB</h3><p>用相同的密钥分别对明文分组单独加密</p>\n<p><img src=\"/post/Crypto/image-20240830134216576.png\" alt=\"image-20240830134216576\"></p>\n<p>·优点:每个数据块独立加密,可并行加密,实现简单<br>·缺点:相同明文会产生相同密文,不具备数据完整保护性<br>适用于短消息的加密传输(如一个加密密钥)</p>\n<h3 id=\"CBC\"><a href=\"#CBC\" class=\"headerlink\" title=\"CBC\"></a>CBC</h3><p>将前一个密文块与当前明文块进行异或运算后再加密<br>初始向量(IV)用于第一个块的加密。</p>\n<p><img src=\"/post/Crypto/image-20240830134310856.png\" alt=\"image-20240830134310856\"></p>\n<p>优点:每个密文块的加密依赖前一个密文块,具备数据完整性保护<br>缺点:错误传播、不适合并行处理、<br>适用于常规文件加密、非实时加密等场景</p>\n<p>CBC攻击文章</p>\n<p><a href=\"https://cn-sec.com/archives/1971484.html\">https://cn-sec.com/archives/1971484.html</a></p>\n<h4 id=\"CBC长度攻击例题\"><a href=\"#CBC长度攻击例题\" class=\"headerlink\" title=\"CBC长度攻击例题\"></a>CBC长度攻击例题</h4><p><strong>2023熵密杯初始题目</strong></p>\n<p>前置知识</p>\n<p><strong>任何数与自身异或结果都是0</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MSG1:218c86db500df382791940a7b4af5964 f34c4bd5c03d4a13ed122e01c426112c</span><br><span class=\"line\">MAC1:bd3ddfe024d0765d57623f4ec118cd65</span><br><span class=\"line\">-----------------------------------------------------</span><br><span class=\"line\">MSG2:d591dede3ee96f2bd3d27b61f9631899 02d3279f2eae95eb944916f8541fac45</span><br><span class=\"line\">MAC2:62445b8535c327f675b6837e5cbb7162</span><br><span class=\"line\">-----------------------------------------------------</span><br><span class=\"line\">请输入您的MSG3(64字节，128个Hex，不要添加空格！)</span><br><span class=\"line\">请输入您的MAC3</span><br></pre></td></tr></table></figure>\n\n<p>可见msg1和msg2长度均为32字节，要求的msg3是64字节，及要将<strong>两者拼接在一起</strong>进行<strong>长度伪造攻击</strong></p>\n<p>并且拼接出来密文的mac要与后半段的mac相同（这里选择msg2为后半段）即mac3&#x3D;mac2</p>\n<p>将msg2<strong>对半拆分为msg2a msg2b</strong></p>\n<p><strong>msg3&#x3D;msg1||mac1^msg2a||msg2b</strong></p>\n<p><strong>mac3&#x3D;mac2</strong> 即伪造成功</p>\n<p><strong>原理</strong></p>\n<p>![c47273e8aef7af04b68cd09db4252ec](C:\\Users\\Sygsdsg\\Documents\\WeChat Files\\wxid_wmo5o0x10s9712\\FileStorage\\Temp\\c47273e8aef7af04b68cd09db4252ec.jpg)</p>\n<h3 id=\"CFB\"><a href=\"#CFB\" class=\"headerlink\" title=\"CFB\"></a>CFB</h3><p>将前一个密文块作为输入进行加密,生成一个密钥流,再与当前明文块进行异<br>或运算得到密文块</p>\n<p><img src=\"/post/Crypto/image-20240830134506015.png\" alt=\"image-20240830134506015\"></p>\n<p>优点<br>可变长度的加密操作<br>实时性<br>可以部分解密数据</p>\n<p>缺点:<br>密文分组的错误传播敏感<br>不适合并行处理的场景<br>需要保证初始向量的唯一性和完整性</p>\n<p>适用于流加密和对特定部分数据进行随机访问的场景</p>\n<p>基于分组密码的消息认证码</p>\n<h3 id=\"OFB\"><a href=\"#OFB\" class=\"headerlink\" title=\"OFB\"></a>OFB</h3><p>将前一个加密算法的输出作为输入进行加密,生成一个密钥流,再与当前明文<br>块进行异或运算得到密文块。</p>\n<p><img src=\"/post/Crypto/image-20240830134937729.png\" alt=\"image-20240830134937729\"></p>\n<p><img src=\"/post/Crypto/image-20240830135007318.png\" alt=\"image-20240830135007318\"></p>\n<p>优点:<br>可变长度的加密操作<br>实时性<br>对密文分组的错误不敏感</p>\n<p>缺点:<br>传输错误不可恢复<br>无法提供数据完整性保护<br>不支持并行加密</p>\n<p>适用于实时数据流加密和随机访问的场景</p>\n<h3 id=\"CTR\"><a href=\"#CTR\" class=\"headerlink\" title=\"CTR\"></a>CTR</h3><p>每一个明文分组都与一个经过加密的计数器异或。对每个后续的分组,计数器增1。</p>\n<p><img src=\"/post/Crypto/image-20240830135159343.png\" alt=\"image-20240830135159343\"></p>\n<p>优点:<br>并行处理<br>随机访问<br>不受错误传播影响</p>\n<p>缺点:<br>计数器必须唯一<br>密钥流和明文相关性较弱</p>\n<p>适用于并行加密、随机访问和实时加密的场景</p>\n<p><img src=\"/post/Crypto/image-20240830135254948.png\" alt=\"image-20240830135254948\"></p>\n<h2 id=\"MAC-消息验证码\"><a href=\"#MAC-消息验证码\" class=\"headerlink\" title=\"MAC 消息验证码\"></a>MAC 消息验证码</h2><h3 id=\"HMAC-Hash-based-Message-Authentication-Code\"><a href=\"#HMAC-Hash-based-Message-Authentication-Code\" class=\"headerlink\" title=\"HMAC (Hash-based Message Authentication Code)\"></a>HMAC (Hash-based Message Authentication Code)</h3><p>![image-20240830135520950](C:\\Users\\Sygsdsg\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240830135520950.png</p>\n<p><img src=\"/post/Crypto/image-20240830135713667.png\" alt=\"image-20240830135713667\"></p>\n<p>||为连接操作</p>\n<p>ipad&#x3D;00110110 (0x36)不断循环直至达到散列函数分组长度<br>opad&#x3D;01011100 (0x5c) 不断循环直至达到散列函数分组长度</p>\n<p>若密钥长度&lt;Hash的分组长度<br>key&#x3D;密钥0000…(末尾填充0,直到长度达到Hash分组长度<br>若密钥长度&gt;Hash的分组长度<br>key&#x3D;Hash(密钥)<br>(将密钥进行单向散列的结果作为key)</p>\n<p><img src=\"/post/Crypto/image-20240830140420398.png\" alt=\"image-20240830140420398\"></p>\n<h2 id=\"DES\"><a href=\"#DES\" class=\"headerlink\" title=\"DES\"></a>DES</h2><h3 id><a href=\"#\" class=\"headerlink\" title></a><img src=\"/post/Crypto/image-20240830140711623.png\" alt=\"image-20240830140711623\"></h3><h2 id=\"OPENSSL\"><a href=\"#OPENSSL\" class=\"headerlink\" title=\"OPENSSL\"></a>OPENSSL</h2><p>openssl提取公钥</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl x509 -in certificate.crt -pubkey -noout &gt; public_key.pem</span><br></pre></td></tr></table></figure>\n\n<p>生成SM2私钥</p>\n<p><code>openssl ecparam -genkey -name sm2 -out sm2_private_key.pem</code></p>\n<p>从已有的SM2私钥中生成公钥：</p>\n<p><code>openssl ec -in sm2_private_key.pem -pubout -out sm2_public_key.pem</code></p>\n<p>已经有一个SM2私钥,生成公钥</p>\n<p><code>openssl ec -in your_private_key.pem -pubout -out your_public_key.pem</code></p>\n<h2 id=\"数字签名\"><a href=\"#数字签名\" class=\"headerlink\" title=\"数字签名\"></a>数字签名</h2><p>数字签名：防止中途被篡改和防止发送方抵赖的一种数字安全验证方式。</p>\n<p>原理：</p>\n<p>发送端 A：通过一定的Hash算法对要发送的原文 生成【摘要】，并 利用自己的“私钥” 将 【原文】和【摘要】分别进行加密得到【原文的密文】和【摘要的密文】，并将这两个文件都发送到接收端。</p>\n<p>接收端 B：拿到 发送端发送过来的 【原文的密文】和【摘要的密文】。利用 发送端 A 的“公钥”进行分别解密，获得  【解密的原文】和【解密的摘要】。并用对【解密的原文】通过 发送端 A  相同的Hash算法，生成【摘要】，并与【解密的摘要】进行对比。若一致，则说明，内容未被修改，且 为发送端 A 所发送。</p>\n<p><img src=\"/post/Crypto/image-20240904000327860.png\" alt=\"image-20240904000327860\"></p>\n<h2 id=\"加密通讯与签名验签的区别\"><a href=\"#加密通讯与签名验签的区别\" class=\"headerlink\" title=\"加密通讯与签名验签的区别\"></a>加密通讯与签名验签的区别</h2><p>我们说非对称加密都是公钥加密，私钥解密，那么数字签名这里如何理解私钥加密，公钥解密？</p>\n<p>- 私钥加密（也较签名），公钥解密（也叫验签），<strong>签名与验签</strong>：一般应用于对一段摘要（通过计算原文获取，因为私钥加密长度有限制，而且摘要运算速度比签名快）进行签名，由对方来负责验证是签名，该操作的目的具有验证数据完成性，不可抵赖性，可用于银行转账的报文。签名操作用在终端（手机或电脑），确认操作在银行服务器（验证签名的可靠性）。</p>\n<p>- 公钥加密，私钥解密：一般用于<strong>加密通信</strong>，例如：加密电子邮件，我用B的公钥加密一段数据，然后发送给B，只有B的私钥可以解密我发送的原文，可以在公网上传输，被中间者攻击也无所谓，反正也解不出原文，但是一般使用当中不直接使用公钥加密消息，因为有长度限制，通常会先生成一个对称密钥，用对称密钥加密消息，然后在用公钥加密对称密钥。</p>\n<h3 id=\"CA证书\"><a href=\"#CA证书\" class=\"headerlink\" title=\"CA证书\"></a>CA证书</h3><p>在签名的过程中，有一点很关键，收到数据的一方，需要自己保管好公钥，但是要知道每一个发送方都有一个公钥，那么接收数据的人需要保存非常多的公钥，这根本就管理不过来。并且本地保存的公钥有可能被篡改替换，无从发现。怎么解决这一问题了？由<strong>一个统一的证书管理机构</strong>来管理所有需要发送数据方的公钥，<strong>对公钥进行认证和加密</strong>。这个机构也就是我们常说的CA。<strong>认证加密后的公钥，即是证书，又称为CA证书</strong>，证书中包含了很多信息，<strong>最重要的是申请者的公钥。</strong></p>\n<p>CA机构在给<strong>公钥加密</strong>时，<strong>用的是一个统一的密钥对，在加密公钥时，用的是其中的私钥</strong>。这样，申请者拿到证书后，在发送数据时，用自己的私钥生成签名，将签名、证书和发送内容一起发给对方，对方拿到了证书后，需要对证书解密以获取到证书中的公钥，解密需要用到CA机构的”统一密钥对“中的公钥，这个公钥也就是我们常说的CA根证书，通常需要我们到证书颁发机构去下载并安装到相应的收取数据的客户端，如浏览器上面。这个公钥只需要安装一次。有了这个公钥之后，就可以解密证书，拿到发送方的公钥，然后解密发送方发过来的签名，获取摘要，重新计算摘要，作对比，以验证数据内容的完整性。</p>\n<h2 id=\"常见非法签名攻击\"><a href=\"#常见非法签名攻击\" class=\"headerlink\" title=\"常见非法签名攻击\"></a>常见非法签名攻击</h2><ol>\n<li><p>**重放攻击 (Replay Attack)**：</p>\n<ul>\n<li><strong>描述</strong>：攻击者捕获并重用合法签名的数据包或交易。由于签名验证机制不能检测出这些重复的操作，攻击者可以在系统中重复提交相同的签名。</li>\n<li><strong>防御</strong>：引入时间戳、序列号或唯一的事务标识符，以确保每个签名的唯一性和有效性。</li>\n</ul>\n</li>\n<li><p>**伪造签名 (Forged Signature)**：</p>\n<ul>\n<li><strong>描述</strong>：攻击者通过获得或破解私钥，伪造合法的签名。攻击者可能使用伪造的私钥生成签名，以冒充合法用户。</li>\n<li><strong>防御</strong>：采用强大的加密算法和密钥管理措施，确保私钥的安全性，并定期更换密钥。</li>\n</ul>\n</li>\n<li><p>**中间人攻击 (Man-in-the-Middle Attack)**：</p>\n<ul>\n<li><strong>描述</strong>：攻击者在客户端和服务器之间截获和篡改数据，伪造签名或篡改签名数据。攻击者可以在通信过程中插入恶意数据或修改原始数据。</li>\n<li><strong>防御</strong>：使用加密的传输通道（如HTTPS&#x2F;TLS）来保护数据的完整性和机密性，防止数据在传输过程中被篡改。</li>\n</ul>\n</li>\n<li><p>**签名伪造 (Signature Spoofing)**：</p>\n<ul>\n<li><strong>描述</strong>：攻击者通过研究合法签名的模式或结构，伪造一个与合法签名相似的签名，从而欺骗系统。</li>\n<li><strong>防御</strong>：使用强大的签名算法和验证机制，避免设计上的漏洞和弱点，使伪造签名变得极其困难。</li>\n</ul>\n</li>\n<li><p>**签名碰撞攻击 (Signature Collision Attack)**：</p>\n<ul>\n<li><strong>描述</strong>：攻击者利用加密算法的碰撞漏洞，找到两个不同的输入具有相同的签名，从而伪造合法的签名。尤其在使用哈希函数时，如果存在碰撞漏洞，攻击者可以生成不同的数据，但它们有相同的签名。</li>\n<li><strong>防御</strong>：使用抗碰撞的加密哈希函数，如SHA-256或SHA-3，来减少碰撞攻击的风险。</li>\n</ul>\n</li>\n<li><p>**签名替换 (Signature Substitution)**：</p>\n<ul>\n<li><strong>描述</strong>：攻击者用非法签名替换合法签名，以绕过安全检查。例如，攻击者可能篡改电子邮件的签名或文件的数字签名，以伪造合法内容。</li>\n<li><strong>防御</strong>：实施完整性检查和双重验证机制，确保签名在存储和传输过程中未被篡改。</li>\n</ul>\n</li>\n<li><p>**证书伪造 (Certificate Forgery)**：</p>\n<ul>\n<li><p><strong>描述</strong>：攻击者伪造数字证书，使其看起来像是由可信任的证书颁发机构签发的。攻击者可以使用这些伪造的证书进行恶意活动，如伪造签名。</p>\n</li>\n<li><p><strong>防御</strong>：使用公共密钥基础设施（PKI）和证书链验证机制，确保证书的真实性和有效性，并定期检查和更新证书列表。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"协同签名系统常见漏洞\"><a href=\"#协同签名系统常见漏洞\" class=\"headerlink\" title=\"协同签名系统常见漏洞\"></a>协同签名系统常见漏洞</h2><ol>\n<li><strong>密钥管理不当</strong>：<ul>\n<li><strong>私钥泄露</strong>：如果私钥被非法获取，攻击者可以伪造签名。</li>\n<li><strong>密钥生成弱</strong>：生成的密钥可能不够强，容易被破解。</li>\n<li><strong>密钥存储不安全</strong>：私钥如果存储在不安全的位置（如未加密的文件或不安全的硬件），可能被盗取。</li>\n</ul>\n</li>\n<li><strong>认证机制弱</strong>：<ul>\n<li><strong>弱密码</strong>：如果系统依赖于简单密码或其他弱认证方式，容易被破解。</li>\n<li><strong>多因素认证缺失</strong>：没有使用多因素认证，增加了账户被侵入的风险。</li>\n<li><strong>用户验证不足</strong>：没有有效的方法确认用户的身份，可能导致身份冒用。</li>\n</ul>\n</li>\n<li><strong>数据篡改</strong>：<ul>\n<li><strong>未签名的数据</strong>：在数据传输或存储过程中，未进行签名，数据可能被篡改而不被发现。</li>\n<li><strong>签名算法漏洞</strong>：如果签名算法本身存在漏洞，可能导致篡改检测失败。</li>\n</ul>\n</li>\n<li><strong>过期或伪造证书</strong>：<ul>\n<li><strong>证书过期</strong>：使用过期的数字证书，可能会被拒绝验证或被误用。</li>\n<li><strong>伪造证书</strong>：伪造的证书可以被用于欺骗系统，进行伪造签名。</li>\n</ul>\n</li>\n<li><strong>软件漏洞</strong>：<ul>\n<li><strong>漏洞利用</strong>：软件存在的安全漏洞可能被利用进行攻击，比如缓冲区溢出或代码注入。</li>\n<li><strong>未更新的软件</strong>：未及时更新的软件可能存在已知的安全漏洞。</li>\n</ul>\n</li>\n<li><strong>用户操作失误</strong>：<ul>\n<li><strong>误操作</strong>：用户可能因操作不当导致签名失效或无效。</li>\n<li><strong>缺乏培训</strong>：用户对电子签名系统的不熟悉或操作不当可能导致安全问题。</li>\n</ul>\n</li>\n<li><strong>不安全的传输通道</strong>：<ul>\n<li><strong>数据传输未加密</strong>：如果签名数据在传输过程中没有加密，可能被截获和篡改。</li>\n<li><strong>中间人攻击</strong>：攻击者可以通过拦截和篡改通信数据来伪造签名。</li>\n</ul>\n</li>\n<li><strong>不充分的审计和日志</strong>：<ul>\n<li><strong>缺乏审计</strong>：没有有效的日志记录和审计机制，可能无法检测和追踪签名的创建和使用情况。</li>\n<li><strong>日志篡改</strong>：日志文件可能被篡改，掩盖真实的操作和问题。</li>\n</ul>\n</li>\n</ol>\n<p>​\t9.<strong>路径遍历导致访问密钥</strong></p>\n<h2 id=\"RSA\"><a href=\"#RSA\" class=\"headerlink\" title=\"RSA\"></a>RSA</h2><p><img src=\"/post/Crypto/image-20240917143314510.png\" alt=\"image-20240917143314510\"></p>\n<p><img src=\"/post/Crypto/image-20240917143352060.png\" alt=\"image-20240917143352060\"></p>\n<h3 id=\"1-选择素数-p-和-q，并计算模数-n-和欧拉函数-ϕ-n\"><a href=\"#1-选择素数-p-和-q，并计算模数-n-和欧拉函数-ϕ-n\" class=\"headerlink\" title=\"1. 选择素数 p 和 q，并计算模数 n 和欧拉函数 ϕ(n)\"></a>1. 选择素数 p 和 q，并计算模数 n 和欧拉函数 ϕ(n)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pythonimport gmpy2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选择两个大素数 p 和 q</span></span><br><span class=\"line\">p = gmpy2.mpz(<span class=\"string\">&#x27;3233&#x27;</span>)  <span class=\"comment\"># 示例素数</span></span><br><span class=\"line\">q = gmpy2.mpz(<span class=\"string\">&#x27;17&#x27;</span>)    <span class=\"comment\"># 示例素数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算模数 n</span></span><br><span class=\"line\">n = p * q</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算欧拉函数 phi(n)</span></span><br><span class=\"line\">phi = (p - <span class=\"number\">1</span>) * (q - <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;模数 n: <span class=\"subst\">&#123;n&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;欧拉函数 phi(n): <span class=\"subst\">&#123;phi&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-选择公钥指数-e-和计算私钥指数-d\"><a href=\"#2-选择公钥指数-e-和计算私钥指数-d\" class=\"headerlink\" title=\"2. 选择公钥指数 e 和计算私钥指数 d\"></a>2. 选择公钥指数 e 和计算私钥指数 d</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pythonimport gmpy2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 已知公钥指数 e 和欧拉函数 phi(n)</span></span><br><span class=\"line\">e = gmpy2.mpz(<span class=\"number\">65537</span>)  <span class=\"comment\"># 示例公钥指数</span></span><br><span class=\"line\">phi = gmpy2.mpz(<span class=\"number\">3232</span>) <span class=\"comment\"># 示例欧拉函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算私钥指数 d</span></span><br><span class=\"line\">d = gmpy2.invert(e, phi)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;私钥指数 d: <span class=\"subst\">&#123;d&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">phi=(q-<span class=\"number\">1</span>)*(p-<span class=\"number\">1</span>)</span><br><span class=\"line\">phi1=mpz(phi)</span><br><span class=\"line\">d=<span class=\"built_in\">pow</span>(e, -<span class=\"number\">1</span>, phi1)  <span class=\"comment\">#mpz不可缺少</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-加密和解密过程\"><a href=\"#3-加密和解密过程\" class=\"headerlink\" title=\"3. 加密和解密过程\"></a>3. 加密和解密过程</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python</span><br><span class=\"line\"><span class=\"keyword\">import</span> gmpy2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设公钥 (e, n) 和私钥 (d, n) 已知</span></span><br><span class=\"line\">e = gmpy2.mpz(<span class=\"number\">65537</span>)</span><br><span class=\"line\">d = gmpy2.mpz(<span class=\"number\">2753</span>)</span><br><span class=\"line\">n = gmpy2.mpz(<span class=\"number\">3233</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加密</span></span><br><span class=\"line\">m = gmpy2.mpz(<span class=\"number\">65</span>)  <span class=\"comment\"># 明文消息，假设为 65</span></span><br><span class=\"line\">c = gmpy2.powmod(m, e, n)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解密</span></span><br><span class=\"line\">m_decrypted = gmpy2.powmod(c, d, n)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;密文 c: <span class=\"subst\">&#123;c&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;解密后的明文 m: <span class=\"subst\">&#123;m_decrypted&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-利用方程组解出-q-p\"><a href=\"#4-利用方程组解出-q-p\" class=\"headerlink\" title=\"4.利用方程组解出 q,p\"></a>4.利用方程组解出 q,p</h3><p><img src=\"/post/Crypto/image-20240917143535147.png\" alt=\"image-20240917143535147\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sympy <span class=\"keyword\">import</span> symbols, Eq, solve</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义符号变量</span></span><br><span class=\"line\"></span><br><span class=\"line\">p, q = symbols(<span class=\"string\">&#x27;p q&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义方程</span></span><br><span class=\"line\"></span><br><span class=\"line\">some_value = <span class=\"number\">168</span>  <span class=\"comment\"># 示例值</span></span><br><span class=\"line\">sum_value = <span class=\"number\">20</span>    <span class=\"comment\"># 示例值</span></span><br><span class=\"line\"></span><br><span class=\"line\">res1 = Eq((p - <span class=\"number\">5</span>) * (q - <span class=\"number\">5</span>), some_value)</span><br><span class=\"line\">res2 = Eq(p + q, sum_value)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解方程组</span></span><br><span class=\"line\"></span><br><span class=\"line\">solution = solve([res1, res2], (p, q))</span><br><span class=\"line\"></span><br><span class=\"line\">p=solution[<span class=\"number\">0</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\">q=solution[<span class=\"number\">0</span>][<span class=\"number\">1</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(p)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(q)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(solution)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>RSA算法的安全性依赖于大整数的分解困难。它通过两个大素数 pp 和 qq 生成模数 nn 和欧拉函数 ϕ(n)ϕ(n)，然后选择公钥指数 ee 和计算私钥指数 dd。公钥用于加密，私钥用于解密。通过这些元素的数学关系，RSA提供了一种安全的数据加密和解密方法</p>\n","feature":true,"text":"Crypto加密算法的安全定义 1 JSFUCK 2 颜文字1 +[]]+(!![]+[])[+[]]+ 2 ((ﾟДﾟ)+’_’) [ (ﾟｰﾟ)+(ﾟｰﾟ)...","permalink":"/post/Crypto","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"ctf入门","slug":"ctf入门","count":7,"path":"api/categories/ctf入门.json"}],"tags":[{"name":"Crypto","slug":"Crypto","count":1,"path":"api/tags/Crypto.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Crypto\"><span class=\"toc-text\">Crypto</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E7%9A%84%E5%AE%89%E5%85%A8%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">加密算法的安全定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-JSFUCK-2-%E9%A2%9C%E6%96%87%E5%AD%97\"><span class=\"toc-text\">1 JSFUCK 2 颜文字</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Rabbit\"><span class=\"toc-text\">Rabbit</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Brainfuck\"><span class=\"toc-text\">Brainfuck .</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Srepent\"><span class=\"toc-text\">Srepent</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Quoted-printable\"><span class=\"toc-text\">Quoted-printable .</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BD%93%E9%93%BA%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">当铺密码 .</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">分组密码的工作模式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ECB\"><span class=\"toc-text\">ECB</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CBC\"><span class=\"toc-text\">CBC</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#CBC%E9%95%BF%E5%BA%A6%E6%94%BB%E5%87%BB%E4%BE%8B%E9%A2%98\"><span class=\"toc-text\">CBC长度攻击例题</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CFB\"><span class=\"toc-text\">CFB</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#OFB\"><span class=\"toc-text\">OFB</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CTR\"><span class=\"toc-text\">CTR</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MAC-%E6%B6%88%E6%81%AF%E9%AA%8C%E8%AF%81%E7%A0%81\"><span class=\"toc-text\">MAC 消息验证码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HMAC-Hash-based-Message-Authentication-Code\"><span class=\"toc-text\">HMAC (Hash-based Message Authentication Code)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#DES\"><span class=\"toc-text\">DES</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#OPENSSL\"><span class=\"toc-text\">OPENSSL</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D\"><span class=\"toc-text\">数字签名</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8A%A0%E5%AF%86%E9%80%9A%E8%AE%AF%E4%B8%8E%E7%AD%BE%E5%90%8D%E9%AA%8C%E7%AD%BE%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">加密通讯与签名验签的区别</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CA%E8%AF%81%E4%B9%A6\"><span class=\"toc-text\">CA证书</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E9%9D%9E%E6%B3%95%E7%AD%BE%E5%90%8D%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">常见非法签名攻击</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%8F%E5%90%8C%E7%AD%BE%E5%90%8D%E7%B3%BB%E7%BB%9F%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">协同签名系统常见漏洞</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#RSA\"><span class=\"toc-text\">RSA</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%80%89%E6%8B%A9%E7%B4%A0%E6%95%B0-p-%E5%92%8C-q%EF%BC%8C%E5%B9%B6%E8%AE%A1%E7%AE%97%E6%A8%A1%E6%95%B0-n-%E5%92%8C%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0-%CF%95-n\"><span class=\"toc-text\">1. 选择素数 p 和 q，并计算模数 n 和欧拉函数 ϕ(n)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E9%80%89%E6%8B%A9%E5%85%AC%E9%92%A5%E6%8C%87%E6%95%B0-e-%E5%92%8C%E8%AE%A1%E7%AE%97%E7%A7%81%E9%92%A5%E6%8C%87%E6%95%B0-d\"><span class=\"toc-text\">2. 选择公钥指数 e 和计算私钥指数 d</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%8A%A0%E5%AF%86%E5%92%8C%E8%A7%A3%E5%AF%86%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">3. 加密和解密过程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%88%A9%E7%94%A8%E6%96%B9%E7%A8%8B%E7%BB%84%E8%A7%A3%E5%87%BA-q-p\"><span class=\"toc-text\">4.利用方程组解出 q,p</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li></ol></li></ol>","author":{"name":"Sygsdsg","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/10/23/6718a2ef955e1.jpg","link":"/","description":"嘻嘻","socials":{"github":"https://github.com/Sygsdsg/Sygsdsg.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"nmap","uid":"a5cc34d9f1161e4ea6e38a4495c34745","slug":"nmap","date":"2024-11-12T13:52:44.000Z","updated":"2024-11-12T13:54:35.049Z","comments":true,"path":"api/articles/nmap.json","keywords":null,"cover":"/image/14.png","text":"nmap主机发现12345nmap -sn ip x/y eg:** **nmap -sn 192.168.30.0/24 #（扫内网）nmap -sn 152...","permalink":"/post/nmap","photos":[],"count_time":{"symbolsCount":666,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"工具","slug":"工具","count":1,"path":"api/tags/工具.json"}],"author":{"name":"Sygsdsg","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/10/23/6718a2ef955e1.jpg","link":"/","description":"嘻嘻","socials":{"github":"https://github.com/Sygsdsg/Sygsdsg.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"php特性","uid":"cd1787040df7226f24b8f728e6089b8f","slug":"php特性","date":"2024-11-12T13:38:25.000Z","updated":"2024-11-12T13:39:14.086Z","comments":true,"path":"api/articles/php特性.json","keywords":null,"cover":"/image/7.jpg","text":"php特性1.intval 也就是说传入是数组时，返回值为1 (弱比较) 此函数会将 + 空格来进行跳过判断 当base=0时，进制可以自定义 Web92传入其...","permalink":"/post/php特性","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"ctf入门","slug":"ctf入门","count":7,"path":"api/categories/ctf入门.json"}],"tags":[{"name":"ctf","slug":"ctf","count":7,"path":"api/tags/ctf.json"}],"author":{"name":"Sygsdsg","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/10/23/6718a2ef955e1.jpg","link":"/","description":"嘻嘻","socials":{"github":"https://github.com/Sygsdsg/Sygsdsg.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}